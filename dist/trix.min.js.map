{"version":3,"file":"trix.min.js","sources":["../src/trix/config/attachments.js","../src/trix/config/block_attributes.js","../src/trix/config/browser.js","../src/trix/config/lang.js","../src/trix/config/file_size_formatting.js","../src/trix/constants.js","../src/trix/core/helpers/extend.js","../src/trix/core/helpers/dom.js","../src/trix/config/key_names.js","../src/trix/config/text_attributes.js","../src/trix/config/undo_interval.js","../src/trix/config.js","../src/trix/config/css.js","../src/trix/config/input.js","../src/trix/config/toolbar.js","../src/trix/core/basic_object.js","../src/trix/core/utilities/utf16_string.js","../src/trix/core/object.js","../src/trix/core/helpers/arrays.js","../src/trix/core/helpers/bidi.js","../src/trix/core/helpers/config.js","../src/trix/core/helpers/custom_elements.js","../src/trix/core/helpers/events.js","../src/trix/core/helpers/functions.js","../src/trix/core/helpers/objects.js","../src/trix/core/helpers/ranges.js","../src/trix/observers/selection_change_observer.js","../src/trix/core/helpers/strings.js","../src/trix/core/collections/hash.js","../src/trix/core/utilities/operation.js","../src/trix/operations/image_preload_operation.js","../src/trix/models/attachment.js","../src/trix/models/managed_attachment.js","../src/trix/models/attachment_manager.js","../src/trix/models/piece.js","../src/trix/models/attachment_piece.js","../src/trix/models/string_piece.js","../src/trix/models/splittable_list.js","../src/trix/models/text.js","../src/trix/models/block.js","../src/trix/core/collections/object_map.js","../src/trix/models/document.js","../src/trix/models/html_sanitizer.js","../src/trix/models/html_parser.js","../src/trix/models/line_break_insertion.js","../src/trix/models/composition.js","../src/trix/models/undo_manager.js","../src/trix/filters/attachment_gallery_filter.js","../src/trix/models/editor.js","../src/trix/models/location_mapper.js","../src/trix/models/point_mapper.js","../src/trix/models/selection_manager.js","../src/trix/models.js","../src/trix/global.js","../src/trix/core/collections/object_group.js","../src/trix/core/collections/element_store.js","../src/trix/views/object_view.js","../src/trix/views/attachment_view.js","../src/trix/views/previewable_attachment_view.js","../src/trix/views/piece_view.js","../src/trix/views/text_view.js","../src/trix/views/block_view.js","../src/trix/views/document_view.js","../src/trix/core/serialization.js","../src/trix/observers/mutation_observer.js","../src/trix/controllers/controller.js","../src/trix/operations/file_verification_operation.js","../src/trix/controllers/input_controller.js","../src/trix/controllers/level_0_input_controller.js","../src/trix/controllers/level_2_input_controller.js","../src/trix/controllers/attachment_editor_controller.js","../src/trix/controllers/composition_controller.js","../src/trix/controllers/toolbar_controller.js","../src/trix/controllers/editor_controller.js","../src/trix/elements/trix_toolbar_element.js","../src/trix/elements/trix_editor_element.js"],"sourcesContent":["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n","const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return (\n        tagName(element.parentNode) === attributes[this.listAttribute].tagName\n      );\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return (\n        tagName(element.parentNode) === attributes[this.listAttribute].tagName\n      );\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n  alignLeft: {\n    tagName: \"b\",\n    parse: false,\n    nestable: false,\n    exclusive: true,\n  },\n  alignCenter: {\n    tagName: \"align-center\",\n    parse: false,\n    nestable: false,\n    exclusive: true,\n  },\n  alignRight: {\n    tagName: \"align-right\",\n    parse: false,\n    nestable: false,\n    exclusive: true,\n  },\n};\n\nconst tagName = (element) => element?.tagName?.toLowerCase();\n\nexport default attributes;\n","export default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: (function() {\n    if (typeof InputEvent === \"undefined\") {\n      return false\n    }\n    for (const property of [ \"data\", \"getTargetRanges\", \"inputType\" ]) {\n      if (!(property in InputEvent.prototype)) {\n        return false\n      }\n    }\n    return true\n  })(),\n}\n","export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n","/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","const undoInterval = 5000\nexport default undoInterval\n","import attachments from \"trix/config/attachments\"\nimport blockAttributes from \"trix/config/block_attributes\"\nimport browser from \"trix/config/browser\"\nimport css from \"trix/config/css\"\nimport fileSize from \"trix/config/file_size_formatting\"\nimport input from \"trix/config/input\"\nimport keyNames from \"trix/config/key_names\"\nimport lang from \"trix/config/lang\"\nimport textAttributes from \"trix/config/text_attributes\"\nimport toolbar from \"trix/config/toolbar\"\nimport undoInterval from \"trix/config/undo_interval\"\n\nconst config = {\n  attachments,\n  blockAttributes,\n  browser,\n  css,\n  fileSize,\n  input,\n  keyNames,\n  lang,\n  textAttributes,\n  toolbar,\n  undoInterval,\n}\n\nexport default config\n","export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n","import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n","import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(input.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      input.value = string\n      return new FormData(form).get(input.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n","const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.run = this.run.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      if (\"onselectionchange\" in document) {\n        return document.addEventListener(\"selectionchange\", this.update, true)\n      } else {\n        return this.run()\n      }\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((s) => s !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    const domRange = getDOMRange()\n    if (!domRangesAreEqual(domRange, this.domRange)) {\n      this.domRange = domRange\n      return this.notifySelectionManagersOfSelectionChange()\n    }\n  }\n\n  reset() {\n    this.domRange = null\n    return this.update()\n  }\n\n  // Private\n\n  run() {\n    if (this.started) {\n      this.update()\n      return requestAnimationFrame(this.run)\n    }\n  }\n}\n\nconst domRangesAreEqual = (left, right) =>\n  left?.startContainer === right?.startContainer &&\n  left?.startOffset === right?.startOffset &&\n  left?.endContainer === right?.endContainer &&\n  left?.endOffset === right?.endOffset\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    keys.forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n","import config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n","import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n","import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice(attribute))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n","import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes)\n  }\n\n  constructor(text, attributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","import config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray()).map((block) => JSON.parse(block.text.toConsole()))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}) => {\n  const text = []\n  return { text, attributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n          break\n        case \"td\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\" | \")\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","export const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\nconst BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nclass Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n","import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n","import Attachment from \"./models/attachment\"\nimport AttachmentManager from \"./models/attachment_manager\"\nimport AttachmentPiece from \"./models/attachment_piece\"\nimport Block from \"./models/block\"\nimport Composition from \"./models/composition\"\nimport Cocument from \"./models/document\"\nimport Editor from \"./models/editor\"\nimport HTMLParser from \"./models/html_parser\"\nimport HTMLSanitizer from \"./models/html_sanitizer\"\nimport LineBreakInsertion from \"./models/line_break_insertion\"\nimport LocationMapper from \"./models/location_mapper\"\nimport ManagedAttachment from \"./models/managed_attachment\"\nimport Piece from \"./models/piece\"\nimport PointMapper from \"./models/point_mapper\"\nimport SelectionManager from \"./models/selection_manager\"\nimport SplittableList from \"./models/splittable_list\"\nimport StringPiece from \"./models/string_piece\"\nimport Text from \"./models/text\"\nimport UndoManager from \"./models/undo_manager\"\n\nexport default {\n  Attachment,\n  AttachmentManager,\n  AttachmentPiece,\n  Block,\n  Composition,\n  Cocument,\n  Editor,\n  HTMLParser,\n  HTMLSanitizer,\n  LineBreakInsertion,\n  LocationMapper,\n  ManagedAttachment,\n  Piece,\n  PointMapper,\n  SelectionManager,\n  SplittableList,\n  StringPiece,\n  Text,\n  UndoManager,\n}\n","import { version } from \"../../package.json\"\nimport config from \"trix/config\"\nimport models from \"trix/models\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n}\n\nObject.assign(Trix, models)\n\nwindow.Trix = Trix\n\nexport default Trix\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n","import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","import config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      innerElement.innerHTML = this.attachment.getContent()\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  div.innerHTML = html || \"\"\n  return div.querySelector(tagName)\n}\n","import config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    let attributes, className\n    const attributeName = this.attributes[depth]\n\n    const { tagName } = getBlockConfig(attributeName)\n    if (depth === 0 && this.block.isRTL()) {\n      attributes = { dir: \"rtl\" }\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n","import config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n      if (handler) {\n        this.withEvent(event, handler)\n        return this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      return selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        return this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransfer.files?.length) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      return this.insertString(this.event.dataTransfer.getData(\"text/plain\"), { updatePosition: false })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"Files\") && clipboard.types.length === 1 && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n","import { removeNode } from \"trix/core/helpers\"\n\nimport config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName) {\n    return this.invokeAction(actionName)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undoInterval > 0) {\n      return Math.floor(new Date().getTime() / config.undoInterval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n\nwindow.customElements.define(\"trix-toolbar\", TrixToolbarElement)\n","import config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty:not(:focus)::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n\nwindow.customElements.define(\"trix-editor\", TrixEditorElement)\n"],"names":["attributes","default","tagName","parse","quote","nestable","heading1","terminal","breakOnReturn","group","code","text","plaintext","bulletList","bullet","listAttribute","test","element","parentNode","this","numberList","number","attachmentGallery","exclusive","alignLeft","alignCenter","alignRight","_element$tagName","toLowerCase","browser$1","composesExistingText","navigator","userAgent","forcesObjectResizing","supportsInputEvents","InputEvent","property","prototype","lang$1","attachFiles","bold","bullets","byte","bytes","captionPlaceholder","indent","italic","link","numbers","outdent","redo","remove","strike","undo","unlink","url","urlPlaceholder","GB","KB","MB","PB","TB","sizes","lang","fileSize","prefix","precision","formatter","base","exp","Math","floor","log","withoutInsignificantZeros","pow","toFixed","replace","concat","extend","properties","key","value","html","document","documentElement","match","matches","handleEvent","eventName","onElement","matchingSelector","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","call","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","closest","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","style","data","dataset","className","split","forEach","classList","add","textContent","childNodes","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","push","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","arguments","length","undefined","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","name","nodeIsTextNode","trixCursorTarget","nodeIsAttachmentElement","nodeIsEmptyTextNode","TEXT_NODE","textAttributes","inheritable","parser","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","attachmentSelector","getAttribute","frozen","backgroundColor","config","attachments","preview","presentation","caption","size","file","browser","css","attachment","attachmentCaption","attachmentCaptionEditor","attachmentMetadata","attachmentMetadataContainer","attachmentName","attachmentProgress","attachmentSize","attachmentToolbar","input","level2Enabled","getLevel","pickFiles","callback","type","multiple","hidden","id","fileInputId","files","getElementById","body","click","keyNames","toolbar","getDefaultHTML","undoInterval","BasicObject","proxyMethod","expression","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","apply","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","static","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","ucs2Length","offsetToUCS2Offset","offset","slice","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","_Array$from","hasStringCodePointAt","_$codePointAt","codePointAt","hasStringFromCodePoint","String","_String$fromCodePoint","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","array","result","fromCharCode","join","TrixObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","_len","_key","splice","RTL_PATTERN","getDirection","dir","dirName","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","Object","keys","getTextConfig","installDefaultCSSForTagName","defaultCSS","insertStyleElementForTagName","nonce","getCSPNonce","head","insertBefore","getMetaElement","querySelector","testTransferData","dataTransferIsPlainText","dataTransfer","getData","DOMParser","parseFromString","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","copyObject","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","left","right","domRangesAreEqual","startContainer","startOffset","endContainer","endOffset","selectionChangeObserver","update","bind","run","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","s","notifySelectionManagersOfSelectionChange","selectionDidChange","domRange","getDOMRange","reset","requestAnimationFrame","getDOMSelection","selection","getSelection","rangeCount","_getDOMSelection","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","getPrototypeOf","normalizeSpaces","NON_BREAKING_SPACE","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","release","_this$promise","_this$promise$cancel","cancel","ImagePreloadOperation","image","Image","onload","width","naturalWidth","height","naturalHeight","onerror","src","Attachment","attachmentForFile","attributesForFile","setFile","filename","filesize","contentType","attachmentJSON","releaseFile","didChangeAttributes","attribute","hasAttribute","getAttributes","setAttributes","newAttributes","_this$previewDelegate","_this$previewDelegate2","_this$delegate","_this$delegate$attach","previewDelegate","attachmentDidChangeAttributes","delegate","isPreviewable","preloadURL","isPending","getURL","getHref","previewablePattern","getContentType","getType","hasContent","getFilename","getFilesize","getFormattedFilesize","getExtension","_this$getFilename$mat","getContent","getWidth","getHeight","getFile","preloadFile","releasePreloadedFile","getUploadProgress","uploadProgress","setUploadProgress","_this$uploadProgressD","_this$uploadProgressD2","uploadProgressDelegate","attachmentDidChangeUploadProgress","getPreviewURL","previewURL","preloadingURL","setPreviewURL","_this$previewDelegate3","_this$previewDelegate4","_this$delegate2","_this$delegate2$attac","attachmentDidChangePreviewURL","preload","fileObjectURL","URL","createObjectURL","revokeObjectURL","then","_ref","catch","ManagedAttachment","attachmentManager","requestRemovalOfAttachment","AttachmentManager","managedAttachments","manageAttachment","getAttachments","attachmentIsManaged","attachmentManagerDidRequestRemovalOfAttachment","unmanageAttachment","managedAttachment","Piece","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","getAttributesHash","hasSameStringValueAsPiece","piece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","canBeGrouped","canBeGroupedWith","getLength","canBeConsolidatedWith","AttachmentPiece","ensureAttachmentExclusivelyHasAttribute","removeProhibitedAttributes","permittedAttributes","getCaption","_piece$attachment","json","toConsole","registerType","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","_pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","pieces","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","getPieces","find","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","_this$pieceList$getOb","getCommonAttributes","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","getAttachmentPieces","getAttachmentAndPositionById","attachmentId","getAttachmentById","getRangeOfAttachment","attachmentAndPosition","updateAttributesForAttachment","_text$pieceList","eachPiece","getPieceAtPosition","toSerializableText","isRTL","Block","blockJSON","applyBlockBreakToText","block","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","removeAttribute","removeLastValue","removeLastAttribute","getLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","_getBlockConfig","isTerminalBlock","_getBlockConfig2","breaksOnReturn","_getBlockConfig3","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","getBlockBreakPosition","textEndsInBlockBreak","depth","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","endText","ObjectMap","Document","documentJSON","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","getObjects","getBlocks","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","getTextAtIndex","removeAttributeForAttachment","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","blockIndex","lastAttributeIndex","min","attachmentPieces","iterable","getLocationRangeOfAttachment","getAttachmentPieceForAttachment","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","innerHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","querySelectorAll","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","pieceForString","parseTrixDataAttribute","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","cloneNode","display","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","_this$currentBlock","getBlockAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","firstElementChild","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","_node$previousSibling","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","appendAttachmentWithAttributes","isExtraBR","dimensions","parseInt","getImageDimensions","blockForAttributes","appendPiece","pieceForAttachment","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","styleProperty","attrConfig","_attrConfig$test","reverse","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","lastChild","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","setDocument","_this$delegate$compos","refreshAttachments","compositionDidChangeDocument","getSnapshot","loadSnapshot","_this$delegate2$compo","_this$delegate3","_this$delegate3$compo","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","insertFile","insertFiles","_this$delegate4","compositionShouldAcceptFile","insertAttachments","insertAttachment","_config$attachments$t","attachmentText","textForAttachmentWithAttributes","shouldManageDeletingInDirection","shouldManageMovingCursorInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","getAttachmentAtRange","editAttachment","moveTextFromRange","removeAttachment","stopEditingAttachment","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","_this$getBlock","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock2","_this$getBlock3","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","_this$delegate5","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","editingAttachment","moveCursorInDirection","canEditAttachment","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionContainsAttachments","_this$getSelectedAtta","getSelectedAttachments","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","_this$document$getPie","_this$getSelectedDocu","added","removed","oldArray","newArray","existingValues","Set","currentValues","summarizeArrayChange","_this$delegate6","_this$delegate6$compo","compositionDidRemoveAttachment","_this$delegate7","_this$delegate7$compo","compositionDidAddAttachment","_this$delegate8","_this$delegate8$compo","compositionDidEditAttachment","_this$delegate9","_this$delegate9$compo","compositionDidChangeAttachmentPreviewURL","_this$delegate10","_this$delegate10$comp","compositionDidStartEditingAttachment","_this$delegate11","_this$delegate11$comp","compositionDidStopEditingAttachment","newDocument","OBJECT_REPLACEMENT_CHARACTER","_this$delegate12","_this$delegate12$comp","compositionDidChangeCurrentAttributes","_this$delegate13","_this$delegate13$comp","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","context","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","Filter","applyBlockAttribute","findRangesOfBlocks","findRangesOfPieces","moveSelectedRangeForward","DEFAULT_FILTERS","Editor","undoManager","filters","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","attachmentElement","findAttachmentElementParentForNode","rejectAttachmentContents","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","nodes","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","_getDOMRange","collapsed","selectionIsExpanded","domRangeWithinElement","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","_this$delegate$locati","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","_this$createLocationR","models","Cocument","Trix","VERSION","assign","ObjectGroup","ungroupedObjects","asTree","_object$canBeGrouped2","_object$canBeGrouped","_group$canBeGroupedWi","_group","groupObjects","getDepth","ElementStore","elements","getKey","trixStoreKey","ObjectView","childViews","rootView","getNodes","createNodes","invalidate","_this$parentView","parentView","invalidateViewForObject","_this$findViewForObje","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","AttachmentView","attachmentPiece","createContentNodes","innerElement","figure","getClassName","tabindex","createCaptionElement","progressElement","class","trixMutable","createCursorTarget","figcaption","captionConfig","getCaptionConfig","nameElement","createTextNode","sizeElement","names","extension","trixAttachment","trixContentType","trixId","trixAttributes","trixSerialize","htmlContainsTagName","findProgressElement","_this$findElement","div","PreviewableAttachmentView","refresh","updateAttributesForImage","serializedAttributes","storeKey","PieceView","textConfig","createAttachmentNodes","createStringNodes","_element","findInnerElement","_this$textConfig","substring","preserveSpaces","styles","pendingElement","isLast","isFirst","followsWhitespace","TextView","lastIndex","endsWithWhitespace","previousPiece","BlockView","createComment","textView","shouldAddExtraNewlineElement","DocumentView","render","sync","elementStore","shadowElement","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","otherElement","ignoreSpaces","unserializableAttributeNames","serializedAttributesSelector","serializedAttributesAttribute","blockCommentPattern","serializers","serializable","HTMLElement","el","mutableSelector","mutableAttributeName","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","_this$delegate$elemen","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","Controller","FileVerificationOperation","reader","FileReader","abort","readAsArrayBuffer","InputController","mutationObserver","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","_this$delegate$inputC","inputControllerDidRequestRender","requestReparse","_this$delegate2$input","inputControllerDidRequestReparse","operations","all","handleInput","_this$responder","inputControllerWillAttachFiles","responder","defaultPrevented","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","pastedFileCount","Level0InputController","resetInputSummary","setInputSummary","inputSummary","isComposing","inputControllerDidAllowUnhandledInput","mutationIsExpected","preferDocument","mutationAdditionMatchesSummary","mutationDeletionMatchesSummary","didDelete","unexpectedNewlineAddition","unexpectedNewlineDeletion","_this$compositionInpu","textChanged","composedEmptyString","getEndData","compositionInput","getCompositionInput","CompositionInput","isEnded","_this$responder2","serializeSelectionToDataTransfer","_this$responder3","setData","dataTransferIsWritable","canAcceptDataTransfer","Files","getPastedHTMLUsingHiddenElement","pageXOffset","pageYOffset","opacity","focus","keydown","didInput","keyName","keyCode","_context2","modifier","_context","character","inputControllerDidReceiveKeyboardCommand","keypress","altKey","stringFromKeyEvent","_this$responder9","inputControllerWillPerformTyping","textInput","toUpperCase","_this$responder10","dragenter","dragstart","_this$delegate5$input","draggedRange","inputControllerDidStartDrag","dragover","draggingPoint","clientX","clientY","_this$delegate6$input","inputControllerDidReceiveDragOverPoint","dragend","_this$delegate7$input","inputControllerDidCancelDrag","drop","_event$dataTransfer","_this$responder11","_this$responder12","inputControllerWillMoveText","_this$responder13","cut","_this$responder14","clipboardData","inputControllerWillCutText","_this$responder15","paste","clipboard","testClipboardData","pasteEventIsCrippledSafariHTMLPaste","_this$responder16","inputControllerWillPaste","inputControllerDidPaste","_this$responder17","_this$delegate14","_this$responder18","_this$delegate15","_this$delegate16","_this$responder19","_this$delegate17","_clipboard$items","_clipboard$items$","_clipboard$items$$get","items","getAsFile","_this$delegate18","_this$responder20","_this$delegate19","extensionForFile","compositionstart","compositionupdate","compositionend","beforeinput","stopPropagation","backspace","_this$delegate20","delete","_this$delegate21","return","_this$delegate22","_this$responder21","tab","_this$responder22","_this$responder23","_this$responder24","_this$responder25","control","d","_this$delegate23","h","_this$delegate24","o","_this$delegate25","_this$responder26","shift","_this$delegate26","_this$responder27","_this$responder28","_this$responder29","alt","_this$delegate27","meta","_this$delegate28","_file$type","_file$type$match","which","charCode","hasPasteboardFlavor","hasReadableDynamicData","isExternalHTMLPaste","isExternalRichTextPaste","inputController","isSignificant","_this$responder5","_this$responder4","canApplyToDocument","_this$responder6","_this$responder7","_this$responder8","_this$data$start","_this$data$end","Level2InputController","scheduledRender","composing","reparse","scheduleRender","_this$afterRender","cancelAnimationFrame","afterRender","toggleAttributeIfSupported","inputControllerWillPerformFormatting","activateAttributeIfSupported","getTargetDOMRange","minLength","_this$event$getTarget","_this$event","targetRanges","getTargetRanges","staticRangeToRange","withEvent","command","keyboardCommandFromKeyEvent","shiftKey","_event$clipboardData","pasteEventHasFilesOnly","pasteEventHasPlainTextOnly","inputTypes","inputType","dragging","pointFromEvent","dragEventHasFiles","ArrowLeft","ArrowRight","Backspace","Tab","deleteByComposition","deleteByCut","deleteByDrag","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","formatRemove","_this$responder30","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","inputControllerWillPerformRedo","historyUndo","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$responder31","insertFromPaste","_dataTransfer$files","_this$responder32","_this$responder33","_this$responder34","_this$responder35","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$responder36","insertReplacementText","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","undoable","commands","do","undos","AttachmentEditorController","title","trixAction","didClickToolbar","didClickActionButton","textarea","placeholder","textareaClone","tabIndex","autoresize","scrollHeight","didInputCaption","didKeyDownCaption","didChangeCaption","didBlurCaption","editingFigcaption","editCaption","install","makeElementMutable","addToolbar","installCaptionEditor","uninstall","savePendingCaption","didUninstallAttachmentEditor","pendingCaption","_this$delegate3$attac","attachmentEditorDidRequestUpdatingAttributesForAttachment","attachmentEditorDidRequestRemovingAttributeForAttachment","attachmentEditorDidRequestRemovalOfAttachment","_this$delegate5$attac","attachmentEditorDidRequestDeselectingAttachment","CompositionController","didFocus","didBlur","didClickAttachment","documentView","_this$blurPromise","focused","compositionControllerDidFocus","blurPromise","compositionControllerDidBlur","findAttachmentForElement","compositionControllerDidSelectAttachment","getSerializableElement","isEditingAttachment","_this$delegate4$compo","_this$delegate5$compo","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","attachmentEditor","installAttachmentEditorForAttachment","_this$attachmentEdito","uninstallAttachmentEditor","_this$attachmentEdito2","compositionControllerWillUpdateAttachment","compositionControllerDidRequestRemovalOfAttachment","compositionControllerDidRequestDeselectingAttachment","toolbarButtonSelector","activeDialogSelector","dialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","buttonKeyString","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editorElement","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","attachmentLocationRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","runEditorFilters","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","locationRangeBeforeDrag","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","Date","getTime","_this$editorElement$o","ownerDocument","TrixToolbarElement","connectedCallback","customElements","define","makeEditable","handleEventOnce","configureContentEditable","setDefaultParagraphSeparator","disableObjectResizing","_document$queryComman","_document","queryCommandSupported","execCommand","_document$queryComman2","_document2","cursorTargetStyles","TrixEditorElement","labels","label","_this$ownerDocument","toolbarId","_this$inputElement","inputElement","_this$ownerDocument2","inputId","nextElementSibling","_this$editorControlle","editorController","_this$inputElement2","_this$inputElement3","defaultValue","_this$editor","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","_this$editorControlle2","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled"],"mappings":";;;;AAAO,MCADA,EAAa,CACjBC,QAAS,CACPC,QAAS,MACTC,OAAO,GAETC,MAAO,CACLF,QAAS,aACTG,UAAU,GAEZC,SAAU,CACRJ,QAAS,KACTK,UAAU,EACVC,eAAe,EACfC,OAAO,GAETC,KAAM,CACJR,QAAS,MACTK,UAAU,EACVI,KAAM,CACJC,WAAW,IAGfC,WAAY,CACVX,QAAS,KACTC,OAAO,GAETW,OAAQ,CACNZ,QAAS,KACTa,cAAe,aACfN,OAAO,EACPJ,UAAU,EACVW,KAAKC,GACH,OACEf,EAAQe,EAAQC,cAAgBlB,EAAWmB,KAAKJ,eAAeb,UAIrEkB,WAAY,CACVlB,QAAS,KACTC,OAAO,GAETkB,OAAQ,CACNnB,QAAS,KACTa,cAAe,aACfN,OAAO,EACPJ,UAAU,EACVW,KAAKC,GACH,OACEf,EAAQe,EAAQC,cAAgBlB,EAAWmB,KAAKJ,eAAeb,UAIrEoB,kBAAmB,CACjBpB,QAAS,MACTqB,WAAW,EACXhB,UAAU,EACVJ,OAAO,EACPM,OAAO,GAETe,UAAW,CACTtB,QAAS,IACTC,OAAO,EACPE,UAAU,EACVkB,WAAW,GAEbE,YAAa,CACXvB,QAAS,eACTC,OAAO,EACPE,UAAU,EACVkB,WAAW,GAEbG,WAAY,CACVxB,QAAS,cACTC,OAAO,EACPE,UAAU,EACVkB,WAAW,IAITrB,EAAWe,IAAD,IAAAU,EAAaV,OAAAA,MAAAA,GAAb,QAAaA,EAAAA,EAASf,eAAtB,IAAAyB,OAAaV,EAAAU,EAAkBC,eC/E/C,IAAeC,EAAA,CAGbC,qBAAsB,kBAAkBd,KAAKe,UAAUC,WAEvDC,qBAAsB,iBAAiBjB,KAAKe,UAAUC,WAEtDE,oBAAsB,WACpB,GAA0B,oBAAfC,WACT,OAAO,EAEJ,IAAA,MAAMC,IAAY,CAAE,OAAQ,kBAAmB,aAClD,KAAMA,KAAYD,WAAWE,WAC3B,OAAO,EAGX,OAAO,EATa,ICPTC,EAAA,CACbC,YAAa,eACbC,KAAM,OACNC,QAAS,UACTC,KAAM,OACNC,MAAO,QACPC,mBAAoB,iBACpBlC,KAAM,OACNJ,SAAU,UACVuC,OAAQ,iBACRC,OAAQ,SACRC,KAAM,OACNC,QAAS,UACTC,QAAS,iBACT7C,MAAO,QACP8C,KAAM,OACNC,OAAQ,SACRC,OAAQ,gBACRC,KAAM,OACNC,OAAQ,SACRC,IAAK,MACLC,eAAgB,eAChBC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,KACJC,GAAI,MCrBN,MAAMC,EAAQ,CAAEC,EAAKpB,MAAOoB,EAAKL,GAAIK,EAAKJ,GAAII,EAAKN,GAAIM,EAAKF,GAAIE,EAAKH,IAErE,IAAeI,EAAA,CACbC,OAAQ,MACRC,UAAW,EAEXC,UAAU9C,GACR,OAAQA,GACN,KAAK,EACS0C,MAAAA,KAAAA,OAAAA,EAAKpB,OACnB,KAAK,EACSoB,MAAAA,KAAAA,OAAAA,EAAKrB,MACnB,QACE,IAAI0B,EAEgB,OAAhBjD,KAAK8C,OACPG,EAAO,IACkB,QAAhBjD,KAAK8C,SACdG,EAAO,MAGT,MAAMC,EAAMC,KAAKC,MAAMD,KAAKE,IAAInD,GAAUiD,KAAKE,IAAIJ,IAG7CK,GAFYpD,EAASiD,KAAKI,IAAIN,EAAMC,IACjBM,QAAQxD,KAAK+C,WACGU,QAAQ,MAAO,IAAIA,QAAQ,MAAO,IAC3E,MAAA,GAAAC,OAAUJ,EAAV,KAAAI,OAAuCf,EAAMO,OC9B9C,MCAMS,EAAS,SAASC,GAC7B,IAAK,MAAMC,KAAOD,EAAY,CAC5B,MAAME,EAAQF,EAAWC,GACpBA,KAAAA,GAAOC,EAEd,OAAO9D,MCAH+D,EAAOC,SAASC,gBAChBC,EAAQH,EAAKI,QAENC,EAAc,SAASC,GAAW,IAAAC,UAAEA,EAAFC,iBAAaA,EAAbC,aAA+BA,EAA/BC,QAA6CA,EAA7CC,eAAsDA,EAAtDC,MAAsEA,0DAAU,GAC7H,MAAM7E,EAAUwE,GAAwBP,EAClCa,EAAWL,EACXM,EAAyB,cAAZJ,EAEbK,EAAU,SAASC,GACV,MAATJ,GAA6B,KAAVA,GACrBG,EAAQE,UAEV,MAAMC,EAASC,EAA2BH,EAAME,OAAQ,CAAEV,iBAAkBK,IAC9D,MAAVK,IACFT,MAAAA,GAAAA,EAAcW,KAAKF,EAAQF,EAAOE,GAC9BP,GACFK,EAAML,mBAQZ,OAHAI,EAAQE,QAAU,IAAMlF,EAAQsF,oBAAoBf,EAAWS,EAASD,GAExE/E,EAAQuF,iBAAiBhB,EAAWS,EAASD,GACtCC,GAQIQ,EAAe,SAASjB,GAAW,IAAAC,UAAEA,EAAFiB,QAAaA,EAAbC,WAAsBA,EAAtB3G,WAAkCA,0DAAe,GACzFiB,MAAAA,EAAuB,MAAbwE,EAAoBA,EAAYP,EAChDwB,GAAsB,IAAZA,EACVC,GAA4B,IAAfA,EAEb,MAAMT,EAAQf,SAASyB,YAAY,UAKnC,OAJAV,EAAMW,UAAUrB,EAAWkB,EAASC,GAClB,MAAd3G,GACF8E,EAAOwB,KAAKJ,EAAOlG,GAEdiB,EAAQ6F,cAAcZ,IAGlBa,EAAyB,SAAS9F,EAAS8E,GACtD,GAA0B,KAAtB9E,MAAAA,OAAAA,EAAAA,EAAS+F,UACX,OAAO3B,EAAMiB,KAAKrF,EAAS8E,IAIlBM,EAA6B,SAASY,GAAM,IAAAvB,iBAAEA,EAAFwB,UAAoBA,0DAAc,GAClFD,KAAAA,GAAQA,EAAKD,WAAaG,KAAKC,cACpCH,EAAOA,EAAK/F,WAEV+F,GAAQ,MAARA,EAAAA,CAIAvB,GAAoB,MAApBA,EAYF,OAAOuB,EAXP,GAAIA,EAAKI,SAAwB,MAAbH,EAClB,OAAOD,EAAKI,QAAQ3B,GAEpB,KAAOuB,GAAQA,IAASC,GAAW,CACjC,GAAIH,EAAuBE,EAAMvB,GAC/B,OAAOuB,EAETA,EAAOA,EAAK/F,cAePoG,EAAwBrG,GACnCkE,SAASoC,gBAAkBtG,GAAWuG,EAAoBvG,EAASkE,SAASoC,eAEjEC,EAAsB,SAASvG,EAASgG,GACnD,GAAKhG,GAAYgG,EAGjB,KAAOA,GAAM,CACPA,GAAAA,IAAShG,EACX,OAAO,EAETgG,EAAOA,EAAK/F,aAsBHuG,EAAuB,SAASR,GAAM,IAAAS,EACjD,GAAI,UAACT,SAAD,IAAAS,IAACA,EAAMxG,WACT,OAEEyG,IAAAA,EAAa,EAEjB,IADAV,EAAOA,EAAKW,gBACLX,GACLU,IACAV,EAAOA,EAAKW,gBAEd,OAAOD,GAGIE,EAAcZ,IAAD,IAAAa,EAAA,OAAUb,MAAAA,GAAV,QAAAa,EAAUb,EAAM/F,kBAAhB,IAAA4G,OAAA,EAAUA,EAAkBC,YAAYd,IAErDe,EAAW,SAASC,GAAM,IAAAC,gBAAEA,EAAFC,YAAmBA,EAAnBC,uBAAgCA,0DAA2B,GAC1FC,MAAAA,EAAa,MACjB,OAAQH,GACN,IAAK,UACII,OAAAA,WAAWC,aACpB,IAAK,OACID,OAAAA,WAAWE,UACpB,IAAK,UACIF,OAAAA,WAAWG,aACpB,QACSH,OAAAA,WAAWI,WATL,GAanB,OAAOvD,SAASwD,iBACdV,EACAI,EACe,MAAfF,EAAsBA,EAAc,MACT,IAA3BC,IAISlI,EAAWe,IAAD,IAAAU,EAAaV,OAAAA,MAAAA,GAAb,QAAaA,EAAAA,EAASf,eAAtB,IAAAyB,OAAaV,EAAAU,EAAkBC,eAEzCgH,EAAc,SAASC,GAAKC,IACnC9D,EAAKC,EAD8B6D,yDAAU,GAE9B,iBAARD,GACTC,EAAUD,EACVA,EAAMC,EAAQ5I,SAEd4I,EAAU,CAAE9I,WAAY8I,GAG1B,MAAM7H,EAAUkE,SAAS4D,cAAcF,GASnCC,GAPoB,MAApBA,EAAQE,WACgB,MAAtBF,EAAQ9I,aACV8I,EAAQ9I,WAAa,IAEvB8I,EAAQ9I,WAAWiJ,gBAAkBH,EAAQE,UAG3CF,EAAQ9I,WACV,IAAKgF,KAAO8D,EAAQ9I,WAClBiF,EAAQ6D,EAAQ9I,WAAWgF,GAC3B/D,EAAQiI,aAAalE,EAAKC,GAI1B6D,GAAAA,EAAQK,MACV,IAAKnE,KAAO8D,EAAQK,MAClBlE,EAAQ6D,EAAQK,MAAMnE,GACtB/D,EAAQkI,MAAMnE,GAAOC,EAIrB6D,GAAAA,EAAQM,KACV,IAAKpE,KAAO8D,EAAQM,KAClBnE,EAAQ6D,EAAQM,KAAKpE,GACrB/D,EAAQoI,QAAQrE,GAAOC,EAoB3B,OAhBI6D,EAAQQ,WACVR,EAAQQ,UAAUC,MAAM,KAAKC,SAASF,IACpCrI,EAAQwI,UAAUC,IAAIJ,MAItBR,EAAQa,cACV1I,EAAQ0I,YAAcb,EAAQa,aAG5Bb,EAAQc,YACP/E,GAAAA,OAAOiE,EAAQc,YAAYJ,SAASK,IACrC5I,EAAQ6I,YAAYD,MAIjB5I,GAGT,IAAI8I,EAEG,MAAMC,EAAmB,WAC1BD,GAAiB,MAAjBA,EACF,OAAOA,EAGTA,EAAgB,GAChB,IAAK,MAAM/E,KAAOiF,EAAiB,CACjC,MAAMjK,EAAaiK,EAAgBjF,GAC/BhF,EAAWE,SACb6J,EAAcG,KAAKlK,EAAWE,SAIlC,OAAO6J,GAGII,EAAwBlD,GAASmD,EAAwBnD,MAAAA,OAAD,EAACA,EAAMoD,YAE/DC,EAA+B,SAASrD,GAC5C+C,OAAAA,IAAmBO,SAASrK,EAAQ+G,MAAW+C,IAAmBO,SAASrK,EAAQ+G,EAAKoD,cAGpFG,EAAmB,SAASvD,GAAM,IAAAwD,OAAEA,GAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAED,QAAQ,GACpE,OAAIA,EACKL,EAAwBnD,GAG7BmD,EAAwBnD,KAAUmD,EAAwBnD,EAAKoD,aAAeC,EAA6BrD,IAKpGmD,EAA2BnD,GAAS4D,EAAkB5D,IAAwB,WAAfA,MAAAA,SAAAA,EAAMmC,MAErEyB,EAAqB5D,IAASA,MAAAA,SAAAA,EAAMD,YAAaG,KAAK2D,aAEtDC,EAAqB,SAAS9D,GAAM,IAAA+D,KAAEA,0DAAS,GACtD,GAAC/D,EAGL,OAAIgE,EAAehE,GFnQW,WEoQxBA,EAAKmC,MACH4B,GACK/D,EAAK/F,WAAWmI,QAAQ6B,mBAAqBF,OAFxD,EAQOD,EAAmB9D,EAAKoD,aAItBc,EAA2BlE,GAASF,EAAuBE,EPhRtC,0BOkRrBmE,EAAuBnE,GAASgE,EAAehE,IAAwB,MAAfA,MAAAA,SAAAA,EAAMmC,MAE9D6B,EAAkBhE,IAASA,MAAAA,SAAAA,EAAMD,YAAaG,KAAKkE,UCpRhE,ICEeC,EAAA,CACb9I,KAAM,CACJtC,QAAS,SACTqL,aAAa,EACbC,OAAOvK,GACL,MAAMkI,EAAQsC,OAAOC,iBAAiBzK,GAC/BkI,MAAqB,SAArBA,EAAMwC,YAAyBxC,EAAMwC,YAAc,MAG9D7I,OAAQ,CACN5C,QAAS,KACTqL,aAAa,EACbC,OAAOvK,GAEsB,WADbwK,OAAOC,iBAAiBzK,GACzB2K,WAGjBC,KAAM,CACJC,aAAc,IACdN,OAAOvK,GACCyE,MAAAA,EAA4BqG,SAAAA,OTtBN,yBSsB5B,KACMhJ,EAAO9B,EAAQoG,QAAQ3B,GAC7B,GAAI3C,EACF,OAAOA,EAAKiJ,aAAa,UAI/B5I,OAAQ,CACNlD,QAAS,MACTqL,aAAa,GAEfU,OAAQ,CACN9C,MAAO,CAAE+C,gBAAiB,eClC9B,MCYMC,EAAS,CACbC,YXXkB,CAClBC,QAAS,CACPC,aAAc,UACdC,QAAS,CACPvB,MAAM,EACNwB,MAAM,IAGVC,KAAM,CACJF,QAAS,CACPC,MAAM,KWEVvC,gBAAAA,EACAyC,QAAAA,EACAC,IChBa,CACbC,WAAY,aACZC,kBAAmB,sBACnBC,wBAAyB,6BACzBC,mBAAoB,uBACpBC,4BAA6B,iCAC7BC,eAAgB,mBAChBC,mBAAoB,uBACpBC,eAAgB,mBAChBC,kBAAmB,sBACnB9L,kBAAmB,sBDOnB0C,SAAAA,EACAqJ,MEfY,CACZC,eAAe,EAEfC,WACE,OAAIpM,KAAKmM,eAAiBZ,EAAQxK,oBACzB,EAEA,GAGXsL,UAAUC,GACR,MAAMJ,EAAQzE,EAAY,QAAS,CAAE8E,KAAM,OAAQC,UAAU,EAAMC,QAAQ,EAAMC,GAAI1M,KAAK2M,cAE1FT,EAAM7G,iBAAiB,UAAU,KAC/BiH,EAASJ,EAAMU,OACflG,EAAWwF,MAGbxF,EAAW1C,SAAS6I,eAAe7M,KAAK2M,cACxC3I,SAAS8I,KAAKnE,YAAYuD,GAC1BA,EAAMa,UFJRC,SHnBa,CACb,EAAG,YACH,EAAG,MACH,GAAI,SACJ,GAAI,SACJ,GAAI,OACJ,GAAI,QACJ,GAAI,SACJ,GAAI,IACJ,GAAI,IACA,GAAA,KGUJpK,KAAAA,EACAuH,eAAAA,EACA8C,QGpBa,CACbC,eAAc,IACZ,2RAAAxJ,OAE6Id,EAAKvB,KAFlJ,oBAAAqC,OAEyKd,EAAKvB,KAF9K,kKAAAqC,OAGiJd,EAAKjB,OAHtJ,oBAAA+B,OAG+Kd,EAAKjB,OAHpL,gJAAA+B,OAI+Hd,EAAKX,OAJpI,oBAAAyB,OAI6Jd,EAAKX,OAJlK,sLAAAyB,OAKqKd,EAAKhB,KAL1K,oBAAA8B,OAKiMd,EAAKhB,KALtM,kRAAA8B,OASoId,EAAKzD,SATzI,oBAAAuE,OASoKd,EAAKzD,SATzK,8IAAAuE,OAU6Hd,EAAK3D,MAVlI,oBAAAyE,OAU0Jd,EAAK3D,MAV/J,4IAAAyE,OAW2Hd,EAAKrD,KAXhI,oBAAAmE,OAWuJd,EAAKrD,KAX5J,qJAAAmE,OAYoId,EAAKtB,QAZzI,oBAAAoC,OAYmKd,EAAKtB,QACpCsB,qJAAAA,OAAAA,EAAKf,QAA0Be,oBAAAA,OAAAA,EAAKf,QACde,2KAAAA,OAAAA,EAAKd,QAA0Bc,oBAAAA,OAAAA,EAAKd,QACpCc,2KAAAA,OAAAA,EAAKlB,OAAyBkB,oBAAAA,OAAAA,EAAKlB,OAI5DkB,6QAAAA,OAAAA,EAAKxB,YAA8BwB,oBAAAA,OAAAA,EAAKxB,YAM/BwB,oVAAAA,OAAAA,EAAKV,KAAuBU,oBAAAA,OAAAA,EAAKV,KAC3BU,iKAAAA,OAAAA,EAAKb,KAAuBa,oBAAAA,OAAAA,EAAKb,KAOxFa,sVAAAA,OAAAA,EAAKP,eAA+BO,kBAAAA,OAAAA,EAAKR,IAEpDQ,4JAAAA,OAAAA,EAAKhB,KACLgB,wHAAAA,OAAAA,EAAKT,OApCnF,sGHmBFgL,aDvBmB,siCKAN,MAAMC,EACZC,mBAAYC,GACX,MAAAzD,KAAEA,EAAF0D,SAAQA,EAARC,WAAkBA,EAAlBC,SAA8BA,GAAaC,EAA2BJ,GAE5EtN,KAAKkB,UAAU2I,GAAQ,WACrB,IAAI8D,EACAC,EAGY,IAAAC,EASFC,EAVVP,EAEAK,EADEH,UACOI,EAAA7N,KAAKuN,uBAALM,EAAT1I,KAAAnF,MAESA,KAAKuN,KAEPC,IACTI,EAAS5N,KAAKwN,IAGhB,OAAIC,GACFE,EAAU,QAAAC,EAAAA,SAAA,IAAAE,OAAA,EAAAA,EAASjE,GACf8D,EACKI,EAAM5I,KAAKwI,EAASC,EAAQrE,gBADrC,IAIAoE,EAAUC,EAAO/D,GACVkE,EAAM5I,KAAKwI,EAASC,EAAQrE,cAM3C,MAAMmE,EAA6B,SAASJ,GAC1C,MAAMpJ,EAAQoJ,EAAWpJ,MAAM8J,GAC3B,IAAC9J,EACH,MAAM,IAAI+J,MAA8CX,wCAAAA,OAAAA,IAG1D,MAAMY,EAAO,CAAErE,KAAM3F,EAAM,IAY3B,OAVgB,MAAZA,EAAM,GACRgK,EAAKX,SAAWrJ,EAAM,GAEtBgK,EAAKV,WAAatJ,EAAM,GAGV,MAAZA,EAAM,KACRgK,EAAKT,UAAW,GAGXS,IAGHH,MAAEA,GAAUI,SAASjN,UAErB8M,EAA+B,IAAII,OAAO,4CCpDjC,MAAMC,UAAoBjB,EAC7BkB,aAACxK,IAAAA,yDAAQ,GACbA,OAAAA,aAAiB9D,KACZ8D,EAEA9D,KAAKuO,eAAezK,MAAAA,OAApB,EAAoBA,EAAO0K,YAI/BD,sBAAeE,GACb,OAAA,IAAIzO,KAAKyO,EAAYC,EAAWD,IAGlCE,sBAAeC,GACb,OAAA,IAAI5O,KAAK6O,EAAWD,GAAaA,GAG1CE,YAAYL,EAAYG,GACtBG,SAASxF,WACJkF,KAAAA,WAAaA,EACbG,KAAAA,WAAaA,EAClB5O,KAAKwJ,OAASxJ,KAAK4O,WAAWpF,OAC9BxJ,KAAKgP,WAAahP,KAAKyO,WAAWjF,OAGpCyF,mBAAmBC,GACVL,OAAAA,EAAW7O,KAAK4O,WAAWO,MAAM,EAAGhM,KAAKiM,IAAI,EAAGF,KAAU1F,OAGnE6F,qBAAqBC,GACZZ,OAAAA,EAAW1O,KAAKyO,WAAWU,MAAM,EAAGhM,KAAKiM,IAAI,EAAGE,KAAc9F,OAGvE2F,QACE,OAAOnP,KAAK8O,YAAYH,eAAe3O,KAAK4O,WAAWO,SAAS5F,YAGlEgG,OAAOL,GACE,OAAAlP,KAAKmP,MAAMD,EAAQA,EAAS,GAGrCM,UAAU1L,GACD,OAAA9D,KAAK8O,YAAYW,IAAI3L,GAAO2K,aAAezO,KAAKyO,WAGzDiB,SACE,OAAO1P,KAAKyO,WAGdkB,cACE,OAAO3P,KAAKyO,WAGdD,WACE,OAAOxO,KAAKyO,YAIhB,MAAMmB,EAAuD,KAAxC,QAAAC,EAAAA,MAAMC,YAAN,IAAAC,OAAA,EAAAA,EAAA5K,KAAA0K,MAAa,MAAgBrG,QAC5CwG,EAA+C,OAAN,QAAlBC,EAAA,IAAIC,mBAAc,IAAAD,OAAA,EAAAA,EAAA9K,KAAlB,IAAkB,IACzCgL,EAAgE,SAAvCC,QAAAC,EAAAD,OAAOE,qBAAPF,IAAAA,OAAAA,EAAAA,EAAAA,KAAAA,OAAuB,GAAI,SAK1D,IAAI1B,EAAYG,EAQdH,EADEkB,GAAgBI,EACJO,GAAWV,MAAMC,KAAKS,GAAQC,KAAKC,GAASA,EAAKP,YAAY,KAE9D,SAASK,GACdG,MAAAA,EAAS,GACXC,IAAAA,EAAU,EACR,MAAAnH,OAAEA,GAAW+G,EAEZI,KAAAA,EAAUnH,GAAQ,CACnB1F,IAAAA,EAAQyM,EAAOK,WAAWD,KAC1B,GAAA,OAAU7M,GAASA,GAAS,OAAU6M,EAAUnH,EAAQ,CAEpDqH,MAAAA,EAAQN,EAAOK,WAAWD,KACP,QAAZ,MAARE,GAEH/M,IAAkB,KAARA,IAAkB,KAAe,KAAR+M,GAAiB,MAIpDF,IAGJD,EAAO3H,KAAKjF,GAGd,OAAO4M,GAMT7B,EADEsB,EACYW,GAAUV,OAAOE,iBAAiBT,MAAMC,KAAKgB,GAAS,KAEvD,SAASA,GAiBpB,MAhBmB,MACXC,MAAAA,EAAS,GAYf,OAVAlB,MAAMC,KAAKgB,GAAOzI,SAASvE,IACrB4M,IAAAA,EAAS,GACT5M,EAAQ,QACVA,GAAS,MACT4M,GAAUN,OAAOY,aAAalN,IAAU,GAAK,KAAQ,OACrDA,EAAQ,MAAiB,KAARA,GAEnBiN,EAAOhI,KAAK2H,EAASN,OAAOY,aAAalN,OAGpCiN,GAbU,GAgBDE,KAAK,KCzH3B,IAAIvE,EAAK,EAEM,MAAMwE,UAAmB9D,EAC/B+D,sBAAeC,GACb,OAAApR,KAAKqR,SAASC,KAAKtS,MAAMoS,IAGlCtC,cACEC,SAASxF,WACJmD,KAAAA,KAAOA,EAGd6E,qBAAqB3D,GACZ,OAAA5N,KAAK8O,eAAgBlB,MAAAA,OAAAA,EAAAA,EAAQkB,aAGtCU,UAAU5B,GACR,OAAO5N,OAAS4N,EAGlB4D,UACQC,MAAAA,EAAQ,GACRC,EAAW1R,KAAK2R,yBAA2B,GAEjD,IAAK,MAAM9N,KAAO6N,EAAU,CAC1B,MAAM5N,EAAQ4N,EAAS7N,GACvB4N,EAAM1I,KAAQlF,GAAAA,OAAAA,cAAOC,IAGvB,MAAA,KAAAJ,OAAY1D,KAAK8O,YAAYjF,KAAQ,KAAAnG,OAAA1D,KAAK0M,IAAK+E,OAAAA,EAAMjI,OAAN,IAAA9F,OAAmB+N,EAAMR,KAAK,OAAU,GAAvF,KAGFU,yBAEAC,eACE,OAAON,KAAKO,UAAU7R,MAGxB8R,gBACE,OAAOzD,EAAYoB,IAAIzP,MAGzB2P,cACE,OAAO3P,KAAK0M,GAAG8B,YC3CZ,MAAMuD,EAAiB,WAASC,IAAAA,yDAAI,GAAIC,yDAAI,GACjD,GAAID,EAAExI,SAAWyI,EAAEzI,OACjB,OAAO,EAET,IAAK,IAAI0I,EAAQ,EAAGA,EAAQF,EAAExI,OAAQ0I,IAAS,CAE7C,GADcF,EAAEE,KACFD,EAAEC,GACd,OAAO,EAGX,OAAO,GAKIC,EAAc,SAASrB,GAClC,MAAMC,EAASD,EAAM3B,MAAM,GADuB,IAAA,IAAAiD,EAAA7I,UAAAC,OAAN0E,EAAM,IAAA2B,MAAAuC,EAAA,EAAAA,EAAA,EAAA,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANnE,EAAMmE,EAAA,GAAA9I,UAAA8I,GAGlD,OADAtB,EAAOuB,UAAUpE,GACV6C,GClBHwB,EACJ,qVAEWC,GAAgB,WAC3B,MAAMtG,EAAQzE,EAAY,QAAS,CAAEgL,IAAK,OAAQ5I,KAAM,IAAK6I,QAAS,UAChEC,EAAOlL,EAAY,QACzBkL,EAAKhK,YAAYuD,GAEX0G,MAAAA,EAAmB,WACnB,IACK,OAAA,IAAIC,SAASF,GAAMG,IAAI5G,EAAMwG,SACpC,MAAOK,GACP,OAAO,GAJc,GAQnBC,EAAuB,WACvB,IACF,OAAO9G,EAAM/H,QAAQ,uBACrB,MAAO4O,GACP,OAAO,GAJkB,GAQ7B,OAAIH,EACK,SAASrC,GAEP,OADPrE,EAAMpI,MAAQyM,EACP,IAAIsC,SAASF,GAAMM,IAAI/G,EAAMwG,UAE7BM,EACF,SAASzC,GAEd,OADArE,EAAMpI,MAAQyM,EACVrE,EAAM/H,QAAQ,aACT,MAEA,OAIJ,SAASoM,GACRE,MAAAA,EAAOF,EAAO2C,OAAO3D,OAAO,GAClC,OAAIgD,EAAY1S,KAAK4Q,GACZ,MAEA,OAzCc,GCJ7B,IAAI0C,GAAoB,KACpBC,GAAsB,KACtBC,GAAqB,KACrBC,GAAqB,KAElB,MAAMC,GAAuB,KAC7BJ,KACHA,GAAoBK,KAAwB9P,OAAO+P,OAE9CN,IAGIO,GAAkBC,GAAkB3I,EAAOlC,gBAAgB6K,GAE3DF,GAAyB,KAC/BL,KACHA,GAAsBQ,OAAOC,KAAK7I,EAAOlC,kBAEpCsK,IAGIU,GAAiBH,GAAkB3I,EAAOb,eAAewJ,GAEzDH,GAAwB,KAC9BH,KACHA,GAAqBO,OAAOC,KAAK7I,EAAOb,iBAEnCkJ,IC3BIU,GAA8B,SAAShV,EAASiV,GACtCC,GAA6BlV,GACrCyJ,YAAcwL,EAAWvQ,QAAQ,MAAO1E,IAGjDkV,GAA+B,SAASlV,GAC5C,MAAMe,EAAUkE,SAAS4D,cAAc,SACvC9H,EAAQiI,aAAa,OAAQ,YAC7BjI,EAAQiI,aAAa,gBAAiBhJ,EAAQ0B,eACxCyT,MAAAA,EAAQC,KAKd,OAJID,GACFpU,EAAQiI,aAAa,QAASmM,GAEhClQ,SAASoQ,KAAKC,aAAavU,EAASkE,SAASoQ,KAAKlL,YAC3CpJ,GAGHqU,GAAc,WACZrU,MAAAA,EAAUwU,GAAe,mBAAqBA,GAAe,aACnE,GAAIxU,EACF,OAAOA,EAAQ+K,aAAa,YAI1ByJ,GAAkBzK,GAAS7F,SAASoQ,KAAKG,cAA2B1K,aAAAA,OAAAA,EAA1E,MC1BM2K,GAAmB,CAA0C,uCAAA,QAEtDC,GAA0B,SAASC,GAC9C,MAAMlV,EAAOkV,EAAaC,QAAQ,cAC5B5Q,EAAO2Q,EAAaC,QAAQ,aAE9BnV,IAAAA,IAAQuE,EAMV,OAAOvE,MAAAA,OAAAA,EAAAA,EAAMgK,OANG,CACV,MAAAsD,KAAEA,IAAS,IAAI8H,WAAYC,gBAAgB9Q,EAAM,aACvD,GAAI+I,EAAKtE,cAAgBhJ,EACvB,OAAQsN,EAAKyH,cAAc,OAuBpBO,GACP,UAAUjV,KAAKe,UAAUmU,UACnBhQ,GAAUA,EAAMiQ,QAEhBjQ,GAAUA,EAAMkQ,QCpCfC,GAASC,GAAOC,WAAWD,EAAI,GCG/BE,GAAa,WAASzH,IAAAA,yDAAS,GACpCmD,MAAAA,EAAS,GACf,IAAK,MAAMlN,KAAO+J,EAAQ,CACxB,MAAM9J,EAAQ8J,EAAO/J,GACrBkN,EAAOlN,GAAOC,EAEhB,OAAOiN,GAGIuE,GAAkB,WAAStD,IAAAA,yDAAI,GAAIC,yDAAI,GAClD,GAAI2B,OAAOC,KAAK7B,GAAGxI,SAAWoK,OAAOC,KAAK5B,GAAGzI,OAC3C,OAAO,EAET,IAAK,MAAM3F,KAAOmO,EAAG,CAEnB,GADcA,EAAEnO,KACFoO,EAAEpO,GACd,OAAO,EAGX,OAAO,GCpBI0R,GAAiB,SAASC,GACjCA,GAAS,MAATA,EAKJ,OAHK3F,MAAM4F,QAAQD,KACjBA,EAAQ,CAAEA,EAAOA,IAEZ,CAAEE,GAAUF,EAAM,IAAKE,GAAsB,MAAZF,EAAM,GAAaA,EAAM,GAAKA,EAAM,MAGjEG,GAAmB,SAASH,GACnCA,GAAS,MAATA,EAAe,OAEb,MAAEI,EAAOC,GAAQN,GAAeC,GACtC,OAAOM,GAAoBF,EAAOC,IAGvBE,GAAiB,SAASC,EAAWC,GAChD,GAAiB,MAAbD,GAAmC,MAAdC,EAAoB,OAEvC,MAAEC,EAAWC,GAAYZ,GAAeS,IACtCI,EAAYC,GAAad,GAAeU,GAChD,OAAOH,GAAoBI,EAAWE,IAAeN,GAAoBK,EAASE,IAG9EX,GAAY,SAAS5R,GACzB,MAAqB,iBAAVA,EACFA,EAEAuR,GAAWvR,IAIhBgS,GAAsB,SAASQ,EAAMC,GACzC,MAAoB,iBAATD,EACFA,IAASC,EAETjB,GAAgBgB,EAAMC,ICkCjC,MAAMC,GAAoB,CAACF,EAAMC,KAC/BD,MAAAA,OAAA,EAAAA,EAAMG,mBAAmBF,MAAAA,OAAzB,EAAyBA,EAAOE,kBAChCH,MAAAA,OAAA,EAAAA,EAAMI,gBAAgBH,MAAAA,OAAAA,EAAAA,EAAOG,eAC7BJ,MAAAA,OAAA,EAAAA,EAAMK,iBAAiBJ,MAAAA,OAAvB,EAAuBA,EAAOI,gBAC9BL,MAAAA,SAAAA,EAAMM,cAAcL,MAAAA,SAAAA,EAAOK,WAEhBC,GAA0B,IAzExB,cAAsCzJ,EACnD0B,cACEC,SAASxF,WACJuN,KAAAA,OAAS9W,KAAK8W,OAAOC,KAAK/W,MAC1BgX,KAAAA,IAAMhX,KAAKgX,IAAID,KAAK/W,MACpBiX,KAAAA,kBAAoB,GAG3BrB,QACM,IAAC5V,KAAKkX,QAEJ,OADCA,KAAAA,SAAU,EACX,sBAAuBlT,SAClBA,SAASqB,iBAAiB,kBAAmBrF,KAAK8W,QAAQ,GAE1D9W,KAAKgX,MAKlBG,OACM,GAAAnX,KAAKkX,QAEAlT,OADFkT,KAAAA,SAAU,EACRlT,SAASoB,oBAAoB,kBAAmBpF,KAAK8W,QAAQ,GAIxEM,yBAAyBC,GACnB,IAACrX,KAAKiX,kBAAkB7N,SAASiO,GAE5B,OADPrX,KAAKiX,kBAAkBlO,KAAKsO,GACrBrX,KAAK4V,QAIhB0B,2BAA2BD,GAEzB,GADArX,KAAKiX,kBAAoBjX,KAAKiX,kBAAkBM,QAAQC,GAAMA,IAAMH,IAC9B,IAAlCrX,KAAKiX,kBAAkBzN,OAClB,OAAAxJ,KAAKmX,OAIhBM,2CACS,OAAAzX,KAAKiX,kBAAkBzG,KAAK6G,GAAqBA,EAAiBK,uBAG3EZ,SACQa,MAAAA,EAAWC,KACb,IAACpB,GAAkBmB,EAAU3X,KAAK2X,UAE7B,OADFA,KAAAA,SAAWA,EACT3X,KAAKyX,2CAIhBI,QAES,OADFF,KAAAA,SAAW,KACT3X,KAAK8W,SAKdE,MACM,GAAAhX,KAAKkX,QAEP,OADAlX,KAAK8W,SACEgB,sBAAsB9X,KAAKgX,OAa3Be,GAAkB,WAC7B,MAAMC,EAAY1N,OAAO2N,eACzB,GAAID,EAAUE,WAAa,EACzB,OAAOF,GAIEJ,GAAc,WAAW,IAAAO,EAC9BR,MAAAA,YAAWI,yBAAAI,EAAmBC,WAAW,GAC/C,GAAIT,IACGU,GAAkBV,GACrB,OAAOA,GAKAW,GAAc,SAASX,GAClC,MAAMK,EAAY1N,OAAO2N,eAGlBpB,OAFPmB,EAAUO,kBACVP,EAAUQ,SAASb,GACZd,GAAwBC,UAO3BuB,GAAqBV,GAAac,GAAcd,EAASlB,iBAAmBgC,GAAcd,EAAShB,cAEnG8B,GAAiB3S,IAAU8N,OAAO8E,eAAe5S,GCtG1C6S,GAAmBpI,GAC9BA,EAAO9M,QAAQ,IAAI2K,OAAJ,GAAA1K,OtBRe,UsBQmB,KAAM,IAAID,QAAQ,IAAI2K,OAAUwK,GAAAA,OtBPjD,KsBOuE,KAAM,KAIlGC,GAA6B,IAAIzK,OAAJ,QAAA1K,OtBXR,IsBW3B,MAEMoV,GAA6BvI,GACxCA,EAEG9M,QAAQ,IAAI2K,OAAUyK,GAAAA,OAAAA,GAA2BE,QAAU,KAAM,KAEjEtV,QAAQ,UAAW,KAgBlBuV,GAAyB,SAAShH,EAAGC,GACzC,GAAID,EAAExC,UAAUyC,GACd,MAAO,CAAE,GAAI,IAGf,MAAMgH,EAAQC,GAAsBlH,EAAGC,IACjCzI,OAAEA,GAAWyP,EAAME,YAEzB,IAAIC,EAEJ,GAAI5P,EAAQ,CACJ,MAAA0F,OAAEA,GAAW+J,EACbrK,EAAaoD,EAAEpD,WAAWO,MAAM,EAAGD,GAAQxL,OAAOsO,EAAEpD,WAAWO,MAAMD,EAAS1F,IACpF4P,EAAQF,GAAsBjH,EAAG5D,EAAYM,eAAeC,SAE5DwK,EAAQF,GAAsBjH,EAAGD,GAGnC,MAAO,CAAEiH,EAAME,YAAY3K,WAAY4K,EAAMD,YAAY3K,aAGrD0K,GAAwB,SAASlH,EAAGC,GACpCoH,IAAAA,EAAY,EACZC,EAActH,EAAExI,OAChB+P,EAActH,EAAEzI,OAEpB,KAAO6P,EAAYC,GAAetH,EAAEzC,OAAO8J,GAAW7J,UAAUyC,EAAE1C,OAAO8J,KACvEA,IAGKC,KAAAA,EAAcD,EAAY,GAAKrH,EAAEzC,OAAO+J,EAAc,GAAG9J,UAAUyC,EAAE1C,OAAOgK,EAAc,KAC/FD,IACAC,IAGK,MAAA,CACLJ,YAAanH,EAAE7C,MAAMkK,EAAWC,GAChCpK,OAAQmK,ICrEG,MAAMG,WAAatI,EACI5C,uCAACmL,IAAAA,yDAAU,GAC7C,IAAKA,EAAQjQ,OACJ,OAAA,IAAIxJ,KAET0Z,IAAAA,EAAOjK,GAAIgK,EAAQ,IACnB5F,EAAO6F,EAAKC,UAOhB,OALAF,EAAQtK,MAAM,GAAG9G,SAASuF,IACxBiG,EAAO6F,EAAKE,oBAAoBnK,GAAI7B,IACpC8L,EAAOA,EAAKvK,MAAM0E,MAGb6F,EAGFjK,WAAIoK,GACFpK,OAAAA,GAAIoK,GAGb/K,cAAY+K,IAAAA,yDAAS,GACnB9K,SAASxF,WACTvJ,KAAK6Z,OAASC,GAAKD,GAGrBtR,IAAI1E,EAAKC,GACA,OAAA9D,KAAK+Z,MAAMnM,GAAO/J,EAAKC,IAGhC9B,OAAO6B,GACE,OAAA,IAAI2V,GAAKM,GAAK9Z,KAAK6Z,OAAQhW,IAGpCoP,IAAIpP,GACF,OAAO7D,KAAK6Z,OAAOhW,GAGrBiP,IAAIjP,GACKA,OAAAA,KAAO7D,KAAK6Z,OAGrBE,MAAMF,GACJ,OAAO,IAAIL,GAAKO,GAAM/Z,KAAK6Z,OAAQG,GAAMH,KAG3C1K,MAAM0E,GACEgG,MAAAA,EAAS,GAQf,OANAhG,EAAKxL,SAASxE,IACR7D,KAAK8S,IAAIjP,KACXgW,EAAOhW,GAAO7D,KAAK6Z,OAAOhW,OAIvB,IAAI2V,GAAKK,GAGlBF,UACE,OAAO/F,OAAOC,KAAK7T,KAAK6Z,QAG1BD,oBAAoBF,GAElB,OADAA,EAAOjK,GAAIiK,GACJ1Z,KAAK2Z,UAAUpC,QAAQ1T,GAAQ7D,KAAK6Z,OAAOhW,KAAS6V,EAAKG,OAAOhW,KAGzE2L,UAAUqK,GACR,OAAO9H,EAAe/R,KAAKia,UAAWxK,GAAIoK,GAAQI,WAGpDC,UACE,OAAiC,IAA1Bla,KAAK2Z,UAAUnQ,OAGxByQ,UACM,IAACja,KAAK8Q,MAAO,CACTC,MAAAA,EAAS,GACf,IAAK,MAAMlN,KAAO7D,KAAK6Z,OAAQ,CAC7B,MAAM/V,EAAQ9D,KAAK6Z,OAAOhW,GAC1BkN,EAAOhI,KAAKgI,EAAOhI,KAAKlF,EAAKC,IAE/B9D,KAAK8Q,MAAQC,EAAO5B,MAAM,GAG5B,OAAOnP,KAAK8Q,MAGdqJ,WACE,OAAOL,GAAK9Z,KAAK6Z,QAGnBnK,SACS,OAAA1P,KAAKma,WAGdxI,wBACS,MAAA,CAAEkI,OAAQvI,KAAKO,UAAU7R,KAAK6Z,UAIzC,MAAMjM,GAAS,SAAS/J,EAAKC,GACrBiN,MAAAA,EAAS,GAEf,OADAA,EAAOlN,GAAOC,EACPiN,GAGHgJ,GAAQ,SAASnM,EAAQiM,GAC7B,MAAM9I,EAAS+I,GAAKlM,GACpB,IAAK,MAAM/J,KAAOgW,EAAQ,CACxB,MAAM/V,EAAQ+V,EAAOhW,GACrBkN,EAAOlN,GAAOC,EAEhB,OAAOiN,GAGH+I,GAAO,SAASlM,EAAQwM,GACtBrJ,MAAAA,EAAS,GASf,OARmB6C,OAAOC,KAAKjG,GAAQyM,OAE5BhS,SAASxE,IACdA,IAAQuW,IACVrJ,EAAOlN,GAAO+J,EAAO/J,OAIlBkN,GAGHtB,GAAM,SAAS7B,GACfA,OAAAA,aAAkB4L,GACb5L,EAEA,IAAI4L,GAAK5L,IAIdoM,GAAQ,SAASpM,GACjBA,OAAAA,aAAkB4L,GACb5L,EAAOiM,OAEPjM,GC7II,MAAM0M,WAAkBlN,EACrCmN,eACS,OAAoB,IAApBva,KAAKwa,WAGdC,eACS,OAAmB,IAAnBza,KAAK0a,UAGdC,eACE,OAAO3a,KAAK0a,WAAa1a,KAAK4a,UAGhCC,YACE,OAAO7a,KAAK0a,YAAc1a,KAAK4a,UAGjCE,aAkBE,OAjBK9a,KAAK+a,UACHA,KAAAA,QAAU,IAAIC,SAAQ,CAACC,EAASC,KAC9BV,KAAAA,YAAa,EACXxa,KAAKmb,SAAQ,CAACP,EAAW7J,KACzB6J,KAAAA,UAAYA,EACZJ,KAAAA,YAAa,EACbE,KAAAA,WAAY,EAEb1a,KAAK4a,UACPK,EAAQlK,GAERmK,EAAOnK,UAMR/Q,KAAK+a,QAGdI,QAAQ7O,GACCA,OAAAA,GAAS,GAGlB8O,UAAU,IAAAC,EAAAC,UACHP,EAAAA,KAAAA,sBAAL,YAAcQ,cAAd,IAAAD,GAAAA,EAAAnW,KAAAkW,GACKN,KAAAA,QAAU,KACVP,KAAAA,WAAa,KACbE,KAAAA,UAAY,KACZE,KAAAA,UAAY,MAIrBN,GAAUjN,YAAY,qBACtBiN,GAAUjN,YAAY,sBCpDP,MAAMmO,WAA8BlB,GACjDxL,YAAY1M,GACV2M,SAASxF,WACJnH,KAAAA,IAAMA,EAGb+Y,QAAQ7O,GACN,MAAMmP,EAAQ,IAAIC,MAElBD,EAAME,OAAS,KACbF,EAAMG,MAAQ5b,KAAK4b,MAAQH,EAAMI,aACjCJ,EAAMK,OAAS9b,KAAK8b,OAASL,EAAMM,cAC5BzP,GAAS,EAAMmP,IAGxBA,EAAMO,QAAU,IAAM1P,GAAS,GAE/BmP,EAAMQ,IAAMjc,KAAKoC,KCdN,MAAM8Z,WAAmBhL,EAG/BiL,yBAAkB7Q,GACvB,MACMG,EAAa,IAAIzL,KADJA,KAAKoc,kBAAkB9Q,IAG1C,OADAG,EAAW4Q,QAAQ/Q,GACZG,EAGF2Q,yBAAkB9Q,GAChB,OAAA,IAAIkO,GAAK,CACd8C,SAAUhR,EAAKzB,KACf0S,SAAUjR,EAAKD,KACfmR,YAAalR,EAAKiB,OAIf8E,gBAASoL,GACd,OAAO,IAAIzc,KAAKyc,GAGlB3N,cAAYjQ,IAAAA,yDAAa,GACvBkQ,MAAMlQ,GACD6d,KAAAA,YAAc1c,KAAK0c,YAAY3F,KAAK/W,MACzCA,KAAKnB,WAAa2a,GAAK/J,IAAI5Q,GAC3BmB,KAAK2c,sBAGP9R,aAAa+R,GACX,OAAO5c,KAAKnB,WAAWoU,IAAI2J,GAG7BC,aAAaD,GACX,OAAO5c,KAAKnB,WAAWiU,IAAI8J,GAG7BE,gBACE,OAAO9c,KAAKnB,WAAWsb,WAGzB4C,gBAAcle,IAAAA,yDAAa,GACnBme,MAAAA,EAAgBhd,KAAKnB,WAAWkb,MAAMlb,GACG,IAAAoe,EAAAC,EAAAC,EAAAC,EAA3C,IAACpd,KAAKnB,WAAW2Q,UAAUwN,GAItB,OAHFne,KAAAA,WAAame,EAClBhd,KAAK2c,sBACL,QAAAM,EAAAjd,KAAKqd,uBAAL,IAAAJ,GAAA,QAAAC,EAAAD,EAAsBK,qCAAtB,IAAAJ,GAAAA,EAAA/X,KAAA8X,EAAsDjd,MAC/C,QAAAmd,EAAAnd,KAAKud,gBAAL,IAAAJ,GAAA,QAAAC,EAAAD,EAAeG,qCAAf,IAAAF,OAAA,EAAAA,EAAAjY,KAAAgY,EAA+Cnd,MAI1D2c,sBACM,GAAA3c,KAAKwd,gBACA,OAAAxd,KAAKyd,aAIhBC,YACE,OAAoB,MAAb1d,KAAKsL,QAAkBtL,KAAK2d,UAAY3d,KAAK4d,WAGtDJ,gBACE,OAAIxd,KAAKnB,WAAWiU,IAAI,eACf9S,KAAKnB,WAAWoU,IAAI,eAEpBiJ,GAAW2B,mBAAmBhe,KAAKG,KAAK8d,kBAInDC,UACM,OAAA/d,KAAKge,aACA,UACEhe,KAAKwd,gBACP,UAEA,OAIXG,SACE,OAAO3d,KAAKnB,WAAWoU,IAAI,OAG7B2K,UACE,OAAO5d,KAAKnB,WAAWoU,IAAI,QAG7BgL,cACE,OAAOje,KAAKnB,WAAWoU,IAAI,aAAe,GAG5CiL,cACE,OAAOle,KAAKnB,WAAWoU,IAAI,YAG7BkL,uBACQ5B,MAAAA,EAAWvc,KAAKnB,WAAWoU,IAAI,YACrC,MAAwB,iBAAbsJ,EACFvR,EAAOnI,SAASG,UAAUuZ,GAE1B,GAIX6B,eAAe,IAAAC,EACb,OAAA,QAAAA,EAAOre,KAAKie,cACT/Z,MAAM,mBADT,IAAAma,OAAA,EAAOA,EACgB,GACpB5d,cAGLqd,iBACE,OAAO9d,KAAKnB,WAAWoU,IAAI,eAG7B+K,aACE,OAAOhe,KAAKnB,WAAWiU,IAAI,WAG7BwL,aACE,OAAOte,KAAKnB,WAAWoU,IAAI,WAG7BsL,WACE,OAAOve,KAAKnB,WAAWoU,IAAI,SAG7BuL,YACE,OAAOxe,KAAKnB,WAAWoU,IAAI,UAG7BwL,UACE,OAAOze,KAAKsL,KAGd+Q,QAAQ/Q,GAEF,GADCA,KAAAA,KAAOA,EACRtL,KAAKwd,gBACA,OAAAxd,KAAK0e,cAIhBhC,cACE1c,KAAK2e,uBACArT,KAAAA,KAAO,KAGdsT,oBACS,OAAuB,MAAvB5e,KAAK6e,eAAyB7e,KAAK6e,eAAiB,EAG7DC,kBAAkBhb,GACmB,IAAAib,EAAAC,EAAnC,GAAIhf,KAAK6e,iBAAmB/a,EAEnB,OADF+a,KAAAA,eAAiB/a,EACf,QAAAib,EAAA/e,KAAKif,8BAAL,IAAAF,GAAA,QAAAC,EAAAD,EAA6BG,yCAA7B,IAAAF,OAAA,EAAAA,EAAA7Z,KAAA4Z,EAAiE/e,MAI5E0P,SACS,OAAA1P,KAAK8c,gBAGdnN,cACS,MAAA,CAAEZ,MAAMY,eAAepG,WAAYvJ,KAAKnB,WAAW8Q,cAAe3P,KAAKmf,iBAAkBlO,KAAK,KAKvGkO,gBACE,OAAOnf,KAAKof,YAAcpf,KAAKqf,cAGjCC,cAAcld,GACsB,IAAAmd,EAAAC,EAAAC,EAAAC,EAAlC,GAAItd,IAAQpC,KAAKmf,gBAGR,OAFFC,KAAAA,WAAahd,EAClB,QAAAmd,EAAAvf,KAAKqd,uBAAL,IAAAkC,GAAA,QAAAC,EAAAD,EAAsBjC,qCAAtB,IAAAkC,GAAAA,EAAAra,KAAAoa,EAAsDvf,MAC/C,QAAAyf,EAAAzf,KAAKud,gBAAL,IAAAkC,GAAA,QAAAC,EAAAD,EAAeE,qCAAf,IAAAD,OAAA,EAAAA,EAAAva,KAAAsa,EAA+Czf,MAI1Dyd,aACS,OAAAzd,KAAK4f,QAAQ5f,KAAK2d,SAAU3d,KAAK0c,aAG1CgC,cACM,GAAA1e,KAAKsL,KAEP,OADKuU,KAAAA,cAAgBC,IAAIC,gBAAgB/f,KAAKsL,MACvCtL,KAAK4f,QAAQ5f,KAAK6f,eAI7BlB,uBACM3e,KAAK6f,gBACPC,IAAIE,gBAAgBhgB,KAAK6f,eACpBA,KAAAA,cAAgB,MAIzBD,QAAQxd,EAAKkK,GACX,GAAIlK,GAAOA,IAAQpC,KAAKmf,gBAAiB,CAClCE,KAAAA,cAAgBjd,EAErB,OADkB,IAAIoZ,GAAsBpZ,GAEzC6d,MAAKC,IAAC,IAAAtE,MAAEA,EAAFE,OAASA,GAAaoE,EAM3B,OALKlgB,KAAKue,YAAeve,KAAKwe,aAC5Bxe,KAAK+c,cAAc,CAAEnB,MAAAA,EAAOE,OAAAA,IAEzBuD,KAAAA,cAAgB,KAChBC,KAAAA,cAAcld,GACZkK,MAAAA,OAAP,EAAOA,OAER6T,OAAM,KACAd,KAAAA,cAAgB,KACd/S,MAAAA,OAAP,EAAOA,SApNI4P,EAAAA,wBACS,+BCHf,MAAMkE,WAA0BhT,EAC7C0B,YAAYuR,EAAmB5U,GAC7BsD,SAASxF,WACJ8W,KAAAA,kBAAoBA,EACpB5U,KAAAA,WAAaA,EAClBzL,KAAK0M,GAAK1M,KAAKyL,WAAWiB,GAC1B1M,KAAKsL,KAAOtL,KAAKyL,WAAWH,KAG9BtJ,SACE,OAAOhC,KAAKqgB,kBAAkBC,2BAA2BtgB,KAAKyL,aAIlE2U,GAAkB/S,YAAY,2BAC9B+S,GAAkB/S,YAAY,2BAC9B+S,GAAkB/S,YAAY,2BAC9B+S,GAAkB/S,YAAY,4BAC9B+S,GAAkB/S,YAAY,4BAC9B+S,GAAkB/S,YAAY,wBAC9B+S,GAAkB/S,YAAY,4BAC9B+S,GAAkB/S,YAAY,qBAC9B+S,GAAkB/S,YAAY,sBAC9B+S,GAAkB/S,YAAY,0BAC9B+S,GAAkB/S,YAAY,0BAC9B+S,GAAkB/S,YAAY,mCAC9B+S,GAAkB/S,YAAY,2BAC9B+S,GAAkB/S,YAAY,6BAC9B+S,GAAkB/S,YAAY,sBAC9B+S,GAAkB/S,YAAY,sBAC9B+S,GAAkB/S,YAAY,0BAC9B+S,GAAkB/S,YAAY,gCAC9B+S,GAAkB/S,YAAY,gCChCf,MAAMkT,WAA0BnT,EAC7C0B,cAAY7D,IAAAA,yDAAc,GACxB8D,SAASxF,WACJiX,KAAAA,mBAAqB,GAC1B3Q,MAAMC,KAAK7E,GAAa5C,SAASoD,IAC1BgV,KAAAA,iBAAiBhV,MAI1BiV,iBACQ3P,MAAAA,EAAS,GACf,IAAK,MAAMrE,KAAM1M,KAAKwgB,mBAAoB,CACxC,MAAM/U,EAAazL,KAAKwgB,mBAAmB9T,GAC3CqE,EAAOhI,KAAK0C,GAEd,OAAOsF,EAGT0P,iBAAiBhV,GAIf,OAHKzL,KAAKwgB,mBAAmB/U,EAAWiB,MACtC1M,KAAKwgB,mBAAmB/U,EAAWiB,IAAM,IAAI0T,GAAkBpgB,KAAMyL,IAEhEzL,KAAKwgB,mBAAmB/U,EAAWiB,IAG5CiU,oBAAoBlV,GAClB,OAAOA,EAAWiB,MAAM1M,KAAKwgB,mBAG/BF,2BAA2B7U,GACiB,IAAA0R,EAAAC,EAA1C,GAAIpd,KAAK2gB,oBAAoBlV,GACpB,OAAA,QAAA0R,EAAAnd,KAAKud,gBAAL,IAAAJ,GAAA,QAAAC,EAAAD,EAAeyD,sDAAf,IAAAxD,OAAA,EAAAA,EAAAjY,KAAAgY,EAAgE1R,GAI3EoV,mBAAmBpV,GACXqV,MAAAA,EAAoB9gB,KAAKwgB,mBAAmB/U,EAAWiB,IAE7D,cADO1M,KAAKwgB,mBAAmB/U,EAAWiB,IACnCoU,GCtCI,MAAMC,WAAc7P,EAGd5C,oBAAC/B,EAAMuC,GACxBA,EAAYvC,KAAOA,EACnBvM,KAAKghB,MAAMzU,GAAQuC,EAGduC,gBAAS4P,GACRnS,MAAAA,EAAc9O,KAAKghB,MAAMC,EAAU1U,MACzC,GAAIuC,EACF,OAAOA,EAAYuC,SAAS4P,GAIhCnS,YAAYhL,GAAOjF,IAAAA,yDAAa,GAC9BkQ,SAASxF,WACTvJ,KAAKnB,WAAa2a,GAAK/J,IAAI5Q,GAG7BqiB,mBAAmBriB,GACV,OAAA,IAAImB,KAAK8O,YAAY9O,KAAKmhB,WAAYtiB,GAG/CuiB,6BAA6BviB,GACpB,OAAAmB,KAAKkhB,mBAAmBlhB,KAAKnB,WAAWkb,MAAMlb,IAGvDwiB,qBAAqBzE,GACZ,OAAA5c,KAAKkhB,mBAAmBlhB,KAAKnB,WAAWmD,OAAO4a,IAGxD9C,OACE,OAAO9Z,KAAKkhB,mBAAmBlhB,KAAKnB,YAGtCgM,aAAa+R,GACX,OAAO5c,KAAKnB,WAAWoU,IAAI2J,GAG7B0E,oBACE,OAAOthB,KAAKnB,WAGdie,gBACE,OAAO9c,KAAKnB,WAAWsb,WAGzB0C,aAAaD,GACX,OAAO5c,KAAKnB,WAAWiU,IAAI8J,GAG7B2E,0BAA0BC,GACjBA,OAAAA,GAASxhB,KAAKwO,aAAegT,EAAMhT,WAG5CiT,yBAAyBD,GACvB,OAAOA,IAAUxhB,KAAKnB,aAAe2iB,EAAM3iB,YAAcmB,KAAKnB,WAAW2Q,UAAUgS,EAAM3iB,aAG3F6iB,eACE,OAAO,EAGTlS,UAAUgS,GAEN,OAAAzS,MAAMS,aAAajG,YACnBvJ,KAAKuR,qBAAqBiQ,IACxBxhB,KAAKuhB,0BAA0BC,IAC/BxhB,KAAKyhB,yBAAyBD,GAIpCtH,UACS,OAAgB,IAAhBla,KAAKwJ,OAGdmY,iBACE,OAAO,EAGTjS,SACS,MAAA,CACLnD,KAAMvM,KAAK8O,YAAYvC,KACvB1N,WAAYmB,KAAK8c,iBAIrBnL,wBACS,MAAA,CACLpF,KAAMvM,KAAK8O,YAAYvC,KACvB1N,WAAYmB,KAAKnB,WAAW2S,WAMhCoQ,eACE,OAAO5hB,KAAK6c,aAAa,QAG3BgF,iBAAiBL,GACR,OAAAxhB,KAAK6K,aAAa,UAAY2W,EAAM3W,aAAa,QAK1DiX,YACE,OAAO9hB,KAAKwJ,OAGduY,sBAAsBP,GACpB,OAAO,GAhHUT,EAAAA,WACJ,ICCF,MAAMiB,WAAwBjB,GAGpC1P,gBAAS4P,GACd,OAAO,IAAIjhB,KAAKkc,GAAW7K,SAAS4P,EAAUxV,YAAawV,EAAUpiB,YAGvEiQ,YAAYrD,GACVsD,SAASxF,WACJkC,KAAAA,WAAaA,EACbjC,KAAAA,OAAS,EACTyY,KAAAA,wCAAwC,QACxCjiB,KAAKyL,WAAWuS,cACnBhe,KAAKkiB,6BAITD,wCAAwCrF,GAClC5c,KAAK6c,aAAaD,KACf5c,KAAKyL,WAAWoR,aAAaD,IAC3BnR,KAAAA,WAAWsR,cAAc/c,KAAKnB,WAAWsQ,MAAMyN,IAEjD/d,KAAAA,WAAamB,KAAKnB,WAAWmD,OAAO4a,IAI7CsF,6BACQrjB,MAAAA,EAAamB,KAAKnB,WAAWsQ,MAAM6S,GAAgBG,qBACpDtjB,EAAW2Q,UAAUxP,KAAKnB,cACxBA,KAAAA,WAAaA,GAItBsiB,WACE,OAAOnhB,KAAKyL,WAGdkW,iBACE,OAAQ3hB,KAAKyL,WAAWiS,YAG1B0E,aACE,OAAOpiB,KAAKnB,WAAWoU,IAAI,YAAc,GAG3CzD,UAAUgS,GAAO,IAAAa,EACR,OAAAtT,MAAMS,UAAUgS,IAAUxhB,KAAKyL,WAAWiB,MAAO8U,MAAAA,GAAA,UAAAA,EAAO/V,kBAAP,IAAA4W,SAAAA,EAAmB3V,IAG7E8B,WACE,M9BrDwC,I8BwD1CkB,SACE,MAAM4S,EAAOvT,MAAMW,UAAUnG,WAE7B,OADA+Y,EAAK7W,WAAazL,KAAKyL,WAChB6W,EAGT3S,cACE,MAAO,CAAEZ,MAAMY,eAAepG,WAAYvJ,KAAKyL,WAAWkE,eAAgBsB,KAAK,KAGjFsR,YACE,OAAOjR,KAAKO,UAAU7R,KAAKwO,aAhEVwT,EAAAA,GACU,sBAAA,CAAE,UAAW,iBAmE5CjB,GAAMyB,aAAa,aAAcR,ICrElB,MAAMS,WAAoB1B,GAChC1P,gBAAS4P,GACP,OAAA,IAAIjhB,KAAKihB,EAAU1Q,OAAQ0Q,EAAUpiB,YAG9CiQ,YAAYyB,GACVxB,SAASxF,WACTvJ,KAAKuQ,OTDyBA,CAAAA,GAAWA,EAAO9M,QAAQ,QAAS,MSCnDif,CAAkBnS,GAChCvQ,KAAKwJ,OAASxJ,KAAKuQ,OAAO/G,OAG5B2X,WACE,OAAOnhB,KAAKuQ,OAGd/B,WACE,OAAOxO,KAAKuQ,OAAO/B,WAGrBkT,eACS,MAAoB,OAApB1hB,KAAKwO,aAA2D,IAApCxO,KAAK6K,aAAa,cAGvD6E,SACE,MAAMqB,EAAShC,MAAMW,UAAUnG,WAE/B,OADAwH,EAAOR,OAASvQ,KAAKuQ,OACdQ,EAKTgR,sBAAsBP,GACpB,OAAOA,GAASxhB,KAAKuR,qBAAqBiQ,IAAUxhB,KAAKyhB,yBAAyBD,GAGpFmB,gBAAgBnB,GACd,OAAO,IAAIxhB,KAAK8O,YAAY9O,KAAKwO,WAAagT,EAAMhT,WAAYxO,KAAKnB,YAGvE+jB,cAAc1T,GACRoH,IAAAA,EAAMC,EAWV,OAVe,IAAXrH,GACFoH,EAAO,KACPC,EAAQvW,MACCkP,IAAWlP,KAAKwJ,QACzB8M,EAAOtW,KACPuW,EAAQ,OAERD,EAAO,IAAItW,KAAK8O,YAAY9O,KAAKuQ,OAAOpB,MAAM,EAAGD,GAASlP,KAAKnB,YAC/D0X,EAAQ,IAAIvW,KAAK8O,YAAY9O,KAAKuQ,OAAOpB,MAAMD,GAASlP,KAAKnB,aAExD,CAAEyX,EAAMC,GAGjBgM,YACM,IAAAhS,OAAEA,GAAWvQ,KAIVsR,OAHHf,EAAO/G,OAAS,KAClB+G,EAASA,EAAOpB,MAAM,EAAG,IAAM,KAE1BmC,KAAKO,UAAUtB,EAAO/B,aAIjCuS,GAAMyB,aAAa,SAAUC,IC5Dd,MAAMI,WAAuB3R,EACnCzB,WAAIgK,GACLA,OAAAA,aAAmBzZ,KACdyZ,EAEA,IAAIzZ,KAAKyZ,GAIpB3K,cAAY2K,IAAAA,yDAAU,GACpB1K,SAASxF,WACTvJ,KAAKyZ,QAAUA,EAAQtK,MAAM,GAC7BnP,KAAKwJ,OAASxJ,KAAKyZ,QAAQjQ,OAG7BsZ,QAAQlV,GACN,OAAO5N,KAAKyZ,QAAQqJ,QAAQlV,GAG9B0E,SAAgB,IAAA,IAAAF,EAAA7I,UAAAC,OAAN0E,EAAM,IAAA2B,MAAAuC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANnE,EAAMmE,GAAA9I,UAAA8I,GACd,OAAO,IAAIrS,KAAK8O,YAAYqD,EAAYnS,KAAKyZ,WAAYvL,IAG3D6U,WAAWzW,GACT,OAAOtM,KAAKyZ,QAAQjJ,KAAI,CAAC5C,EAAQsE,IAAU5F,EAASsB,EAAQsE,KAG9D8Q,oBAAoBpV,EAAQsE,GACnB,OAAAlS,KAAKsS,OAAOJ,EAAO,EAAGtE,GAG/BqV,4BAA4BC,EAAgBhR,GACnC,OAAAlS,KAAKsS,OAAOJ,EAAO,KAAMgR,EAAezJ,SAGjD0J,+BAA+BD,EAAgBE,GACvC,MAAE3J,EAASvH,GAAUlS,KAAKqjB,sBAAsBD,GAC/C,OAAA,IAAIpjB,KAAK8O,YAAY2K,GAASwJ,4BAA4BC,EAAgBhR,GAGnFoR,kBAAkBpR,EAAO5F,GACvB,OAAOtM,KAAKujB,qBAAqBjX,EAAStM,KAAKyZ,QAAQvH,IAASA,GAGlEqR,qBAAqB3V,EAAQsE,GACpB,OAAAlS,KAAKsS,OAAOJ,EAAO,EAAGtE,GAG/B4V,oBAAoBtR,GAClB,OAAOlS,KAAKsS,OAAOJ,EAAO,GAG5BuR,iBAAiBvR,GACf,OAAOlS,KAAKyZ,QAAQvH,GAGtBwR,yBAAyBlO,GACjB,MAAEiE,EAASJ,EAAWsK,GAAe3jB,KAAK4jB,oBAAoBpO,GACpE,OAAO,IAAIxV,KAAK8O,YAAY2K,EAAQtK,MAAMkK,EAAWsK,EAAa,IAGpEE,qBAAqBhkB,GACnB,MAAM4Z,EAAUzZ,KAAKyZ,QAAQlC,QAAQ3J,GAAW/N,EAAK+N,KACrD,OAAO,IAAI5N,KAAK8O,YAAY2K,GAG9BqK,qBAAqBtO,GACb,MAAEiE,EAASJ,EAAWsK,GAAe3jB,KAAK4jB,oBAAoBpO,GACpE,OAAO,IAAIxV,KAAK8O,YAAY2K,GAASnH,OAAO+G,EAAWsK,EAAatK,EAAY,GAGlF0K,wBAAwBvO,EAAOwO,GACvB,MAAEvK,EAASJ,EAAWsK,GAAe3jB,KAAK4jB,oBAAoBpO,GAC9DyO,EAAqBxK,EAAQjJ,KAAI,CAAC5C,EAAQsE,IAC9CmH,GAAanH,GAASA,GAASyR,EAAaK,EAAUpW,GAAUA,IAElE,OAAO,IAAI5N,KAAK8O,YAAYmV,GAG9BL,oBAAoBpO,GAClB,IAAI0O,GACEzK,EAAS0K,EAAgBjV,GAAWlP,KAAKqjB,sBAAsBe,GAAa5O,IAG3E,OAFJiE,EAASyK,GAAoB,IAAIlkB,KAAK8O,YAAY2K,GAAS4J,sBAAsBgB,GAAW7O,GAAStG,GAEjG,CAAEuK,EAAS0K,EAAgBD,EAAkB,GAGtDI,oBAAoBlB,GACZ,MAAAlR,MAAEA,GAAUlS,KAAKukB,6BAA6BnB,GACpD,OAAOpjB,KAAKyZ,QAAQvH,GAGtBmR,sBAAsBD,GAChBoB,IAAAA,EAAYC,EACV,MAAAvS,MAAEA,EAAFhD,OAASA,GAAWlP,KAAKukB,6BAA6BnB,GACtD3J,EAAUzZ,KAAKyZ,QAAQtK,MAAM,GAC/B+C,GAAS,MAATA,EACEhD,GAAW,IAAXA,EACFsV,EAAatS,EACbuS,EAAc,MACT,CACL,MAAM7W,EAAS5N,KAAKyjB,iBAAiBvR,IAC7BwS,EAAYC,GAAgB/W,EAAOgV,cAAc1T,GACzDuK,EAAQnH,OAAOJ,EAAO,EAAGwS,EAAYC,GACrCH,EAAatS,EAAQ,EACrBuS,EAAcC,EAAW5C,YAAc5S,OAGzCsV,EAAa/K,EAAQjQ,OACrBib,EAAc,EAGhB,MAAO,CAAEhL,EAAS+K,EAAYC,GAGhCG,cACQnL,MAAAA,EAAU,GAChB,IAAIoL,EAAgB7kB,KAAKyZ,QAAQ,GAejC,OAbKA,KAAAA,QAAQtK,MAAM,GAAG9G,SAASuF,IAAW,IAAAkX,EAAAC,UACpCD,GAAAC,EAAAF,GAAc9C,oCAAd+C,EAAsClX,KAAAA,EAAAA,GACxCiX,EAAgBA,EAAclC,gBAAgB/U,IAE9C6L,EAAQ1Q,KAAK8b,GACbA,EAAgBjX,MAIhBiX,GACFpL,EAAQ1Q,KAAK8b,GAGR,IAAI7kB,KAAK8O,YAAY2K,GAG9BuL,4BAA4BC,EAAYC,GAChCzL,MACA0L,EADUnlB,KAAKyZ,QAAQtK,MAAM,GACJA,MAAM8V,EAAYC,EAAW,GACtDE,EAAsB,IAAIplB,KAAK8O,YAAYqW,GAAgBP,cAAc3K,UACxE,OAAAja,KAAKsS,OAAO2S,EAAYE,EAAe3b,UAAW4b,GAG3Db,6BAA6BnB,GAC3B,IAAIlR,EACAmT,EAAkB,EACtB,IAAKnT,EAAQ,EAAGA,EAAQlS,KAAKyZ,QAAQjQ,OAAQ0I,IAAS,CACpD,MACMoT,EAAeD,EADNrlB,KAAKyZ,QAAQvH,GACkB4P,YAC9C,GAAIuD,GAAmBjC,GAAYA,EAAWkC,EACrC,MAAA,CAAEpT,MAAAA,EAAOhD,OAAQkU,EAAWiC,GAErCA,EAAkBC,EAEb,MAAA,CAAEpT,MAAO,KAAMhD,OAAQ,MAGhCqW,6BAA6BrT,EAAOhD,GAC9BkU,IAAAA,EAAW,EACf,IAAK,IAAIoC,EAAe,EAAGA,EAAexlB,KAAKyZ,QAAQjQ,OAAQgc,IAAgB,CAC7E,MAAM5X,EAAS5N,KAAKyZ,QAAQ+L,GACxBA,GAAAA,EAAetT,EACjBkR,GAAYxV,EAAOkU,iBACd,GAAI0D,IAAiBtT,EAAO,CACjCkR,GAAYlU,EACZ,OAGJ,OAAOkU,EAGTqC,iBAME,OALwB,MAApBzlB,KAAK0lB,cACFA,KAAAA,YAAc,EACnB1lB,KAAKyZ,QAAQpR,SAASuF,GAAW5N,KAAK0lB,aAAe9X,EAAOkU,eAGvD9hB,KAAK0lB,YAGdlX,WACE,OAAOxO,KAAKyZ,QAAQxI,KAAK,IAG3BgJ,UACE,OAAOja,KAAKyZ,QAAQtK,MAAM,GAG5BO,SACS,OAAA1P,KAAKia,UAGdzK,UAAU0T,GACR,OAAOnU,MAAMS,aAAajG,YAAcoc,GAAqB3lB,KAAKyZ,QAASyJ,MAAAA,SAAAA,EAAgBzJ,SAG7F9H,wBACS,MAAA,CACL8H,QAAa,IAAA/V,OAAA1D,KAAKyZ,QAAQjJ,KAAK5C,GAAWA,EAAO4D,YAAWP,KAAK,MAA1D,OAKb,MAAM0U,GAAuB,SAASrP,GAAMC,IAAAA,yDAAQ,GAClD,GAAID,EAAK9M,SAAW+M,EAAM/M,OACxB,OAAO,EAELuH,IAAAA,GAAS,EACb,IAAK,IAAImB,EAAQ,EAAGA,EAAQoE,EAAK9M,OAAQ0I,IAAS,CAChD,MAAMtE,EAAS0I,EAAKpE,GAChBnB,IAAWnD,EAAO4B,UAAU+G,EAAMrE,MACpCnB,GAAS,GAGb,OAAOA,GAGHqT,GAAgB5O,GAAUA,EAAM,GAEhC6O,GAAc7O,GAAUA,EAAM,GCtNrB,MAAMoQ,WAAa1U,EACM5C,uCAAC7C,EAAY5M,GAEjD,OAAO,IAAImB,KAAK,CADF,IAAIgiB,GAAgBvW,EAAY5M,KAIdyP,mCAACiC,EAAQ1R,GAEzC,OAAO,IAAImB,KAAK,CADF,IAAIyiB,GAAYlS,EAAQ1R,KAIjCwS,gBAASwU,GAEd,OAAO,IAAI7lB,KADI6P,MAAMC,KAAK+V,GAAUrV,KAAKyQ,GAAcF,GAAM1P,SAAS4P,MAIxEnS,cAAYgX,IAAAA,yDAAS,GACnB/W,SAASxF,WACT,MAAMwc,EAAWD,EAAOvO,QAAQiK,IAAWA,EAAMtH,YACjDla,KAAKgmB,UAAY,IAAInD,GAAekD,GAGtCjM,OACE,OAAO9Z,KAAKimB,kBAAkBjmB,KAAKgmB,WAGrCC,kBAAkBD,GACT,OAAA,IAAIhmB,KAAK8O,YAAYkX,EAAUpB,cAAc3K,WAGtDiM,mBAAmBC,GACjB,MAAML,EAAS9lB,KAAKomB,YAAY5V,KAAKgR,GAAU2E,EAAUE,KAAK7E,IAAUA,IACxE,OAAO,IAAIxhB,KAAK8O,YAAYgX,GAG9BQ,WAAW9mB,GACF,OAAAQ,KAAKumB,qBAAqB/mB,EAAMQ,KAAK8hB,aAG9CyE,qBAAqB/mB,EAAM4jB,GACzB,OAAOpjB,KAAKimB,kBAAkBjmB,KAAKgmB,UAAU7C,+BAA+B3jB,EAAKwmB,UAAW5C,IAG9FoD,kBAAkBhR,GACT,OAAAxV,KAAKimB,kBAAkBjmB,KAAKgmB,UAAUlC,qBAAqBtO,IAGpEiR,mBAAmBjnB,EAAMgW,GACvB,OAAOxV,KAAKwmB,kBAAkBhR,GAAO+Q,qBAAqB/mB,EAAMgW,EAAM,IAGxEkR,4BAA4BlR,EAAO4N,GACjC,GAAI5N,EAAM,IAAM4N,GAAYA,GAAY5N,EAAM,GAAI,OAClD,MAAMhW,EAAOQ,KAAK2mB,eAAenR,GAC3BhM,EAAShK,EAAKsiB,YAIb,OAHHtM,EAAM,GAAK4N,IACbA,GAAY5Z,GAEPxJ,KAAKwmB,kBAAkBhR,GAAO+Q,qBAAqB/mB,EAAM4jB,GAGlEwD,oBAAoBhK,EAAW9Y,EAAO0R,GAC9B3W,MAAAA,EAAa,GAEnB,OADAA,EAAW+d,GAAa9Y,EACjB9D,KAAK6mB,qBAAqBhoB,EAAY2W,GAG/CqR,qBAAqBhoB,EAAY2W,GAC/B,OAAOxV,KAAKimB,kBACVjmB,KAAKgmB,UAAUjC,wBAAwBvO,GAAQgM,GAAUA,EAAMJ,6BAA6BviB,MAIhGioB,uBAAuBlK,EAAWpH,GAChC,OAAOxV,KAAKimB,kBACVjmB,KAAKgmB,UAAUjC,wBAAwBvO,GAAQgM,GAAUA,EAAMH,qBAAqBzE,MAIxFmK,qBAAqBloB,EAAY2W,GAC/B,OAAOxV,KAAKimB,kBACVjmB,KAAKgmB,UAAUjC,wBAAwBvO,GAAQgM,GAAUA,EAAMN,mBAAmBriB,MAItFmoB,wBAAwB5D,GAAU,IAAA6D,EACzB,OAAA,QAAAA,EAAAjnB,KAAKgmB,UAAU1B,oBAAoBlB,UAAnC,IAAA6D,OAAA,EAAAA,EAA8CnK,kBAAmB,GAG1EoK,sBACQzN,MAAAA,EAAU5J,MAAMC,KAAK9P,KAAKgmB,UAAU/L,WAAWzJ,KAAKgR,GAAUA,EAAM1E,kBAC1E,OAAOtD,GAAK2N,8BAA8B1N,GAASU,WAGrDiN,2BAA2B5R,GACzB,OAAOxV,KAAK2mB,eAAenR,GAAO0R,uBAAyB,GAG7DG,qCAAqC1T,EAAezE,GAClD,IAAIqH,EACAD,EAAOC,EAAQrH,EACnB,MAAM1F,EAASxJ,KAAK8hB,YAEpB,KAAOxL,EAAO,GAAKtW,KAAKonB,2BAA2B,CAAE9Q,EAAO,EAAGC,IAAS5C,IACtE2C,IAEF,KAAOC,EAAQ/M,GAAUxJ,KAAKonB,2BAA2B,CAAElY,EAAQqH,EAAQ,IAAK5C,IAC9E4C,IAGF,MAAO,CAAED,EAAMC,GAGjBoQ,eAAenR,GACN,OAAAxV,KAAKimB,kBAAkBjmB,KAAKgmB,UAAUtC,yBAAyBlO,IAGxE8R,iBAAiB9R,GACR,OAAAxV,KAAKgmB,UAAUtC,yBAAyBlO,GAAOhH,WAGxD+Y,oBAAoBnE,GACX,OAAApjB,KAAKsnB,iBAAiB,CAAElE,EAAUA,EAAW,IAGtDoE,iBAAiBjX,GACR,OAAAvQ,KAAKsnB,iBAAiB,CAAE,EAAG/W,EAAO/G,WAAc+G,EAGzDkX,eAAelX,GACb,MAAM/G,EAASxJ,KAAK8hB,YACpB,OAAO9hB,KAAKsnB,iBAAiB,CAAE9d,EAAS+G,EAAO/G,OAAQA,MAAc+G,EAGvEmX,sBACE,OAAO1nB,KAAKgmB,UAAU/L,UAAU1C,QAAQiK,KAAYA,EAAM/V,aAG5DiV,iBACS,OAAA1gB,KAAK0nB,sBAAsBlX,KAAKgR,GAAUA,EAAM/V,aAGzDkc,6BAA6BC,GACvBxE,IAAAA,EAAW,EACV,IAAA,MAAM5B,KAASxhB,KAAKgmB,UAAU/L,UAAW,CAAA,IAAAoI,EACxC,YAAAA,EAAAb,EAAM/V,iCAAYiB,MAAOkb,EACpB,MAAA,CAAEnc,WAAY+V,EAAM/V,WAAY2X,SAAAA,GAEzCA,GAAY5B,EAAMhY,OAEb,MAAA,CAAEiC,WAAY,KAAM2X,SAAU,MAGvCyE,kBAAkBD,GACV,MAAAnc,WAAEA,GAAezL,KAAK2nB,6BAA6BC,GACzD,OAAOnc,EAGTqc,qBAAqBrc,GACbsc,MAAAA,EAAwB/nB,KAAK2nB,6BAA6Blc,EAAWiB,IACrE0W,EAAW2E,EAAsB3E,SAEvC,GADA3X,EAAasc,EAAsBtc,WAEjC,MAAO,CAAE2X,EAAUA,EAAW,GAIlC4E,8BAA8BnpB,EAAY4M,GACxC,MAAM+J,EAAQxV,KAAK8nB,qBAAqBrc,GACxC,OAAI+J,EACKxV,KAAK6mB,qBAAqBhoB,EAAY2W,GAEtCxV,KAIX8hB,YACE,OAAO9hB,KAAKgmB,UAAUP,iBAGxBvL,UACS,OAAqB,IAArBla,KAAK8hB,YAGdtS,UAAUhQ,GAAM,IAAAyoB,EACd,OAAOlZ,MAAMS,UAAUhQ,KAASA,MAAAA,WAAzByoB,EAAyBzoB,EAAMwmB,4BAA/B,EAAyBiC,EAAiBzY,UAAUxP,KAAKgmB,YAGlEtE,eACE,OAA4B,IAArB1hB,KAAK8hB,aAAqB9hB,KAAKgmB,UAAUvC,iBAAiB,GAAG/B,eAGtEwG,UAAU5b,GACR,OAAOtM,KAAKgmB,UAAUjD,WAAWzW,GAGnC8Z,YACE,OAAOpmB,KAAKgmB,UAAU/L,UAGxBkO,mBAAmB/E,GACjB,OAAOpjB,KAAKgmB,UAAU1B,oBAAoBlB,GAG5CzR,wBACS,MAAA,CAAEqU,UAAWhmB,KAAKgmB,UAAUxU,WAGrC4W,qBACE,MAAMpC,EAAYhmB,KAAKgmB,UAAUnC,sBAAsBrC,GAAUA,EAAMG,mBACvE,OAAO3hB,KAAKimB,kBAAkBD,GAGhCxX,WACE,OAAOxO,KAAKgmB,UAAUxX,WAGxBkB,SACE,OAAO1P,KAAKgmB,UAAUtW,SAGxB6S,YACSjR,OAAAA,KAAKO,UAAU7R,KAAKgmB,UAAU/L,UAAUzJ,KAAKgR,GAAUlQ,KAAKtS,MAAMwiB,EAAMe,gBAKjF/P,eACE,OAAOA,GAAaxS,KAAKwO,YAG3B6Z,QACS,MAAwB,QAAxBroB,KAAKwS,gBCzOD,MAAM8V,WAAcpX,EAC1BG,gBAASkX,GAEP,OAAA,IAAIvoB,KADE4lB,GAAKvU,SAASkX,EAAU/oB,MACf+oB,EAAU1pB,YAGlCiQ,YAAYtP,EAAMX,GAChBkQ,SAASxF,WACJ/J,KAAAA,KAAOgpB,GAAsBhpB,GAAQ,IAAIomB,IAC9C5lB,KAAKnB,WAAaA,GAAc,GAGlCqb,UACE,OAAOla,KAAKR,KAAKkiB,eAGnBlS,UAAUiZ,GACR,QAAI1Z,MAAMS,UAAUiZ,IAEbzoB,KAAKR,KAAKgQ,UAAUiZ,MAAAA,OAAAA,EAAAA,EAAOjpB,OAASuS,EAAe/R,KAAKnB,WAAY4pB,MAAAA,OAAAA,EAAAA,EAAO5pB,YAGpF6pB,aAAalpB,GACX,OAAO,IAAI8oB,GAAM9oB,EAAMQ,KAAKnB,YAG9B8pB,kBACE,OAAO3oB,KAAK0oB,aAAa,MAG3BxH,mBAAmBriB,GACjB,OAAO,IAAIypB,GAAMtoB,KAAKR,KAAMX,GAG9B+pB,wBACE,OAAO5oB,KAAKkhB,mBAAmB,MAGjCgF,mBAAmBC,GACX0C,MAAAA,EAAa1C,EAAUE,KAAKrmB,KAAKR,MACvC,OAAIqpB,EACK7oB,KAAK0oB,aAAaG,GAElB7oB,KAAK0oB,aAAa1oB,KAAKR,KAAK0mB,mBAAmBC,IAI1D2C,aAAalM,GACL/d,MAAAA,EAAamB,KAAKnB,WAAW6E,OAAOqlB,GAAgBnM,IAC1D,OAAO5c,KAAKkhB,mBAAmBriB,GAGjCmqB,gBAAgBpM,GACR,MAAAhd,cAAEA,GAAkB8T,GAAekJ,GACnC/d,EAAaoqB,GAAgBA,GAAgBjpB,KAAKnB,WAAY+d,GAAYhd,GAChF,OAAOI,KAAKkhB,mBAAmBriB,GAGjCqqB,sBACE,OAAOlpB,KAAKgpB,gBAAgBhpB,KAAKmpB,oBAGnCA,mBACE,OAAOC,GAAeppB,KAAKnB,YAG7Bie,gBACE,OAAO9c,KAAKnB,WAAWsQ,MAAM,GAG/Bka,oBACS,OAAArpB,KAAKnB,WAAW2K,OAGzB8f,oBAAoBC,GAClB,OAAOvpB,KAAKnB,WAAW0qB,EAAQ,GAGjC1M,aAAalJ,GACX,OAAO3T,KAAKnB,WAAWuK,SAASuK,GAGlC6V,gBACS,OAAAxpB,KAAKqpB,oBAAsB,EAGpCI,2BACE,OAAOL,GAAeppB,KAAK0pB,yBAG7BA,wBACE,OAAO1pB,KAAKnB,WAAW0Y,QAAQqF,GAAclJ,GAAekJ,GAAW1d,WAGzEyqB,kBACS,OAAA3pB,KAAK0pB,wBAAwBlgB,OAGtCogB,uBACE,MAAMhN,EAAY5c,KAAKypB,2BACvB,OAAI7M,EACK5c,KAAKgpB,gBAAgBpM,GAErB5c,KAIX6pB,uBACE,MAAMjN,EAAY5c,KAAKypB,2BACvB,GAAI7M,EAAW,CACP1K,MAAAA,EAAQlS,KAAKnB,WAAWirB,YAAYlN,GACpC/d,EAAasT,EAAYnS,KAAKnB,WAAYqT,EAAQ,EAAG,KAAM6W,GAAgBnM,IACjF,OAAO5c,KAAKkhB,mBAAmBriB,GAE/B,OAAOmB,KAIX+pB,wBACE,OAAO/pB,KAAKnB,WAAW0Y,QAAQqF,GAAclJ,GAAekJ,GAAWhd,gBAGzEoqB,aAAa,IAAAC,EACJvW,OAAP,QAAOA,EAAAA,GAAe1T,KAAKmpB,2BAA3B,IAAAc,OAAA,EAAOA,EAAyCrqB,cAGlDsqB,kBAAkB,IAAAC,EACTzW,OAAP,QAAOA,EAAAA,GAAe1T,KAAKmpB,2BAA3B,IAAAgB,OAAA,EAAOA,EAAyC/qB,SAGlDgrB,iBAAiB,IAAAC,EACR3W,OAAP,QAAOA,EAAAA,GAAe1T,KAAKmpB,2BAA3B,IAAAkB,OAAA,EAAOA,EAAyChrB,cAGlDirB,qCAAqCC,EAAWnH,GAC9C,MAAM7S,EAASvQ,KAAKwO,WACpB,IAAIuC,EACJ,OAAQwZ,GACN,IAAK,UACHxZ,EAASR,EAAOuS,QAAQ,KAAMM,GAC9B,MACF,IAAK,WACHrS,EAASR,EAAOpB,MAAM,EAAGiU,GAAU0G,YAAY,MAGnD,IAAgB,IAAZ/Y,EACF,OAAOA,EAIXY,wBACS,MAAA,CACLnS,KAAMQ,KAAKR,KAAKgS,UAChB3S,WAAYmB,KAAKnB,YAIrB2P,WACE,OAAOxO,KAAKR,KAAKgP,WAGnBkB,SACS,MAAA,CACLlQ,KAAMQ,KAAKR,KACXX,WAAYmB,KAAKnB,YAMrB2T,eACE,OAAOxS,KAAKR,KAAKgT,eAGnB6V,QACE,OAAOroB,KAAKR,KAAK6oB,QAKnBvG,YACE,OAAO9hB,KAAKR,KAAKsiB,YAGnBC,sBAAsB0G,GACpB,OAAQzoB,KAAKwpB,kBAAoBf,EAAMe,iBAAmBxpB,KAAKwS,iBAAmBiW,EAAMjW,eAG1FmQ,gBAAgB8F,GACd,MAAM+B,EAAc5E,GAAK6E,4BAA4B,MAC/CjrB,EAAOQ,KAAK0qB,2BAA2BpE,WAAWkE,GACjD,OAAAxqB,KAAK0oB,aAAalpB,EAAK8mB,WAAWmC,EAAMjpB,OAGjDojB,cAAc1T,GACRoH,IAAAA,EAAMC,EAWV,OAVe,IAAXrH,GACFoH,EAAO,KACPC,EAAQvW,MACCkP,IAAWlP,KAAK8hB,aACzBxL,EAAOtW,KACPuW,EAAQ,OAERD,EAAOtW,KAAK0oB,aAAa1oB,KAAKR,KAAKmnB,eAAe,CAAE,EAAGzX,KACvDqH,EAAQvW,KAAK0oB,aAAa1oB,KAAKR,KAAKmnB,eAAe,CAAEzX,EAAQlP,KAAK8hB,gBAE7D,CAAExL,EAAMC,GAGjBoU,wBACE,OAAO3qB,KAAKR,KAAKsiB,YAAc,EAGjC4I,2BACE,OAAIE,GAAqB5qB,KAAKR,MACrBQ,KAAKR,KAAKmnB,eAAe,CAAE,EAAG3mB,KAAK2qB,0BAEnC3qB,KAAKR,KAAKsa,OAMrB8H,aAAaiJ,GACX,OAAO7qB,KAAKnB,WAAWgsB,GAGzBhJ,iBAAiBiJ,EAAYD,GAC3B,MAAME,EAAkBD,EAAWhO,gBAC7BkO,EAAiBD,EAAgBF,GACjCjO,EAAY5c,KAAKnB,WAAWgsB,GAElC,OACEjO,IAAcoO,MACwB,IAApCtX,GAAekJ,GAAWtd,QnBpNG,MAC/B,IAACgU,GAAoB,CACvBA,GAAqB,GACrB,IAAK,MAAMzP,KAAOmH,EAAOlC,gBAAiB,CAClC,MAAAlJ,cAAEA,GAAkBoL,EAAOlC,gBAAgBjF,GAC5B,MAAjBjE,GACF0T,GAAmBvK,KAAKnJ,IAI9B,OAAO0T,ImB0M6C2X,GAAwB7hB,SAAS2hB,EAAgBF,EAAQ,OACxG7qB,KAAKwS,iBAAmBsY,EAAWtY,gBAAkBsY,EAAW5Q,YAOvE,MAAMsO,GAAwB,SAAShpB,GAGrC,OAFAA,EAAO0rB,GAAqC1rB,GAC5CA,EAAO2rB,GAAoB3rB,IAIvB0rB,GAAuC,SAAS1rB,GAChD4rB,IAAAA,GAAW,EACf,MAAMtF,EAAStmB,EAAK4mB,YAEpB,IAAIiF,EAAcvF,EAAO3W,MAAM,EAAG2W,EAAOtc,OAAS,GAC5C8hB,MAAAA,EAAYxF,EAAOA,EAAOtc,OAAS,GAEzC,OAAK8hB,GAELD,EAAcA,EAAY7a,KAAKgR,GACzBA,EAAME,gBACR0J,GAAW,EACJG,GAAsB/J,IAEtBA,IAIP4J,EACK,IAAIxF,GAAK,IAAKyF,EAAaC,IAE3B9rB,GAdcA,GAkBnBgsB,GAAiB5F,GAAK6E,4BAA4B,KAAM,CAAEgB,YAAY,IAEtEN,GAAsB,SAAS3rB,GACnC,OAAIorB,GAAqBprB,GAChBA,EAEAA,EAAK8mB,WAAWkF,KAIrBZ,GAAuB,SAASprB,GACpC,MAAMgK,EAAShK,EAAKsiB,YAChBtY,GAAW,IAAXA,EACF,OAAO,EAGFkiB,OADSlsB,EAAKmnB,eAAe,CAAEnd,EAAS,EAAGA,IACnCkY,gBAGX6J,GAAyB/J,GAAUA,EAAMH,qBAAqB,cAI9D0H,GAAkB,SAASnM,GACzB,MAAAhd,cAAEA,GAAkB8T,GAAekJ,GACzC,OAAIhd,EACK,CAAEA,EAAegd,GAEjB,CAAEA,IAMPwM,GAAkBtY,GAAUA,EAAM3B,OAAO,GAAG,GAE5C8Z,GAAkB,SAASnY,EAAOhN,GACtC,MAAMoO,EAAQpB,EAAMgZ,YAAYhmB,GAChC,OAAe,IAAXoO,EACKpB,EAEAqB,EAAYrB,EAAOoB,EAAO,IClUtB,MAAMyZ,WAAkBve,EACrC0B,cAAY2K,IAAAA,yDAAU,GACpB1K,SAASxF,WACJkQ,KAAAA,QAAU,GAEf5J,MAAMC,KAAK2J,GAASpR,SAASuF,IAC3B,MAAM8L,EAAOpI,KAAKO,UAAUjE,GACF,MAAtB5N,KAAKyZ,QAAQC,KACf1Z,KAAKyZ,QAAQC,GAAQ9L,MAK3ByY,KAAKzY,GACH,MAAM8L,EAAOpI,KAAKO,UAAUjE,GAC5B,OAAO5N,KAAKyZ,QAAQC,ICNT,MAAMkS,WAAiB1a,EAC7BG,gBAASwa,GAEd,OAAO,IAAI7rB,KADI6P,MAAMC,KAAK+b,GAAcrb,KAAK+X,GAAcD,GAAMjX,SAASkX,MAI3Dja,kBAACiC,EAAQpG,GAClB3K,MAAAA,EAAOomB,GAAK6E,4BAA4Bla,EAAQpG,GAC/C,OAAA,IAAInK,KAAK,CAAE,IAAIsoB,GAAM9oB,KAG9BsP,cAAYgd,IAAAA,yDAAS,GACnB/c,SAASxF,WACa,IAAlBuiB,EAAOtiB,SACTsiB,EAAS,CAAE,IAAIxD,KAEjBtoB,KAAK+rB,UAAYlJ,GAAepT,IAAIqc,GAGtC5R,UACE,MAAMuO,EAAQzoB,KAAKgsB,gBAAgB,GACnC,OAAiC,IAA1BhsB,KAAK+rB,UAAUviB,QAAgBif,EAAMvO,YAAcuO,EAAMe,gBAGlE1P,OACE,MAAMgS,0DADO,IACUG,kBAAoBjsB,KAAK+rB,UAAUnH,cAAc3K,UAAYja,KAAK+rB,UAAU9R,UAEnG,OAAO,IAAIja,KAAK8O,YAAYgd,GAG9BI,6BAA6BC,GACrBhG,MAAAA,EAAY,IAAIwF,GAAUQ,EAAeC,cAC/C,OAAOpsB,KAAKkmB,mBAAmBC,GAGjCD,mBAAmBC,GACX2F,MAAAA,EAAS9rB,KAAKqsB,YAAY7b,KAAKiY,GACftC,EAAUE,KAAKoC,IACbA,EAAMvC,mBAAmBC,KAEjD,OAAO,IAAInmB,KAAK8O,YAAYgd,GAG9BQ,8BAA4BxjB,IAAAA,yDAAkB,GACtCgjB,MAAAA,EAAS9rB,KAAKqsB,YAAY7b,KAAKiY,IAC7B5pB,MAAAA,EAAaiK,EAAgBpF,OAAO+kB,EAAM3L,iBAChD,OAAO2L,EAAMvH,mBAAmBriB,MAGlC,OAAO,IAAImB,KAAK8O,YAAYgd,GAG9BS,aAAaC,EAAUC,GACfva,MAAAA,EAAQlS,KAAK+rB,UAAUjJ,QAAQ0J,GACrC,OAAe,IAAXta,EACKlS,KAEF,IAAIA,KAAK8O,YAAY9O,KAAK+rB,UAAUxI,qBAAqBkJ,EAAUva,IAG5Ewa,sBAAsB1oB,EAAUwR,GACxB,MAAAuW,UAAEA,GAAc/nB,EACtBwR,EAAQD,GAAeC,GACnB,IAAE4N,GAAa5N,EACb,MAAAtD,MAAEA,EAAFhD,OAASA,GAAWlP,KAAK2sB,qBAAqBvJ,GAEhDrS,IAAAA,EAAS/Q,KACb,MAAMyoB,EAAQzoB,KAAK4sB,mBAAmBxJ,GAStC,OAPIzN,GAAiBH,IAAUiT,EAAMvO,YAAcuO,EAAMe,gBACvDzY,EAAS,IAAI/Q,KAAK8O,YAAYiC,EAAOgb,UAAUvI,oBAAoBtR,IAC1DuW,EAAMkC,0BAA4Bzb,GAC3CkU,IAGFrS,EAASA,EAAOyV,kBAAkBhR,GAC3B,IAAIxV,KAAK8O,YAAYiC,EAAOgb,UAAU5I,+BAA+B4I,EAAW3I,IAGzFyJ,qBAAqB7oB,EAAUwR,GACzBsX,IAAAA,EAAmB/b,EACvByE,EAAQD,GAAeC,GACjB,MAAEuX,GAAkBvX,EACpBwX,EAAgBhtB,KAAK2sB,qBAAqBI,GAC1CjkB,EAAkB9I,KAAKgsB,gBAAgBgB,EAAc9a,OAAO4K,gBAC5DmQ,EAAsBjpB,EAASkpB,yBAC/BC,EAA0BrkB,EAAgBqG,OAAO8d,EAAoBzjB,QAE3E,GAAIuI,EAAekb,EAAqBE,GAA0B,CAChE,MAAMC,EAAyBtkB,EAAgBqG,MAAM,GAAI8d,EAAoBzjB,QAC7EsjB,EAAoB9oB,EAASsoB,4BAA4Bc,QAEzDN,EAAoB9oB,EAAS8V,KAAK,CAAEmS,mBAAmB,IAAQK,4BAA4BxjB,GAG7F,MAAMukB,EAAaP,EAAkBQ,gBAC/BC,EAAaT,EAAkBd,gBAAgB,GAEjDja,GAAAA,EAAejJ,EAAiBykB,EAAWzQ,iBAAkB,CAC/D,MAAM0Q,EAAYD,EAAW7C,2BAGzB2C,GAFJtc,EAAS/Q,KAAKytB,kBAAkBD,EAAWhY,GAEvC6X,EAAa,EAAG,CAClBP,EAAoB,IAAI9sB,KAAK8O,YAAYge,EAAkBT,YAAYld,MAAM,IAC7E,MAAMiU,EAAW2J,EAAgBS,EAAU1L,YAC3C/Q,EAASA,EAAO2b,sBAAsBI,EAAmB1J,SAG3DrS,EAAS/Q,KAAK0sB,sBAAsBI,EAAmBtX,GAGzD,OAAOzE,EAGT0c,kBAAkBjuB,EAAMgW,GACtBA,EAAQD,GAAeC,GACjB,MAAEuX,GAAkBvX,GACpBtD,MAAEA,EAAFhD,OAASA,GAAWlP,KAAK2sB,qBAAqBI,GAE9C/oB,EAAWhE,KAAKwmB,kBAAkBhR,GACxC,OAAO,IAAIxV,KAAK8O,YACd9K,EAAS+nB,UAAUzI,kBAAkBpR,GAAQuW,GAC3CA,EAAMC,aAAaD,EAAMjpB,KAAK+mB,qBAAqB/mB,EAAM0P,OAK/DsX,kBAAkBhR,GAChB,IAAIsW,EACJtW,EAAQD,GAAeC,GACvB,MAAQkY,EAAcC,GAAkBnY,EACxC,GAAIG,GAAiBH,GACnB,OAAOxV,KAET,MAAQ4tB,EAAcC,GAAkBhe,MAAMC,KAAK9P,KAAK8tB,uBAAuBtY,IAEzE6D,EAAYuU,EAAa1b,MACzB6b,EAAaH,EAAa1e,OAC1B8e,EAAYhuB,KAAKgsB,gBAAgB3S,GAEjCsK,EAAakK,EAAc3b,MAC3B+b,EAAcJ,EAAc3e,OAC5Bgf,EAAaluB,KAAKgsB,gBAAgBrI,GAQxC,GALEgK,EAAgBD,GAAiB,GACjCM,EAAUrD,0BAA4BoD,GACtCG,EAAWvD,0BAA4BsD,GACc,OAArDC,EAAW1uB,KAAK+nB,oBAAoB0G,GAGpCnC,EAAS9rB,KAAK+rB,UAAUzI,kBAAkBK,GAAa8E,GACrDA,EAAMC,aAAaD,EAAMjpB,KAAKgnB,kBAAkB,CAAEyH,EAAaA,EAAc,WAE1E,CACL,IAAIxF,EACJ,MAAM0F,EAAWH,EAAUxuB,KAAKmnB,eAAe,CAAE,EAAGoH,IAC9CK,EAAYF,EAAW1uB,KAAKmnB,eAAe,CAAEsH,EAAaC,EAAWpM,cACrEtiB,EAAO2uB,EAAS7H,WAAW8H,GAM/B3F,EAJwBpP,IAAcsK,GAA6B,IAAfoK,GACXC,EAAU3E,qBAAuB6E,EAAW7E,oBAG7E6E,EAAWxF,aAAalpB,GAExBwuB,EAAUtF,aAAalpB,GAGjC,MAAM6uB,EAAqB1K,EAAa,EAAItK,EAC5CyS,EAAS9rB,KAAK+rB,UAAUzZ,OAAO+G,EAAWgV,EAAoB5F,GAGhE,OAAO,IAAIzoB,KAAK8O,YAAYgd,GAG9BpF,4BAA4BlR,EAAO4N,GACjC,IAAI5jB,EACJgW,EAAQD,GAAeC,GACvB,MAAQuX,EAAerH,GAAgBlQ,EACvC,GAAIuX,GAAiB3J,GAAYA,GAAYsC,EAC3C,OAAO1lB,KAGT,IAAIgE,EAAWhE,KAAKsuB,mBAAmB9Y,GACnCzE,EAAS/Q,KAAKwmB,kBAAkBhR,GAEpC,MAAM+Y,EAAkBxB,EAAgB3J,EACpCmL,IACFnL,GAAYpf,EAAS8d,aAGjB,MAAEyL,KAAezB,GAAW9nB,EAASqoB,YAW3C,OAVsB,IAAlBP,EAAOtiB,QACThK,EAAO+tB,EAAW7C,2BACd6D,IACFnL,GAAY,IAGd5jB,EAAO+tB,EAAW/tB,KAGpBuR,EAASA,EAAO0c,kBAAkBjuB,EAAM4jB,GAClB,IAAlB0I,EAAOtiB,OACFuH,GAGT/M,EAAW,IAAIhE,KAAK8O,YAAYgd,GAChC1I,GAAY5jB,EAAKsiB,YAEV/Q,EAAO2b,sBAAsB1oB,EAAUof,IAGhDwD,oBAAoBhK,EAAW9Y,EAAO0R,GAChC,IAAAuW,UAAEA,GAAc/rB,KAgBpB,OAfAA,KAAKwuB,iBACHhZ,GACA,CAACiT,EAAOgG,EAAWvc,IACjB6Z,EAAYA,EAAUzI,kBAAkBpR,GAAO,WAC7C,OAAIwB,GAAekJ,GACV6L,EAAMK,aAAalM,EAAW9Y,GAEjC2qB,EAAU,KAAOA,EAAU,GACtBhG,EAEAA,EAAMC,aAAaD,EAAMjpB,KAAKonB,oBAAoBhK,EAAW9Y,EAAO2qB,SAK9E,IAAIzuB,KAAK8O,YAAYid,GAG9BjD,aAAalM,EAAW9Y,GAClB,IAAAioB,UAAEA,GAAc/rB,KAIpB,OAHK0uB,KAAAA,WACH,CAACjG,EAAOvW,IAAU6Z,EAAYA,EAAUzI,kBAAkBpR,GAAO,IAAMuW,EAAMK,aAAalM,EAAW9Y,OAEhG,IAAI9D,KAAK8O,YAAYid,GAG9BjF,uBAAuBlK,EAAWpH,GAC5B,IAAAuW,UAAEA,GAAc/rB,KAUpB,OATKwuB,KAAAA,iBAAiBhZ,GAAO,SAASiT,EAAOgG,EAAWvc,GAClDwB,GAAekJ,GACjBmP,EAAYA,EAAUzI,kBAAkBpR,GAAO,IAAMuW,EAAMO,gBAAgBpM,KAClE6R,EAAU,KAAOA,EAAU,KACpC1C,EAAYA,EAAUzI,kBAAkBpR,GAAO,IAC7CuW,EAAMC,aAAaD,EAAMjpB,KAAKsnB,uBAAuBlK,EAAW6R,UAI/D,IAAIzuB,KAAK8O,YAAYid,GAG9B/D,8BAA8BnpB,EAAY4M,GACxC,MAAM+J,EAAQxV,KAAK8nB,qBAAqBrc,IAChCshB,GAAkBld,MAAMC,KAAK0F,IAC/BtD,MAAEA,GAAUlS,KAAK2sB,qBAAqBI,GACtCvtB,EAAOQ,KAAK2uB,eAAezc,GAE1B,OAAA,IAAIlS,KAAK8O,YACd9O,KAAK+rB,UAAUzI,kBAAkBpR,GAAQuW,GACvCA,EAAMC,aAAalpB,EAAKwoB,8BAA8BnpB,EAAY4M,OAKxEmjB,6BAA6BhS,EAAWnR,GACtC,MAAM+J,EAAQxV,KAAK8nB,qBAAqBrc,GACxC,OAAOzL,KAAK8mB,uBAAuBlK,EAAWpH,GAGhDqZ,wBAAwBrZ,GACtB,IAAIsW,EACJtW,EAAQD,GAAeC,GACjB,MAAEuX,GAAkBvX,GACpBtG,OAAEA,GAAWlP,KAAK2sB,qBAAqBI,GAEvC/oB,EAAWhE,KAAKwmB,kBAAkBhR,GAIxC,OAHe,IAAXtG,IACF4c,EAAS,CAAE,IAAIxD,KAEV,IAAItoB,KAAK8O,YACd9K,EAAS+nB,UAAU5I,+BAA+B,IAAIN,GAAeiJ,GAASiB,IAIlF+B,2BAA2Bnb,EAAe7P,EAAO0R,GAC/C,MAAMuZ,EAAW/uB,KAAKgvB,sCAAsCxZ,GAC5D,IAAIxR,EAAW+qB,EAAS/qB,SACxBwR,EAAQuZ,EAASvZ,MACjB,MAAMyZ,EAAcvb,GAAeC,GAE/Bsb,GAAAA,EAAYrvB,cAAe,CAC7BoE,EAAWA,EAASkrB,+BAA+B1Z,EAAO,CAAE2Z,oBAAqBxb,IACjF,MAAMyb,EAAYprB,EAASqrB,sCAAsC7Z,GACjExR,EAAWorB,EAAUprB,SACrBwR,EAAQ4Z,EAAU5Z,WAElBxR,EADSirB,EAAY7uB,UACV4D,EAASsrB,6BAA6B9Z,GACxCyZ,EAAY7vB,SACV4E,EAASurB,mCAAmC/Z,GAE5CxR,EAASwrB,yBAAyBha,GAGxCxR,OAAAA,EAAS4iB,oBAAoBjT,EAAe7P,EAAO0R,GAG5D0Z,+BAA+B1Z,GAAO7N,IAAAA,yDAAU,IAC1CokB,UAAEA,GAAc/rB,KAcpB,OAbKwuB,KAAAA,iBAAiBhZ,GAAO,SAASiT,EAAOgG,EAAWvc,GACtD,MAAMud,EAAoBhH,EAAMU,mBAC3BsG,GAGA/b,GAAe+b,GAAmB7vB,eAGnC6vB,IAAsB9nB,EAAQwnB,sBAGlCpD,EAAYA,EAAUzI,kBAAkBpR,GAAO,IAAMuW,EAAMO,gBAAgByG,SAEtE,IAAIzvB,KAAK8O,YAAYid,GAG9BwD,mCAAmC/Z,GAC7B,IAAAuW,UAAEA,GAAc/rB,KAWpB,OAVKwuB,KAAAA,iBAAiBhZ,GAAO,SAASiT,EAAOgG,EAAWvc,GACtD,MAAMud,EAAoBhH,EAAMU,mBAC3BsG,GAGA/b,GAAe+b,GAAmBrwB,WAGvC2sB,EAAYA,EAAUzI,kBAAkBpR,GAAO,IAAMuW,EAAMO,gBAAgByG,SAEtE,IAAIzvB,KAAK8O,YAAYid,GAG9BuD,6BAA6B9Z,GACvB,IAAAuW,UAAEA,GAAc/rB,KAMpB,OALKwuB,KAAAA,iBAAiBhZ,GAAO,SAASiT,EAAOgG,EAAWvc,GAClDuW,EAAMe,kBACRuC,EAAYA,EAAUzI,kBAAkBpR,GAAO,IAAMuW,EAAMG,8BAGxD,IAAI5oB,KAAK8O,YAAYid,GAG9BiD,sCAAsCxZ,GACpC,IAAI4N,EACJ5N,EAAQD,GAAeC,GACvB,IAAMuX,EAAerH,GAAgBlQ,EACrC,MAAMwX,EAAgBhtB,KAAK2sB,qBAAqBI,GAC1C2C,EAAc1vB,KAAK2sB,qBAAqBjH,GAC1C1hB,IAAAA,EAAWhE,KAET2vB,MAAAA,EAAa3rB,EAASgoB,gBAAgBgB,EAAc9a,OAW1D,GAVA8a,EAAc9d,OAASygB,EAAWrF,qCAAqC,WAAY0C,EAAc9d,QACrE,MAAxB8d,EAAc9d,SAChBkU,EAAWpf,EAAS4rB,qBAAqB5C,GACzChpB,EAAWA,EAAS6qB,wBAAwB,CAAEzL,EAAUA,EAAW,IACnEsM,EAAYxd,OAAS,EACrBwd,EAAYxgB,QAAUlL,EAASgoB,gBAAgBgB,EAAc9a,OAAO4P,YACpEkL,EAAc9a,OAAS,GAEzB8a,EAAc9d,OAAS,EAEI,IAAvBwgB,EAAYxgB,QAAgBwgB,EAAYxd,MAAQ8a,EAAc9a,MAChEwd,EAAYxd,OAAS,EACrBwd,EAAYxgB,OAASlL,EAASgoB,gBAAgB0D,EAAYxd,OAAOyY,4BAC5D,CACCkF,MAAAA,EAAW7rB,EAASgoB,gBAAgB0D,EAAYxd,OACiC,OAAnF2d,EAASrwB,KAAK8nB,iBAAiB,CAAEoI,EAAYxgB,OAAS,EAAGwgB,EAAYxgB,SACvEwgB,EAAYxgB,QAAU,EAEtBwgB,EAAYxgB,OAAS2gB,EAASvF,qCAAqC,UAAWoF,EAAYxgB,QAExFwgB,EAAYxgB,SAAW2gB,EAASlF,0BAClCvH,EAAWpf,EAAS4rB,qBAAqBF,GACzC1rB,EAAWA,EAAS6qB,wBAAwB,CAAEzL,EAAUA,EAAW,KAQhE,OAJP2J,EAAgB/oB,EAAS4rB,qBAAqB5C,GAC9CtH,EAAc1hB,EAAS4rB,qBAAqBF,GAGrC,CAAE1rB,SAAAA,EAAUwR,MAFnBA,EAAQD,GAAe,CAAEwX,EAAerH,KAK1C2J,sCAAsC7Z,GACpCA,EAAQD,GAAeC,GACnB,IAAE4N,GAAa5N,EACnB,MAAMjF,EAASvQ,KAAKsnB,iBAAiB9R,GAAOrG,MAAM,GAAI,GAClDnL,IAAAA,EAAWhE,KAOR,OALPuQ,EAAO9M,QAAQ,UAAU,SAASS,GAChCkf,GAAYlf,EAAMsF,OAClBxF,EAAWA,EAAS6qB,wBAAwB,CAAEzL,EAAW,EAAGA,OAGvD,CAAEpf,SAAAA,EAAUwR,MAAAA,GAGrBga,yBAAyBha,GACvBA,EAAQD,GAAeC,GACvB,MAAQuX,EAAerH,GAAgBlQ,EACjCyP,EAAajlB,KAAK2sB,qBAAqBI,GAAe7a,MACtDgT,EAAWllB,KAAK2sB,qBAAqBjH,GAAaxT,MACxD,OAAO,IAAIlS,KAAK8O,YAAY9O,KAAK+rB,UAAU/G,4BAA4BC,EAAYC,IAGrFoJ,mBAAmB9Y,GACjBA,EAAQD,GAAeC,GACjBsW,MAAAA,EAAS9rB,KAAK+rB,UAAUrI,yBAAyBlO,GAAOyE,UAC9D,OAAO,IAAIja,KAAK8O,YAAYgd,GAG9BxE,iBAAiB9R,GACf,IAAI0P,EACJ,MAAMpU,EAAQ0E,EAAQD,GAAeC,GAKrC,OAJgB1E,EAAMA,EAAMtH,OAAS,KACjBxJ,KAAK8hB,cACvBoD,GAAY,GAEPllB,KAAKsuB,mBAAmB9Y,GAAOhH,WAAWW,MAAM,EAAG+V,GAG5D8G,gBAAgB9Z,GACd,OAAOlS,KAAK+rB,UAAUtI,iBAAiBvR,GAGzC0a,mBAAmBxJ,GACX,MAAAlR,MAAEA,GAAUlS,KAAK2sB,qBAAqBvJ,GAC5C,OAAOpjB,KAAKgsB,gBAAgB9Z,GAG9Byc,eAAezc,GAAO,IAAA4d,EACpB,OAAA,QAAAA,EAAO9vB,KAAKgsB,gBAAgB9Z,UAA5B,IAAA4d,OAAA,EAAOA,EAA6BtwB,KAGtCuwB,kBAAkB3M,GACV,MAAAlR,MAAEA,GAAUlS,KAAK2sB,qBAAqBvJ,GAC5C,OAAOpjB,KAAK2uB,eAAezc,GAG7BiW,mBAAmB/E,GACX,MAAAlR,MAAEA,EAAFhD,OAASA,GAAWlP,KAAK2sB,qBAAqBvJ,GAC7C,OAAApjB,KAAK2uB,eAAezc,GAAOiW,mBAAmBjZ,GAGvD8gB,uBAAuB5M,GACf,MAAAlR,MAAEA,EAAFhD,OAASA,GAAWlP,KAAK2sB,qBAAqBvJ,GACpD,OAAOpjB,KAAK2uB,eAAezc,GAAOoV,iBAAiB,CAAEpY,EAAQA,EAAS,IAGxE4S,YACE,OAAO9hB,KAAK+rB,UAAUtG,iBAGxB4G,YACE,OAAOrsB,KAAK+rB,UAAU9R,UAGxBqT,gBACS,OAAAttB,KAAK+rB,UAAUviB,OAGxBymB,eACE,OAAOjwB,KAAKkwB,UAGdxB,UAAUpiB,GACR,OAAOtM,KAAK+rB,UAAUhJ,WAAWzW,GAGnCkiB,iBAAiBhZ,EAAOlJ,GAClBmc,IAAAA,EAAOgG,EACXjZ,EAAQD,GAAeC,GACvB,MAAQuX,EAAerH,GAAgBlQ,EACjCwX,EAAgBhtB,KAAK2sB,qBAAqBI,GAC1C2C,EAAc1vB,KAAK2sB,qBAAqBjH,GAE9C,GAAIsH,EAAc9a,QAAUwd,EAAYxd,MAG/B5F,OAFPmc,EAAQzoB,KAAKgsB,gBAAgBgB,EAAc9a,OAC3Cuc,EAAY,CAAEzB,EAAc9d,OAAQwgB,EAAYxgB,QACzC5C,EAASmc,EAAOgG,EAAWzB,EAAc9a,OAEhD,IAAK,IAAIA,EAAQ8a,EAAc9a,MAAOA,GAASwd,EAAYxd,MAAOA,IAEhE,GADAuW,EAAQzoB,KAAKgsB,gBAAgB9Z,GACzBuW,EAAO,CACT,OAAQvW,GACD8a,KAAAA,EAAc9a,MACjBuc,EAAY,CAAEzB,EAAc9d,OAAQuZ,EAAMjpB,KAAKsiB,aAC/C,MACG4N,KAAAA,EAAYxd,MACfuc,EAAY,CAAE,EAAGiB,EAAYxgB,QAC7B,MACF,QACEuf,EAAY,CAAE,EAAGhG,EAAMjpB,KAAKsiB,aAEhCxV,EAASmc,EAAOgG,EAAWvc,IAMnCkV,2BAA2B5R,GACzBA,EAAQD,GAAeC,GACjB,MAAEuX,GAAkBvX,EAC1B,GAAIG,GAAiBH,GACnB,OAAOxV,KAAKmwB,8BAA8BpD,GACrC,CACC5iB,MAAAA,EAAiB,GACjBrB,EAAkB,GASxB,OAPK0lB,KAAAA,iBAAiBhZ,GAAO,SAASiT,EAAOgG,GACvCA,GAAAA,EAAU,KAAOA,EAAU,GAEtB3lB,OADPqB,EAAepB,KAAK0f,EAAMjpB,KAAK4nB,2BAA2BqH,IACnD3lB,EAAgBC,KAAKqnB,GAAmB3H,OAI5CjP,GAAK2N,8BAA8Bhd,GACvC4P,MAAMP,GAAK2N,8BAA8Bre,IACzCqR,YAIPgW,8BAA8B/M,GACxBvf,IAAAA,EAAKC,EACH,MAAAoO,MAAEA,EAAFhD,OAASA,GAAWlP,KAAK2sB,qBAAqBvJ,GAC9CqF,EAAQzoB,KAAKgsB,gBAAgB9Z,GAC/B,IAACuW,EACH,MAAO,GAGT,MAAM4H,EAAmBD,GAAmB3H,GACtC5pB,EAAa4pB,EAAMjpB,KAAKwnB,wBAAwB9X,GAChDohB,EAAiB7H,EAAMjpB,KAAKwnB,wBAAwB9X,EAAS,GAC7DqhB,EAAwB3c,OAAOC,KAAK7I,EAAOb,gBAAgBoN,QAAQ1T,GAChEmH,EAAOb,eAAetG,GAAKuG,cAG/BvG,IAAAA,KAAOysB,EACVxsB,EAAQwsB,EAAezsB,IACnBC,IAAUjF,EAAWgF,IAAQ0sB,EAAsBnnB,SAASvF,MAC9DwsB,EAAiBxsB,GAAOC,GAI5B,OAAOusB,EAGTG,oCAAoC7c,EAAeyP,GAC3C,MAAAlR,MAAEA,EAAFhD,OAASA,GAAWlP,KAAK2sB,qBAAqBvJ,GAC9C5jB,EAAOQ,KAAK2uB,eAAezc,IACzBwE,EAAaE,GAAc/G,MAAMC,KAAKtQ,EAAK6nB,qCAAqC1T,EAAezE,IAEjG0G,EAAQ5V,KAAK4vB,qBAAqB,CAAE1d,MAAAA,EAAOhD,OAAQwH,IACnDb,EAAM7V,KAAK4vB,qBAAqB,CAAE1d,MAAAA,EAAOhD,OAAQ0H,IACvD,OAAOrB,GAAe,CAAEK,EAAOC,IAGjCqX,yBACMD,IAAAA,EAAsBjtB,KAAKgsB,gBAAgB,GAAGlP,gBAElD,IAAK,IAAI2T,EAAa,EAAGA,EAAazwB,KAAKstB,gBAAiBmD,IAAc,CAClE3nB,MAAAA,EAAkB9I,KAAKgsB,gBAAgByE,GAAY3T,gBACnD4T,EAAqBvtB,KAAKwtB,IAAI1D,EAAoBzjB,OAAQV,EAAgBU,QAEhFyjB,EAAsB,MACdlc,MAAAA,EAAS,GACV,IAAA,IAAImB,EAAQ,EAAGA,EAAQwe,GACtB5nB,EAAgBoJ,KAAW+a,EAAoB/a,GADLA,IAI9CnB,EAAOhI,KAAKD,EAAgBoJ,IAE9B,OAAOnB,GARa,GAYxB,OAAOkc,EAGTpF,kBAAkBD,GAChB,IAAK,MAAMnc,KAAczL,KAAK0gB,iBAC5B,GAAIjV,EAAWiB,KAAOkb,EACpB,OAAOnc,EAKbic,sBACMkJ,IAAAA,EAAmB,GAEvB,OADK7E,KAAAA,UAAUhJ,YAAW7C,IAAC,IAAA1gB,KAAEA,GAAH0gB,EAAc0Q,OAAAA,EAAmBA,EAAiBltB,OAAOlE,EAAKkoB,0BACjFkJ,EAGTlQ,iBACS,OAAA1gB,KAAK0nB,sBAAsBlX,KAAKgR,GAAUA,EAAM/V,aAGzDqc,qBAAqBrc,GACf2X,IAAAA,EAAW,EACf,MAAMyN,EAAW7wB,KAAK+rB,UAAU9R,UAChC,IAAK,IAAI/H,EAAQ,EAAGA,EAAQ2e,EAASrnB,OAAQ0I,IAAS,CAC9C,MAAA1S,KAAEA,GAASqxB,EAAS3e,GACpBuc,EAAYjvB,EAAKsoB,qBAAqBrc,GAC5C,GAAIgjB,EACF,OAAOlZ,GAAe,CAAE6N,EAAWqL,EAAU,GAAIrL,EAAWqL,EAAU,KAExErL,GAAY5jB,EAAKsiB,aAIrBgP,6BAA6BrlB,GAC3B,MAAM+J,EAAQxV,KAAK8nB,qBAAqBrc,GACxC,OAAOzL,KAAK8tB,uBAAuBtY,GAGrCub,gCAAgCtlB,GAC9B,IAAK,MAAM+V,KAASxhB,KAAK0nB,sBACvB,GAAIlG,EAAM/V,aAAeA,EACvB,OAAO+V,EAKbwP,4BAA4Brd,GACtByP,IAAAA,EAAW,EACT6N,MAAAA,EAAS,GAUf,OARAjxB,KAAKqsB,YAAYhkB,SAASogB,IACxB,MAAMjf,EAASif,EAAM3G,YACjB2G,EAAM5L,aAAalJ,IACrBsd,EAAOloB,KAAK,CAAEqa,EAAUA,EAAW5Z,IAErC4Z,GAAY5Z,KAGPynB,EAGTC,2BAA2Bvd,GAAe,IAAAwd,UAAEA,0DAAc,GACpD/N,EAAW,EACX5N,EAAQ,GACNyb,MAAAA,EAAS,GAsBf,OAZAjxB,KAAKomB,YAAY/d,SAASmZ,IACxB,MAAMhY,EAASgY,EAAMM,aATT,SAASN,GACrB,OAAI2P,EACK3P,EAAM3W,aAAa8I,KAAmBwd,EAEtC3P,EAAM3E,aAAalJ,IAMxBzP,CAAMsd,KACJhM,EAAM,KAAO4N,EACf5N,EAAM,GAAK4N,EAAW5Z,EAEtBynB,EAAOloB,KAAKyM,EAAQ,CAAE4N,EAAUA,EAAW5Z,KAG/C4Z,GAAY5Z,KAGPynB,EAGTtE,qBAAqBvJ,GACnB,MAAMgO,EAAWpxB,KAAK+rB,UAAUxH,6BAA6BphB,KAAKiM,IAAI,EAAGgU,IACzE,GAAsB,MAAlBgO,EAASlf,MACX,OAAOkf,EACF,CACL,MAAMtF,EAAS9rB,KAAKqsB,YACb,MAAA,CAAEna,MAAO4Z,EAAOtiB,OAAS,EAAG0F,OAAQ4c,EAAOA,EAAOtiB,OAAS,GAAGsY,cAIzE8N,qBAAqBwB,GACnB,OAAOpxB,KAAK+rB,UAAUxG,6BAA6B6L,EAASlf,MAAOkf,EAASliB,QAG9EmiB,0BAA0BjO,GACxB,OAAO7N,GAAevV,KAAK2sB,qBAAqBvJ,IAGlD0K,uBAAuBtY,GAEjB,KADJA,EAAQD,GAAeC,IACX,OAEN,MAAEuX,EAAerH,GAAgB7V,MAAMC,KAAK0F,GAC5CwX,EAAgBhtB,KAAK2sB,qBAAqBI,GAC1C2C,EAAc1vB,KAAK2sB,qBAAqBjH,GAC9C,OAAOnQ,GAAe,CAAEyX,EAAe0C,IAGzC4B,uBAAuBC,GACrB,IAAI5D,EACJ4D,EAAgBhc,GAAegc,GACzB7D,MAAAA,EAAe1tB,KAAK4vB,qBAAqB2B,EAAc,IAI7D,OAHK5b,GAAiB4b,KACpB5D,EAAgB3tB,KAAK4vB,qBAAqB2B,EAAc,KAEnDhc,GAAe,CAAEmY,EAAcC,IAGxCne,UAAUxL,GACR,OAAOhE,KAAK+rB,UAAUvc,UAAUxL,MAAAA,OAAAA,EAAAA,EAAU+nB,WAG5CyF,WACS,OAAAxxB,KAAKqsB,YAAY7b,KAAKiY,GAAUA,EAAMjpB,OAG/C4mB,YACQN,MAAAA,EAAS,GAMf,OAJAjW,MAAMC,KAAK9P,KAAKwxB,YAAYnpB,SAAS7I,IACnCsmB,EAAO/c,QAAQ8G,MAAMC,KAAKtQ,EAAK4mB,aAAe,QAGzCN,EAGTsG,aACE,OAAOpsB,KAAKqsB,YAAY3oB,OAAO1D,KAAKwxB,YAAY9tB,OAAO1D,KAAKomB,aAG9DqL,yBACQ3F,MAAAA,EAAS,GAEf,OADKC,KAAAA,UAAUhJ,YAAY0F,GAAUqD,EAAO/iB,KAAK0f,EAAMC,aAAaD,EAAMjpB,KAAK4oB,yBACxE,IAAIpoB,KAAK8O,YAAYgd,GAG9Btd,WACE,OAAOxO,KAAK+rB,UAAUvd,WAGxBkB,SACE,OAAO1P,KAAK+rB,UAAUrc,SAGxB6S,YACSjR,OAAAA,KAAKO,UAAU7R,KAAK+rB,UAAU9R,WAAWzJ,KAAKiY,GAAUnX,KAAKtS,MAAMypB,EAAMjpB,KAAK+iB,gBAIzF,MAAM6N,GAAqB,SAAS3H,GAC5B5pB,MAAAA,EAAa,GACb8U,EAAgB8U,EAAMU,mBAI5B,OAHIxV,IACF9U,EAAW8U,IAAiB,GAEvB9U,GClwBH6yB,GAA6B,oCAAoCtpB,MAAM,KACvEupB,GAA8B,cAAcvpB,MAAM,KAClDwpB,GAA6B,gBAAgBxpB,MAAM,KAE1C,MAAMypB,WAAsBzkB,EAC1BkB,gBAACvK,EAAM4D,GACdmqB,MAAAA,EAAY,IAAI9xB,KAAK+D,EAAM4D,GAEjC,OADAmqB,EAAUC,WACHD,EAGThjB,YAAY/K,GAAM,IAAAiuB,kBAAEA,EAAFC,mBAAqBA,EAArBC,kBAAyCA,0DAAsB,GAC/EnjB,SAASxF,WACTvJ,KAAKgyB,kBAAoBA,GAAqBN,GAC9C1xB,KAAKiyB,mBAAqBA,GAAsBN,GAChD3xB,KAAKkyB,kBAAoBA,GAAqBN,GAC9C5xB,KAAK8M,KAAOqlB,GAAyBpuB,GAGvCguB,WAES,OADP/xB,KAAKoyB,mBACEpyB,KAAKqyB,8BAGdC,UACS,OAAAtyB,KAAK8M,KAAKylB,UAGnBC,UACE,OAAOxyB,KAAK8M,KAKdslB,mBACE,MAAMK,EAAS5rB,EAAS7G,KAAK8M,MACvB4lB,EAAgB,GAEtB,KAAOD,EAAOE,YAAY,CACxB,MAAM7sB,EAAO2sB,EAAOG,YACZ9sB,OAAAA,EAAKD,UACNG,KAAAA,KAAKC,aACJjG,KAAK6yB,mBAAmB/sB,GAC1B4sB,EAAc3pB,KAAKjD,GAEdgtB,KAAAA,gBAAgBhtB,GAEvB,MACGE,KAAAA,KAAK2D,aACR+oB,EAAc3pB,KAAKjD,IAOzB,OAFA4sB,EAAcrqB,SAASvC,GAASY,EAAWZ,KAEpC9F,KAAK8M,KAGdgmB,gBAAgBhzB,GAad,OAZIA,EAAQ+c,aAAa,SACnB7c,KAAKiyB,mBAAmB7oB,SAAStJ,EAAQizB,WAC3CjzB,EAAQkpB,gBAAgB,QAI5BnZ,MAAMC,KAAKhQ,EAAQjB,YAAYwJ,SAAQ6X,IAAC,IAAArW,KAAEA,GAAWqW,EAC9ClgB,KAAKgyB,kBAAkB5oB,SAASS,IAAuC,IAA9BA,EAAKiZ,QAAQ,cACzDhjB,EAAQkpB,gBAAgBnf,MAIrB/J,EAGTuyB,8BAUE,OATAxiB,MAAMC,KAAK9P,KAAK8M,KAAKkmB,iBAAiB,UAAU3qB,SAAS4qB,IACvD,MAAMC,EAAkBD,EAAYE,uBAChCD,GAC+B,OAA7Bn0B,EAAQm0B,IACVA,EAAgBvqB,YAAYsqB,MAK3BjzB,KAAK8M,KAGd+lB,mBAAmB/yB,GACjB,IAAIA,MAAAA,OAAA,EAAAA,EAAS+F,YAAaG,KAAKC,aACxB,OAAAjG,KAAKozB,mBAAmBtzB,IAAYE,KAAKqzB,wBAAwBvzB,GAG1EszB,mBAAmBtzB,GACV,OAAAE,KAAKkyB,kBAAkB9oB,SAASrK,EAAQe,IAGjDuzB,wBAAwBvzB,GACtB,MAAuD,UAAhDA,EAAQ+K,aAAa,yBAAuCb,EAAwBlK,IAI/F,MAAMqyB,GAA2B,WAASpuB,IAAAA,yDAAO,GAE/CA,EAAOA,EAAKN,QAAQ,sBAAuB,WACrC6vB,MAAAA,EAAMtvB,SAASuvB,eAAeC,mBAAmB,IAOhDF,OANPA,EAAIrvB,gBAAgBsuB,UAAYxuB,EAEhC8L,MAAMC,KAAKwjB,EAAIlf,KAAK4e,iBAAiB,UAAU3qB,SAASvI,IACtDwzB,EAAIxmB,KAAKnE,YAAY7I,MAGhBwzB,EAAIxmB,MC5FP2mB,GAAiB,SAACljB,GAAQ1R,IAAAA,yDAAa,GACrC0N,MAAAA,EAAO,SAEN,MAAA,CAAEgE,OADTA,EAASoI,GAAgBpI,GACR1R,WAAAA,EAAY0N,KAAAA,IAazBmnB,GAAyB,CAAC5zB,EAAS+J,KACnC,IACKyH,OAAAA,KAAKtS,MAAMc,EAAQ+K,aAAR,aAAAnH,OAAkCmG,KACpD,MAAOkJ,GACP,MAAO,KAiBI,MAAM4gB,WAAmBvmB,EAC1BkB,aAACvK,EAAM4D,GACX0C,MAAAA,EAAS,IAAIrK,KAAK+D,EAAM4D,GAE9B,OADA0C,EAAOrL,QACAqL,EAGTyE,YAAY/K,GAAM,IAAA6vB,iBAAEA,0DAAqB,GACvC7kB,SAASxF,WACJxF,KAAAA,KAAOA,EACP6vB,KAAAA,iBAAmBA,EACnB9H,KAAAA,OAAS,GACT+H,KAAAA,cAAgB,GAChBC,KAAAA,kBAAoB,GAG3BC,cACE,OAAOnI,GAASva,SAASrR,KAAK8rB,QAKhC9sB,QACM,IACFgB,KAAKg0B,wBACCjwB,MAAAA,EAAO8tB,GAAcE,SAAS/xB,KAAK+D,MAAMuuB,UAC/CtyB,KAAKi0B,iBAAiB1B,UAAYxuB,EAClC,MAAM0uB,EAAS5rB,EAAS7G,KAAKi0B,iBAAkB,CAAEjtB,YAAaktB,KAC9D,KAAOzB,EAAOE,YACZ3yB,KAAKm0B,YAAY1B,EAAOG,aAEnB,OAAA5yB,KAAKo0B,yCACJ,QACRp0B,KAAKq0B,yBAITL,wBACM,OAAAh0B,KAAK4zB,kBACFK,KAAAA,iBAAmBj0B,KAAK4zB,iBAAiBU,WAAU,GACxDt0B,KAAKi0B,iBAAiBjL,gBAAgB,MACtChpB,KAAKi0B,iBAAiBlsB,aAAa,qBAAsB,IACzD/H,KAAKi0B,iBAAiBjsB,MAAMusB,QAAU,OAC/Bv0B,KAAK4zB,iBAAiB7zB,WAAWsU,aAAarU,KAAKi0B,iBAAkBj0B,KAAK4zB,iBAAiBY,eAE7FP,KAAAA,iBAAmBxsB,EAAY,CAAE1I,QAAS,MAAOiJ,MAAO,CAAEusB,QAAS,UACjEvwB,SAAS8I,KAAKnE,YAAY3I,KAAKi0B,mBAI1CI,wBACE,OAAO3tB,EAAW1G,KAAKi0B,kBAGzBE,YAAYruB,GACFA,OAAAA,EAAKD,UACNG,KAAAA,KAAKkE,UACR,IAAKlK,KAAKy0B,wBAAwB3uB,GAEhC,OADK4uB,KAAAA,uBAAuB5uB,GACrB9F,KAAK20B,gBAAgB7uB,GAE9B,MACGE,KAAAA,KAAKC,aAER,OADK2uB,KAAAA,sBAAsB9uB,GACpB9F,KAAK60B,eAAe/uB,IAIjC4uB,uBAAuB5uB,GACrB,MAAMhG,EAAUgG,EAAK/F,WACrB,GAAID,IAAYE,KAAK80B,qBAAuB90B,KAAK+0B,eAAejvB,EAAKW,iBACnE,OAAOzG,KAAKg1B,2BAA2B,MAClC,GAAIl1B,IAAYE,KAAKi0B,kBAAoBj0B,KAAK+0B,eAAej1B,GAAU,CAAA,IAAAm1B,EAC5E,MAAMp2B,EAAamB,KAAKk1B,mBAAmBp1B,GACtCiS,EAAelT,EAAY,QAAbo2B,EAAaj1B,KAAKm1B,oBAAL,IAAAF,OAAA,EAAAA,EAAmBp2B,cAC5Cs2B,KAAAA,aAAen1B,KAAKo1B,oCAAoCv2B,EAAYiB,GACpEg1B,KAAAA,oBAAsBh1B,IAKjC80B,sBAAsB90B,GACpB,MAAMu1B,EAAwBr1B,KAAK+0B,eAAej1B,GAC5Cw1B,EAA8BjvB,EAAoBrG,KAAK80B,oBAAqBh1B,GAE9Eu1B,GAAAA,IAA0Br1B,KAAK+0B,eAAej1B,EAAQoJ,aACxD,IAAKlJ,KAAKy0B,wBAAwB30B,EAAQoJ,cAAgBlJ,KAAK+0B,eAAej1B,EAAQy1B,mBAAoB,CACxG,MAAM12B,EAAamB,KAAKk1B,mBAAmBp1B,GACvCA,GAAAA,EAAQoJ,WAAY,CACtB,GAAMosB,GAA+BvjB,EAAelT,EAAYmB,KAAKm1B,aAAat2B,YAIhF,OAAOmB,KAAKg1B,2BAA2B,MAHlCG,KAAAA,aAAen1B,KAAKo1B,oCAAoCv2B,EAAYiB,GACpEg1B,KAAAA,oBAAsBh1B,SAM5B,GAAIE,KAAK80B,sBAAwBQ,IAAgCD,EAAuB,CAC7F,MAAMG,EAAqBx1B,KAAKy1B,uBAAuB31B,GACvD,GAAI01B,EACF,OAAOx1B,KAAK40B,sBAAsBY,GAElCx1B,KAAKm1B,aAAen1B,KAAK01B,mBACpBZ,KAAAA,oBAAsB,MAKjCW,uBAAuB31B,GACjB,IAAA61B,cAAEA,GAAkB71B,EACxB,KAAO61B,GAAiBA,IAAkB31B,KAAKi0B,kBAAkB,CAC/D,GAAIj0B,KAAK+0B,eAAeY,IAAkB31B,KAAK6zB,cAAczqB,SAASusB,GACpE,OAAOA,EAEPA,EAAgBA,EAAcA,cAGlC,OAAO,KAGThB,gBAAgB7uB,GACd,IAAIyK,EAASzK,EAAKmC,KACuC,IAAA2tB,EAApDC,GAAkC/vB,EAAK/F,cAC1CwQ,EAASuI,GAA0BvI,GAC/BulB,GAAyB,UAAAhwB,EAAKW,uBAAL,IAAAmvB,OAAA,EAAAA,EAAsBptB,eACjD+H,EAASwlB,GAA4BxlB,KAGzC,OAAOvQ,KAAKg1B,2BAA2BzkB,EAAQvQ,KAAKg2B,kBAAkBlwB,EAAK/F,aAG7E80B,eAAe/0B,GACb,IAAIjB,EACJ,GAAImL,EAAwBlK,GAAU,CAEpC,GADAjB,EAAa60B,GAAuB5zB,EAAS,cACzC8T,OAAOC,KAAKhV,GAAY2K,OAAQ,CAClC,MAAMW,EAAiBnK,KAAKg2B,kBAAkBl2B,GAC9CE,KAAKi2B,+BAA+Bp3B,EAAYsL,GAEhDrK,EAAQyyB,UAAY,GAEtB,OAAOvyB,KAAK8zB,kBAAkB/qB,KAAKjJ,GAE3Bf,OAAAA,EAAQe,IACd,IAAK,KAIH,OAHKE,KAAKk2B,UAAUp2B,IAAaE,KAAK+0B,eAAej1B,EAAQ00B,cACtDQ,KAAAA,2BAA2B,KAAMh1B,KAAKg2B,kBAAkBl2B,IAExDE,KAAK8zB,kBAAkB/qB,KAAKjJ,GACrC,IAAK,MACHjB,EAAa,CAAEuD,IAAKtC,EAAQ+K,aAAa,OAAQ2R,YAAa,SAC9D,MAAM5O,EApKY9N,CAAAA,IAC1B,MAAM8b,EAAQ9b,EAAQ+K,aAAa,SAC7BiR,EAAShc,EAAQ+K,aAAa,UAC9BsrB,EAAa,GAOnB,OANIva,IACFua,EAAWva,MAAQwa,SAASxa,EAAO,KAEjCE,IACFqa,EAAWra,OAASsa,SAASta,EAAQ,KAEhCqa,GA0JgBE,CAAmBv2B,GAClC,IAAK,MAAM+D,KAAO+J,EAAQ,CACxB,MAAM9J,EAAQ8J,EAAO/J,GACrBhF,EAAWgF,GAAOC,EAGpB,OADKmyB,KAAAA,+BAA+Bp3B,EAAYmB,KAAKg2B,kBAAkBl2B,IAChEE,KAAK8zB,kBAAkB/qB,KAAKjJ,GACrC,IAAK,KACH,GAAIA,EAAQC,WAAWmJ,aAAepJ,EACpC,OAAOE,KAAKg1B,2BAA2B,MAEzC,MACF,IAAK,KACH,GAAIl1B,EAAQC,WAAWmJ,aAAepJ,EACpC,OAAOE,KAAKg1B,2BAA2B,QASjDI,oCAAoCv2B,EAAYiB,GAC9CE,KAAK6zB,cAAc9qB,KAAKjJ,GACxB,MAAM2oB,EA1MiB,WAElB,MAAA,CAAEjpB,KADI,GACEX,kEAFwB,IA0MvBy3B,CAAmBz3B,GAEjC,OADAmB,KAAK8rB,OAAO/iB,KAAK0f,GACVA,EAGTiN,mBACE,OAAO11B,KAAKo1B,oCAAoC,GAAI,MAGtDJ,2BAA2BzkB,EAAQ1R,GAC1B,OAAAmB,KAAKu2B,YAAY9C,GAAeljB,EAAQ1R,IAGjDo3B,+BAA+BxqB,EAAY5M,GAClC,OAAAmB,KAAKu2B,YA7NW,SAAC9qB,GAEnB,MAAA,CAAEA,WAAAA,EAAY5M,kEAF8B,GAElB0N,KADpB,cA4NaiqB,CAAmB/qB,EAAY5M,IAGzD03B,YAAY/U,GAIV,OAH2B,IAAvBxhB,KAAK8rB,OAAOtiB,QACdxJ,KAAK01B,mBAEA11B,KAAK8rB,OAAO9rB,KAAK8rB,OAAOtiB,OAAS,GAAGhK,KAAKuJ,KAAKyY,GAGvDiV,0BAA0BlmB,EAAQ2B,GAC1B,MAAA1S,KAAEA,GAASQ,KAAK8rB,OAAO5Z,GACvBsP,EAAQhiB,EAAKA,EAAKgK,OAAS,GAEjC,GAAoB,YAAhBgY,MAAAA,OAAAA,EAAAA,EAAOjV,MAGF/M,OAAAA,EAAKuJ,KAAK0qB,GAAeljB,IAFhCiR,EAAMjR,QAAUA,EAMpBmmB,2BAA2BnmB,EAAQ2B,GAC3B,MAAA1S,KAAEA,GAASQ,KAAK8rB,OAAO5Z,GACvBsP,EAAQhiB,EAAK,GAEnB,GAAoB,YAAhBgiB,MAAAA,OAAAA,EAAAA,EAAOjV,MAGF/M,OAAAA,EAAKm3B,QAAQlD,GAAeljB,IAFnCiR,EAAMjR,OAASA,EAASiR,EAAMjR,OAQlCylB,kBAAkBl2B,GAChB,IAAIgE,EACEjF,MAAAA,EAAa,GACnB,IAAK,MAAM+d,KAAa5R,EAAOb,eAAgB,CAC7C,MAAMysB,EAAa5rB,EAAOb,eAAeyS,GACzC,GACEga,EAAW73B,SACXmG,EAA2BpF,EAAS,CAClCyE,iBAAkBqyB,EAAW73B,QAC7BgH,UAAW/F,KAAKi0B,mBAGlBp1B,EAAW+d,IAAa,OACnB,GAAIga,EAAWvsB,QAEpB,GADAvG,EAAQ8yB,EAAWvsB,OAAOvK,GACtBgE,EAAO,CACL+yB,IAAAA,GAA8B,EAC7B,IAAA,MAAMC,KAAgB92B,KAAK+2B,0BAA0Bj3B,GACxD,GAAI82B,EAAWvsB,OAAOysB,KAAkBhzB,EAAO,CAC7C+yB,GAA8B,EAC9B,MAGCA,IACHh4B,EAAW+d,GAAa9Y,SAGnB8yB,EAAWI,gBACpBlzB,EAAQhE,EAAQkI,MAAM4uB,EAAWI,eAC7BlzB,IACFjF,EAAW+d,GAAa9Y,IAK9B,GAAIkG,EAAwBlK,GAAU,CACpC,MAAM8N,EAAS8lB,GAAuB5zB,EAAS,cAC/C,IAAK,MAAM+D,KAAO+J,EAChB9J,EAAQ8J,EAAO/J,GACfhF,EAAWgF,GAAOC,EAItB,OAAOjF,EAGTq2B,mBAAmBp1B,GACXjB,MAAAA,EAAa,GACnB,KAAOiB,GAAWA,IAAYE,KAAKi0B,kBAAkB,CACnD,IAAK,MAAMrX,KAAa5R,EAAOlC,gBAAiB,CAC9C,MAAMmuB,EAAajsB,EAAOlC,gBAAgB8T,GAEK,IAAAsa,EAD/C,IAAyB,IAArBD,EAAWj4B,MACTD,GAAAA,EAAQe,KAAam3B,EAAWl4B,iBAC9Bk4B,EAAAA,EAAWp3B,0BAAXo3B,EAAkBn3B,KAAam3B,EAAWp3B,QAC5ChB,EAAWkK,KAAK6T,GACZqa,EAAWr3B,eACbf,EAAWkK,KAAKkuB,EAAWr3B,gBAMrCE,EAAUA,EAAQC,WAEblB,OAAAA,EAAWs4B,UAGpBJ,0BAA0Bj3B,GAClBs3B,MAAAA,EAAY,GAClB,KAAOt3B,GAAWA,IAAYE,KAAKi0B,kBAAkB,CACnD,MAAMvsB,EAAM3I,EAAQe,GAChB+I,IAAmBO,SAAS1B,IAC9B0vB,EAAUruB,KAAKjJ,GAEjBA,EAAUA,EAAQC,WAEpB,OAAOq3B,EAKTrC,eAAej1B,GACb,IAAIA,MAAAA,OAAA,EAAAA,EAAS+F,YAAaG,KAAKC,eAC3B+D,EAAwBlK,KACxBoF,EAA2BpF,EAAS,CAAEyE,iBAAkB,KAAMwB,UAAW/F,KAAKi0B,mBAElF,OAAOprB,IAAmBO,SAASrK,EAAQe,KACI,UAA7CwK,OAAOC,iBAAiBzK,GAASy0B,QAGrCE,wBAAwB3uB,GACtB,IAAIA,MAAAA,OAAA,EAAAA,EAAMD,YAAaG,KAAKkE,UAAW,OACvC,IAAKmtB,GAA+BvxB,EAAKmC,MAAO,OAC1C,MAAAlI,WAAEA,EAAF0G,gBAAcA,EAAd+tB,YAA+BA,GAAgB1uB,EACrD,OAAIwxB,GAA0Bv3B,EAAW0G,mBAAqBzG,KAAK+0B,eAAeh1B,EAAW0G,kBACzFovB,GAAkC91B,QADtC,GAEQ0G,GAAmBzG,KAAK+0B,eAAetuB,KAAqB+tB,GAAex0B,KAAK+0B,eAAeP,GAGzG0B,UAAUp2B,GACDf,MAAqB,OAArBA,EAAQe,IAAqBE,KAAK+0B,eAAej1B,EAAQC,aAAeD,EAAQC,WAAWw3B,YAAcz3B,EAKlHs0B,yCACE,MAAMoD,EAAgBx3B,KAAKy3B,iCAE3B,IAAK,IAAIvlB,EAAQ,EAAGA,EAAQlS,KAAK8rB,OAAOtiB,OAAQ0I,IAAS,CACvD,MAAMwlB,EAAS13B,KAAK23B,+BAA+BzlB,GAC/CwlB,IACEA,EAAOE,IAA0B,EAApBJ,EAAcI,KAC7B53B,KAAK02B,2BAA2B,KAAMxkB,GAGpCwlB,EAAOG,OAAgC,EAAvBL,EAAcK,QAChC73B,KAAKy2B,0BAA0B,KAAMvkB,KAM7CylB,+BAA+BzlB,GAC7B,MAAMpS,EAAUE,KAAK6zB,cAAc3hB,GACnC,GAAIpS,GACEA,EAAQ0I,cACLK,IAAmBO,SAASrK,EAAQe,MAAcE,KAAK8zB,kBAAkB1qB,SAAStJ,GAC9Eg4B,OAAAA,GAAsBh4B,GAMrC23B,iCACQ33B,MAAAA,EAAU2H,EAAYuD,EAAOlC,gBAAgBhK,QAAQC,SAEpD+4B,OADP93B,KAAKi0B,iBAAiBtrB,YAAY7I,GAC3Bg4B,GAAsBh4B,IAMjC,MAAM+1B,GAAoC,SAAS/1B,GAC3C,MAAAi4B,WAAEA,GAAeztB,OAAOC,iBAAiBzK,GACxC,MAAA,CAAE,MAAO,WAAY,YAAasJ,SAAS2uB,IAG9CT,GAA6BxxB,GAASA,IAASgwB,GAAyBhwB,EAAK0C,aAE7EsvB,GAAwB,SAASh4B,GACrC,MAAMkI,EAAQsC,OAAOC,iBAAiBzK,GACtC,GAAsB,UAAlBkI,EAAMusB,QACD,MAAA,CAAEqD,IAAKxB,SAASpuB,EAAMgwB,WAAYH,OAAQzB,SAASpuB,EAAMiwB,gBAI9D/D,GAAa,SAASpuB,GAC1B,MAAsB,UAAlB/G,EAAQ+G,GACHqB,WAAW+wB,cAEX/wB,WAAWgxB,eAMhBpC,GAA+BxlB,GAAWA,EAAO9M,QAAQ,IAAI2K,kBAAWyK,GAA2BE,OAAzD,MAAqE,IAE/Gse,GAAkC9mB,GAAW,IAAInC,OAAJ,IAAA1K,OAAemV,GAA2BE,OAA1C,OAAsDlZ,KAAK0Q,GAExGulB,GAA4BvlB,GAAW,MAAM1Q,KAAK0Q,GCvczC,MAAM6nB,GACnBtpB,YAAYupB,GACLA,KAAAA,YAAcA,EACnBr4B,KAAKgE,SAAWhE,KAAKq4B,YAAYr0B,SACjC,MAAMs0B,EAAgBt4B,KAAKq4B,YAAYE,mBACvCv4B,KAAK+sB,cAAgBuL,EAAc,GACnCt4B,KAAK0lB,YAAc4S,EAAc,GAE5BtL,KAAAA,cAAgBhtB,KAAKgE,SAAS2oB,qBAAqB3sB,KAAK+sB,eACxD2C,KAAAA,YAAc1vB,KAAKgE,SAAS2oB,qBAAqB3sB,KAAK0lB,aAEtD+C,KAAAA,MAAQzoB,KAAKgE,SAASgoB,gBAAgBhsB,KAAK0vB,YAAYxd,OAC5DlS,KAAKoqB,eAAiBpqB,KAAKyoB,MAAM2B,iBACjCpqB,KAAKw4B,kBAAoBx4B,KAAKyoB,MAAMjpB,KAAK+nB,oBAAoBvnB,KAAK0vB,YAAYxgB,OAAS,GACvFlP,KAAKy4B,cAAgBz4B,KAAKyoB,MAAMjpB,KAAK+nB,oBAAoBvnB,KAAK0vB,YAAYxgB,QAG5EwpB,yBACE,OAAI14B,KAAKyoB,MAAMe,iBAAmBxpB,KAAKyoB,MAAMuB,eAAiBhqB,KAAKyoB,MAAMvO,UAClC,IAA9Bla,KAAKgtB,cAAc9d,OAEnBlP,KAAKoqB,gBAAyC,OAAvBpqB,KAAKy4B,cAIvCE,4BAEI,OAAA34B,KAAKyoB,MAAMe,kBACVxpB,KAAKyoB,MAAMuB,eACXhqB,KAAKoqB,gBAAyC,OAAvBpqB,KAAKy4B,eAAqD,OAA3Bz4B,KAAKw4B,mBAIhEI,0BACE,OAAO54B,KAAKyoB,MAAMe,iBAAmBxpB,KAAKyoB,MAAMuB,cAAgBhqB,KAAKyoB,MAAMvO,UAG7E2e,wBACE,OAAO74B,KAAKyoB,MAAMuB,cAA8C,IAA9BhqB,KAAKgtB,cAAc9d,SAAiBlP,KAAKyoB,MAAMvO,UAGnF4e,iCACE,OAAO94B,KAAKyoB,MAAMe,kBAAoBxpB,KAAKyoB,MAAMuB,cAAgBhqB,KAAKyoB,MAAMvO,WChBjE,MAAM6e,WAAoB3rB,EACvC0B,cACEC,SAASxF,WACTvJ,KAAKgE,SAAW,IAAI4nB,GACf3gB,KAAAA,YAAc,GACd+tB,KAAAA,kBAAoB,GACpBC,KAAAA,SAAW,EAGlBC,YAAYl1B,GAC8B,IAAAmZ,EAAAgc,EAApC,IAACn1B,EAASwL,UAAUxP,KAAKgE,UAIpB,OAHFA,KAAAA,SAAWA,EAChBhE,KAAKo5B,qBACLp5B,KAAKi5B,WACE,QAAA9b,EAAAnd,KAAKud,gBAAL,IAAAJ,GAAA,QAAAgc,EAAAhc,EAAekc,oCAAf,IAAAF,OAAA,EAAAA,EAAAh0B,KAAAgY,EAA8CnZ,GAMzDs1B,cACS,MAAA,CACLt1B,SAAUhE,KAAKgE,SACfs0B,cAAet4B,KAAKu4B,oBAIxBgB,aAA0CrZ,GAAA,IAAAT,EAAA+Z,EAAAC,EAAAC,EAA7B,IAAA11B,SAAEA,EAAFs0B,cAAYA,GAAiBpY,EAIxC,eAHK3C,EAAAA,KAAAA,uBAAL,YAAeoc,mCAAf,IAAAH,GAAAA,EAAAr0B,KAAAsa,GACKyZ,KAAAA,YAAwB,MAAZl1B,EAAmBA,EAAW,IAAI4nB,IACnD5rB,KAAK45B,aAA8B,MAAjBtB,EAAwBA,EAAgB,CAAE,EAAG,IAC/D,QAAAmB,EAAOz5B,KAAKud,gBAAZ,IAAAkc,WAAAC,EAAOD,EAAeI,6CAAtB,EAAOH,EAAPv0B,KAAAs0B,GAKFK,WAAWt6B,GAAM,IAAAu6B,eAAEA,GAAmBxwB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAEwwB,gBAAgB,GACtD,MAAMzB,EAAgBt4B,KAAKu4B,mBACtBW,KAAAA,YAAYl5B,KAAKgE,SAASypB,kBAAkBjuB,EAAM84B,IAEvD,MAAMvL,EAAgBuL,EAAc,GAC9B5S,EAAcqH,EAAgBvtB,EAAKsiB,YAKlC,OAHHiY,GACGH,KAAAA,aAAalU,GAEb1lB,KAAKg6B,iCAAiC,CAAEjN,EAAerH,IAGhEuU,cAAiC,IAArBxR,EAAqBlf,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAb,IAAI+e,GAChBtkB,MAAAA,EAAW,IAAI4nB,GAAS,CAAEnD,IAChC,OAAOzoB,KAAKk6B,eAAel2B,GAG7Bk2B,iBAA0C,IAA3Bl2B,EAA2BuF,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhB,IAAIqiB,GAC5B,MAAM0M,EAAgBt4B,KAAKu4B,mBACtBW,KAAAA,YAAYl5B,KAAKgE,SAAS0oB,sBAAsB1oB,EAAUs0B,IAE/D,MAAMvL,EAAgBuL,EAAc,GAC9B5S,EAAcqH,EAAgB/oB,EAAS8d,YAGtC,OADF8X,KAAAA,aAAalU,GACX1lB,KAAKg6B,iCAAiC,CAAEjN,EAAerH,IAGhEyU,aAAa5pB,EAAQ5I,GACnB,MAAM9I,EAAamB,KAAKo6B,2BAClB56B,EAAOomB,GAAK6E,4BAA4Bla,EAAQ1R,GACtD,OAAOmB,KAAK85B,WAAWt6B,EAAMmI,GAG/B0yB,mBACE,MAAM/B,EAAgBt4B,KAAKu4B,mBACtBW,KAAAA,YAAYl5B,KAAKgE,SAAS6qB,wBAAwByJ,IAEvD,MAAMvL,EAAgBuL,EAAc,GAC9B5S,EAAcqH,EAAgB,EAG7B,OADF6M,KAAAA,aAAalU,GACX1lB,KAAKg6B,iCAAiC,CAAEjN,EAAerH,IAGhE4U,kBACE,MAAMC,EAAY,IAAInC,GAAmBp4B,MAEzC,GAAIu6B,EAAU3B,0BAEZ,OADA54B,KAAKw6B,oBACEx6B,KAAK45B,aAAaW,EAAUxN,eAC9B,GAAIwN,EAAU1B,wBAAyB,CAC5C,MAAM70B,EAAW,IAAI4nB,GAAS,CAAE2O,EAAU9R,MAAME,oBAChD,OAAO3oB,KAAKk6B,eAAel2B,GACtB,OAAIu2B,EAAU7B,yBACZ14B,KAAKq6B,mBACHE,EAAUzB,iCACZ94B,KAAKy6B,2BACHF,EAAU5B,4BACZ34B,KAAK06B,oBAAoBH,GAEzBv6B,KAAKm6B,aAAa,MAI7BQ,WAAW52B,GACHC,MAAAA,EAAW2vB,GAAW30B,MAAM+E,GAAMgwB,cAClCuE,EAAgBt4B,KAAKu4B,mBAEtBW,KAAAA,YAAYl5B,KAAKgE,SAAS6oB,qBAAqB7oB,EAAUs0B,IAE9D,MAAMvL,EAAgBuL,EAAc,GAC9B5S,EAAcqH,EAAgB/oB,EAAS8d,YAAc,EAGpD,OADF8X,KAAAA,aAAalU,GACX1lB,KAAKg6B,iCAAiC,CAAEjN,EAAerH,IAGhEkV,YAAY72B,GACV,MAAMC,EAAW2vB,GAAW30B,MAAM+E,GAAMgwB,cAAc7H,6BAA6BlsB,KAAKgE,UAClFutB,EAAgBvxB,KAAK66B,iBAAiB,CAAEvxB,QAAQ,IAChDgvB,EAAgBt4B,KAAKgE,SAASstB,uBAAuBC,GAE3D,OADK2H,KAAAA,YAAYl1B,GACVhE,KAAK45B,aAAatB,GAG3BwC,WAAWxvB,GACT,OAAOtL,KAAK+6B,YAAY,CAAEzvB,IAG5ByvB,YAAYnuB,GACJ3B,MAAAA,EAAc,GASpB,OAPA4E,MAAMC,KAAKlD,GAAOvE,SAASiD,IAAS,IAAA0vB,EAC9B,GAAA,QAAAA,EAAAh7B,KAAKud,gBAAL,IAAAyd,GAAAA,EAAeC,4BAA4B3vB,GAAO,CACpD,MAAMG,EAAayQ,GAAWC,kBAAkB7Q,GAChDL,EAAYlC,KAAK0C,OAIdzL,KAAKk7B,kBAAkBjwB,GAGhCkwB,iBAAiB1vB,GACf,OAAOzL,KAAKk7B,kBAAkB,CAAEzvB,IAGlCyvB,kBAAkBjwB,GAChB,IAAIzL,EAAO,IAAIomB,GAef,OAbA/V,MAAMC,KAAK7E,GAAa5C,SAASoD,IAAe,IAAA2vB,EAC9C,MAAM7uB,EAAOd,EAAWsS,UAClB5S,EAAe,QAAAH,EAAAA,EAAOC,YAAYsB,UAAnB,IAAA6uB,OAAA,EAAAA,EAA0BjwB,aAEzCtM,EAAamB,KAAKo6B,2BACpBjvB,IACFtM,EAAWsM,aAAeA,GAGtBkwB,MAAAA,EAAiBzV,GAAK0V,gCAAgC7vB,EAAY5M,GACxEW,EAAOA,EAAK8mB,WAAW+U,MAGlBr7B,KAAK85B,WAAWt6B,GAGzB+7B,gCAAgChR,GAC9B,MAAMgH,EAAgBvxB,KAAK66B,mBAC3B,GAAIllB,GAAiB4b,GAAgB,CACnC,GAAkB,aAAdhH,GAAwD,IAA5BgH,EAAc,GAAGriB,OAC/C,OAAO,EAET,GAAIlP,KAAKw7B,oCAAoCjR,GAC3C,OAAO,OAGT,GAAIgH,EAAc,GAAGrf,QAAUqf,EAAc,GAAGrf,MAC9C,OAAO,EAGX,OAAO,EAGTupB,kBAAkBlR,GAAW,IACvB9e,EAAYiwB,EAA2BC,GADhBnyB,OAAEA,0DAAW,GAExC,MAAM+nB,EAAgBvxB,KAAK66B,mBAC3B,IAAIrlB,EAAQxV,KAAKu4B,mBACjB,MAAMqD,EAAuBjmB,GAAiBH,GAQ9C,GANIomB,EACFF,EAA0C,aAAdnR,GAAwD,IAA5BgH,EAAc,GAAGriB,OAEzEysB,EAAuBpK,EAAc,GAAGrf,QAAUqf,EAAc,GAAGrf,MAGjEwpB,GACE17B,KAAK67B,iCAAkC,CACzC,MAAMpT,EAAQzoB,KAAK87B,WASnB,GAPIrT,EAAMuB,aACRhqB,KAAKw6B,oBAELx6B,KAAK+7B,8BAGP/7B,KAAK45B,aAAapkB,EAAM,IACpBiT,EAAMvO,UACR,OAAO,EAYb,OAPI0hB,IACFpmB,EAAQxV,KAAKg8B,4BAA4BzR,EAAW,CAAE/gB,OAAAA,IACpC,aAAd+gB,IACF9e,EAAazL,KAAKi8B,qBAAqBzmB,KAIvC/J,GACGywB,KAAAA,eAAezwB,IACb,IAEFytB,KAAAA,YAAYl5B,KAAKgE,SAASwiB,kBAAkBhR,IACjDxV,KAAK45B,aAAapkB,EAAM,KACpBkmB,IAA6BC,QAA7BD,GAMRS,kBAAkB3mB,GACV,MAAE4N,GAAavT,MAAMC,KAAK9P,KAAKu4B,oBAErC,OADKW,KAAAA,YAAYl5B,KAAKgE,SAAS0iB,4BAA4BlR,EAAO4N,IAC3DpjB,KAAK45B,aAAaxW,GAG3BgZ,iBAAiB3wB,GACT+J,MAAAA,EAAQxV,KAAKgE,SAAS8jB,qBAAqBrc,GACjD,GAAI+J,EAGF,OAFAxV,KAAKq8B,wBACAnD,KAAAA,YAAYl5B,KAAKgE,SAASwiB,kBAAkBhR,IAC1CxV,KAAK45B,aAAapkB,EAAM,IAInCilB,2BACE,MAAQ1N,EAAerH,GAAgB7V,MAAMC,KAAK9P,KAAKu4B,oBACjD9P,EAAQzoB,KAAKgE,SAAS4oB,mBAAmBlH,GAE/C,OADA1lB,KAAKs8B,uBAAuB7T,EAAMU,oBAC3BnpB,KAAK45B,aAAa7M,GAG3BwP,oBAEE,OADAv8B,KAAKw8B,oBAAsBx8B,KAAKy8B,cACzBz8B,KAAKm6B,aA9PI,KAiQlBuC,oBACE,GAAgC,MAA5B18B,KAAKw8B,oBAEA,OADPx8B,KAAK28B,iBAAiB,CAAE38B,KAAKw8B,oBAAqBx8B,KAAKw8B,oBAnQzC,IAmQ2EhzB,SAClFxJ,KAAKu4B,mBAIhBqE,oBACOJ,KAAAA,oBAAsB,KAK7BK,oBAAoBlpB,GAClB,MAAM7P,EAAQ9D,KAAKg5B,kBAAkBrlB,GACrC,OAAgB,MAAT7P,IAA2B,IAAVA,EAG1Bg5B,uBAAuBnpB,GACrB,MAAM7P,GAAS9D,KAAKg5B,kBAAkBrlB,GACtC,OAAI7P,EACK9D,KAAK+8B,oBAAoBppB,EAAe7P,GAExC9D,KAAKs8B,uBAAuB3oB,GAIvCqpB,uBAAuBrpB,GACrB,OAAID,GAAeC,GACV3T,KAAKi9B,4BAA4BtpB,GAEjC3T,KAAKk9B,2BAA2BvpB,GAI3CupB,2BAA2BvpB,GACzB,MAAM3P,EAAWhE,KAAKm9B,sBAClB,GAACn5B,EAAD,CACJ,IAAK,MAAMyH,KAAcoE,MAAMC,KAAK9L,EAAS0c,kBAC3C,IAAKjV,EAAWuS,aACd,OAAO,EAGX,OAAO,GAGTif,4BAA4BtpB,GAC1B,MAAM8U,EAAQzoB,KAAK87B,WACf,GAACrT,EACL,OAAQA,EAAMyB,kBAGhB6S,oBAAoBppB,EAAe7P,GACjC,OAAI4P,GAAeC,GACV3T,KAAKo9B,kBAAkBzpB,EAAe7P,IAE7C9D,KAAKq9B,iBAAiB1pB,EAAe7P,GACrC9D,KAAKg5B,kBAAkBrlB,GAAiB7P,EACjC9D,KAAKs9B,2CAIhBD,iBAAiB1pB,EAAe7P,GAC9B,MAAMw0B,EAAgBt4B,KAAKu4B,mBACvB,IAACD,EAAe,OAEd,MAAEvL,EAAerH,GAAgB7V,MAAMC,KAAKwoB,GAC9CvL,GAAAA,IAAkBrH,EAMpB,OAAO1lB,KAAKk5B,YAAYl5B,KAAKgE,SAAS4iB,oBAAoBjT,EAAe7P,EAAOw0B,IAL5E3kB,GAAkB,SAAlBA,EAA0B,CAC5B,MAAMnU,EAAOomB,GAAK6E,4BAA4B3mB,EAAO,CAAE4G,KAAM5G,IAC7D,OAAO9D,KAAK85B,WAAWt6B,IAO7B49B,kBAAkBzpB,EAAe7P,GAC/B,MAAMw0B,EAAgBt4B,KAAKu4B,mBAC3B,GAAIv4B,KAAKg9B,uBAAuBrpB,GAE9B,OADA3T,KAAKk5B,YAAYl5B,KAAKgE,SAAS8qB,2BAA2Bnb,EAAe7P,EAAOw0B,IACzEt4B,KAAK45B,aAAatB,GAI7BgE,uBAAuB3oB,GACrB,OAAID,GAAeC,IACZ4pB,KAAAA,qBAAqB5pB,GACnB3T,KAAKw9B,4BAEPC,KAAAA,oBAAoB9pB,UAClB3T,KAAKg5B,kBAAkBrlB,GACvB3T,KAAKs9B,2CAIhBG,oBAAoB9pB,GAClB,MAAM2kB,EAAgBt4B,KAAKu4B,mBACvB,GAACD,EACL,OAAOt4B,KAAKk5B,YAAYl5B,KAAKgE,SAAS8iB,uBAAuBnT,EAAe2kB,IAG9EiF,qBAAqB5pB,GACnB,MAAM2kB,EAAgBt4B,KAAKu4B,mBACvB,GAACD,EACL,OAAOt4B,KAAKk5B,YAAYl5B,KAAKgE,SAAS8iB,uBAAuBnT,EAAe2kB,IAG9EoF,0BAA0B,IAAAC,EACxB,OAAwBhU,QAAZmS,EAAAA,KAAAA,kBAAYnS,IAAAA,OAAAA,EAAAA,EAAAA,mBAAoB,EAG9CiU,0BAA0B,IAAA3T,EACxB,MAAMxB,EAAQzoB,KAAK87B,WACf,GAACrT,EAAD,CACA/U,GAAJ,QAAIA,EAAAA,GAAe+U,EAAMgB,mCAAzB,IAAAQ,IAAIA,EAAkDrqB,cAMpD,OAAO6oB,EAAMkB,kBAAoB,EANkC,CACnE,MAAMkU,EAAgB79B,KAAK89B,mBAC3B,GAAID,EACKE,O3B/XgB,WAAC/rB,IAAQC,yDAAI,GAAb,OAAoBF,0DAAf,IAAgC5C,MAAM,EAAG8C,EAAEzI,QAASyI,G2B+XzE8rB,CAAgBF,EAAc9T,wBAAyBtB,EAAMsB,2BAO1EH,uBACE,MAAMnB,EAAQzoB,KAAK87B,WACf,GAACrT,EACL,OAAOzoB,KAAKk5B,YAAYl5B,KAAKgE,SAASuoB,aAAa9D,EAAOA,EAAMmB,yBAGlEC,uBACE,MAAMpB,EAAQzoB,KAAK87B,WACf,GAACrT,EACL,OAAOzoB,KAAKk5B,YAAYl5B,KAAKgE,SAASuoB,aAAa9D,EAAOA,EAAMoB,yBAGlEgS,iCAAiC,IAAAmC,EAC/B,OAAwB3U,QAAZyS,EAAAA,KAAAA,kBAAYzS,IAAAA,OAAAA,EAAAA,EAAAA,qBAAsB,EAGhD0S,8BAA8B,IAAAkC,EACtBrhB,MAAAA,EAAY,UAAA5c,KAAK87B,kBAAL,IAAAmC,OAAA,EAAAA,EAAiB9U,mBACnC,GAAIvM,EACF,OAAO5c,KAAKs8B,uBAAuB1f,GAIvC4d,oBACM,IAAEzN,GAAkBld,MAAMC,KAAK9P,KAAKu4B,oBAClC,MAAArmB,MAAEA,GAAUlS,KAAKgE,SAAS2oB,qBAAqBI,GACjD7H,IAAAA,EAAWhT,EACf,MAAMgsB,EAAiBl+B,KAAK87B,WAAWzS,oBAEnCZ,IAAAA,EAAQzoB,KAAKgE,SAASgoB,gBAAgB9G,EAAW,GACrD,KAAOuD,GACAA,EAAMuB,gBAAgBvB,EAAMY,qBAAuB6U,IAGxDhZ,IACAuD,EAAQzoB,KAAKgE,SAASgoB,gBAAgB9G,EAAW,GAGnD6H,EAAgB/sB,KAAKgE,SAAS4rB,qBAAqB,CAAE1d,MAAAA,EAAOhD,OAAQ,IACpE,MAAMwW,EAAc1lB,KAAKgE,SAAS4rB,qBAAqB,CAAE1d,MAAOgT,EAAUhW,OAAQ,IAClF,OAAOlP,KAAKk5B,YAAYl5B,KAAKgE,SAASkrB,+BAA+B,CAAEnC,EAAerH,KAGxF8X,0BACE,MAAMlF,EAAgBt4B,KAAKu4B,iBAAiB,CAAE4F,YAAY,IAC1D,GAAI7F,EAAe,CACXU,MAAAA,EAAoBh5B,KAAKgE,SAASojB,2BAA2BkR,GAU/D,GARJzoB,MAAMC,KAAKyD,MAAwBlL,SAASsL,IACrCqlB,EAAkBrlB,IAChB3T,KAAKg9B,uBAAuBrpB,KAC/BqlB,EAAkBrlB,IAAiB,OAKpC2B,GAAgB0jB,EAAmBh5B,KAAKg5B,mBAEpC,OADFA,KAAAA,kBAAoBA,EAClBh5B,KAAKs9B,2CAKlBc,uBACSz6B,OAAAA,EAAOwB,KAAK,GAAInF,KAAKg5B,mBAG9BoB,2BACQv7B,MAAAA,EAAa,GACnB,IAAK,MAAMgF,KAAO7D,KAAKg5B,kBAAmB,CACxC,MAAMl1B,EAAQ9D,KAAKg5B,kBAAkBn1B,IACvB,IAAVC,GACEgQ,GAAcjQ,KAChBhF,EAAWgF,GAAOC,GAIxB,OAAOjF,EAKTw/B,kBACE,OAAOr+B,KAAK+8B,oBAAoB,UAAU,GAG5CuB,gBACE,OAAOt+B,KAAKs8B,uBAAuB,UAGrCiC,qBACE,OAAOv+B,KAAK68B,oBAAoB,UAGlCjD,aAAatB,GAAe,IAAAkG,EACpBjN,MAAAA,EAAgBvxB,KAAKgE,SAAS8pB,uBAAuBwK,GAC3D,OAAA,QAAAkG,EAAOx+B,KAAKud,gBAAZ,IAAAihB,OAAA,EAAOA,EAAeC,sDAAsDlN,GAG9EgH,mBACE,MAAMhH,EAAgBvxB,KAAK66B,mBAC3B,GAAItJ,EACF,OAAOvxB,KAAKgE,SAASstB,uBAAuBC,GAIhDoL,iBAAiBrE,GACT/G,MAAAA,EAAgBvxB,KAAKgE,SAAS8pB,uBAAuBwK,GAC3D,OAAOt4B,KAAK0+B,sBAAsBC,iBAAiBpN,GAGrDkL,cACE,MAAMlL,EAAgBvxB,KAAK66B,mBAC3B,GAAItJ,EACK,OAAAvxB,KAAKgE,SAAS4rB,qBAAqB2B,EAAc,IAI5DsJ,iBAAiBlzB,GACX,OAAA3H,KAAK4+B,oBACA5+B,KAAK4+B,oBAEL5+B,KAAK0+B,sBAAsB7D,iBAAiBlzB,IAAY4N,GAAe,CAAErD,MAAO,EAAGhD,OAAQ,IAItG2vB,wBAAwBtN,EAAepc,GACrC,IAAIpE,EACC6tB,KAAAA,oBAAsBrN,EACvB,IACFxgB,EAASoE,IACD,QACHypB,KAAAA,oBAAsB,KAE7B,OAAO7tB,EAGT+tB,gBAAgBtpB,EAAOL,GACfoc,MAAAA,EAAgBvxB,KAAKgE,SAAS8pB,uBAAuBtY,GAC3D,OAAOxV,KAAK6+B,wBAAwBtN,EAAepc,GAGrD4pB,mBAAmBpnB,EAAUxC,GAC3B,MAAMoc,EAAgBvxB,KAAKg/B,gCAAgCrnB,EAAU,CAAErO,QAAQ,IAC/E,OAAOtJ,KAAK6+B,wBAAwBtN,EAAepc,GAGrD6mB,4BAA4BzR,GAAW,IAAA/gB,OAAEA,0DAAW,IAC5CujB,EAAerH,GAAgB7V,MAAMC,KAAK9P,KAAKu4B,oBAcrD,MAbkB,aAAdhO,EACE/gB,EACFujB,GAAiBvjB,EAEjBujB,EAAgB/sB,KAAKi/B,iCAAiClS,GAAgB,GAGpEvjB,EACFkc,GAAelc,EAEfkc,EAAc1lB,KAAKi/B,iCAAiCvZ,EAAa,GAG9DnQ,GAAe,CAAEwX,EAAerH,IAGzC8V,oCAAoCjR,GAC9B,GAAAvqB,KAAKk/B,kBACP,OAAO,EAET,MAAM1pB,EAAQxV,KAAKg8B,4BAA4BzR,GAC/C,OAA2C,MAApCvqB,KAAKi8B,qBAAqBzmB,GAGnC2pB,sBAAsB5U,GAChB6U,IAAAA,EAAmB5pB,EACnB,GAAAxV,KAAKk/B,kBACP1pB,EAAQxV,KAAKgE,SAAS8jB,qBAAqB9nB,KAAKk/B,uBAC3C,CACL,MAAM5G,EAAgBt4B,KAAKu4B,mBAC3B/iB,EAAQxV,KAAKg8B,4BAA4BzR,GACzC6U,GAAqBrpB,GAAeuiB,EAAe9iB,GASrD,GANkB,aAAd+U,EACFvqB,KAAK28B,iBAAiBnnB,EAAM,IAE5BxV,KAAK28B,iBAAiBnnB,EAAM,IAG1B4pB,EAAmB,CACrB,MAAM3zB,EAAazL,KAAKi8B,qBAAqBzmB,GAC7C,GAAI/J,EACF,OAAOzL,KAAKk8B,eAAezwB,IAKjC4zB,2BAA2B9U,GAAW,IAAA/gB,OAAEA,0DAAW,GACjD,MAAMgM,EAAQxV,KAAKg8B,4BAA4BzR,EAAW,CAAE/gB,OAAAA,IAC5D,OAAOxJ,KAAK28B,iBAAiBnnB,GAG/B8pB,4BACE,GAAIt/B,KAAK68B,oBAAoB,QAC3B,OAAO78B,KAAKu/B,qCAAqC,QAIrDA,qCAAqC5rB,GACnC,MAAMyP,EAAWpjB,KAAKy8B,cAChBjnB,EAAQxV,KAAKgE,SAASwsB,oCAAoC7c,EAAeyP,GAC/E,OAAOpjB,KAAK28B,iBAAiBnnB,GAG/BgqB,+BAA+B,IAAAC,EAC7B,OAAsCj2B,QAA1Bk2B,EAAAA,KAAAA,gCAA0Bl2B,IAAAA,OAAAA,EAAAA,EAAAA,QAAS,EAGjDm2B,4BACS,OAAA3/B,KAAKk/B,mBAAqBl/B,KAAK4/B,uBAAuB5/B,KAAKy8B,eAGpEmD,uBAAuBxc,GACfgO,MAAAA,EAAWpxB,KAAKgE,SAAS2oB,qBAAqBvJ,GACpD,GAAIgO,EACF,OAAOpxB,KAAK6/B,uBAAuBzO,GAIvC0O,qBAAqB1c,GAAU,IAAA2c,EACtB,OAAP,QAAOA,EAAA//B,KAAKgE,SAASmkB,mBAAmB/E,UAAxC,IAAA2c,OAAA,EAAOA,EAA4Cre,eAGrDyb,sBACE,MAAM7E,EAAgBt4B,KAAKu4B,mBAC3B,GAAID,EACF,OAAOt4B,KAAKgE,SAASsqB,mBAAmBgK,GAI5CoH,yBAAyB,IAAAM,EACvB,OAAO,QAAPA,EAAOhgC,KAAKm9B,6BAAL,IAAA6C,OAAA,EAAAA,EAA4Btf,iBAKrCA,iBACE,OAAO1gB,KAAKiL,YAAYkE,MAAM,GAGhCiqB,qBACE,MAAMnuB,EAAcjL,KAAKgE,SAAS0c,kBAC5Buf,MAAEA,EAAFC,QAASA,G3B1nBiB,WAASC,IAAAA,yDAAW,GAAIC,yDAAW,GAC/DH,MAAAA,EAAQ,GACRC,EAAU,GAEVG,EAAiB,IAAIC,IAE3BH,EAAS93B,SAASvE,IAChBu8B,EAAe93B,IAAIzE,MAGrB,MAAMy8B,EAAgB,IAAID,IAenB,OAbPF,EAAS/3B,SAASvE,IAChBy8B,EAAch4B,IAAIzE,GACbu8B,EAAevtB,IAAIhP,IACtBm8B,EAAMl3B,KAAKjF,MAIfq8B,EAAS93B,SAASvE,IACXy8B,EAAcztB,IAAIhP,IACrBo8B,EAAQn3B,KAAKjF,MAIV,CAAEm8B,MAAAA,EAAOC,QAAAA,G2BimBaM,CAAqBxgC,KAAKiL,YAAaA,GAQlE,OAPKA,KAAAA,YAAcA,EAEnB4E,MAAMC,KAAKowB,GAAS73B,SAASoD,IAAe,IAAAg1B,EAAAC,EAC1Cj1B,EAAW8R,SAAW,KACtB,QAAAkjB,EAAAzgC,KAAKud,gBAAL,IAAAkjB,GAAA,QAAAC,EAAAD,EAAeE,sCAAf,IAAAD,GAAAA,EAAAv7B,KAAAs7B,EAAgDh1B,MAG3C,MACCsF,MAAAA,EAAS,GAOf,OALAlB,MAAMC,KAAKmwB,GAAO53B,SAASoD,IAAe,IAAAm1B,EAAAC,EACxCp1B,EAAW8R,SAAWvd,KACtB+Q,EAAOhI,KAAK,QAAZ63B,EAAY5gC,KAAKud,gBAAL,IAAAqjB,GAAZ,QAAYC,EAAAD,EAAeE,mCAA3B,IAAAD,OAAY,EAAAA,EAA6Cp1B,KAAAA,EAAAA,OAGpDsF,GARF,GAcTuM,8BAA8B7R,GAAY,IAAAs1B,EAAAC,EAEjC,OADPhhC,KAAKi5B,WACE,QAAA8H,EAAA/gC,KAAKud,gBAAL,IAAAwjB,GAAA,QAAAC,EAAAD,EAAeE,oCAAf,IAAAD,OAAA,EAAAA,EAAA77B,KAAA47B,EAA8Ct1B,GAGvDkU,8BAA8BlU,GAAY,IAAAy1B,EAAAC,EAEjC,OADPnhC,KAAKi5B,WACE,QAAAiI,EAAAlhC,KAAKud,gBAAL,IAAA2jB,GAAA,QAAAC,EAAAD,EAAeE,gDAAf,IAAAD,OAAA,EAAAA,EAAAh8B,KAAA+7B,EAA0Dz1B,GAKnEywB,eAAezwB,EAAY9D,GAAS,IAAA05B,EAAAC,EAClC,GAAI71B,IAAezL,KAAKk/B,kBAGjB,OAFPl/B,KAAKq8B,wBACA6C,KAAAA,kBAAoBzzB,EACzB,QAAO41B,EAAArhC,KAAKud,gBAAZ,IAAA8jB,GAAO,QAAPC,EAAOD,EAAeE,4CAAf,IAAAD,OAAP,EAAOA,EAAAn8B,KAAAk8B,EAAsDrhC,KAAKk/B,kBAAmBv3B,GAGvF00B,wBAAwB,IAAAmF,EAAAC,EACjBzhC,KAAKk/B,oBACV,QAAAsC,EAAAxhC,KAAKud,gBAAL,IAAAikB,GAAA,QAAAC,EAAAD,EAAeE,2CAAf,IAAAD,GAAAA,EAAAt8B,KAAAq8B,EAAqDxhC,KAAKk/B,mBACrDA,KAAAA,kBAAoB,MAG3BlX,8BAA8BnpB,EAAY4M,GACxC,OAAOzL,KAAKk5B,YAAYl5B,KAAKgE,SAASgkB,8BAA8BnpB,EAAY4M,IAGlFmjB,6BAA6BhS,EAAWnR,GACtC,OAAOzL,KAAKk5B,YAAYl5B,KAAKgE,SAAS4qB,6BAA6BhS,EAAWnR,IAKhFivB,oBAAoBH,GACd,IAAAv2B,SAAEA,GAAau2B,EACb,MAAA9R,MAAEA,GAAU8R,EAClB,IAAInX,EAAWmX,EAAUxN,cACrBvX,EAAQ,CAAE4N,EAAW,EAAGA,GAExBqF,EAAMkC,0BAA4B4P,EAAUvN,cAAc9d,QACxDuZ,EAAM2B,kBAAgD,OAA5BmQ,EAAU9B,cACtCrV,GAAY,EAEZpf,EAAWA,EAASwiB,kBAAkBhR,GAExCA,EAAQ,CAAE4N,EAAUA,IACiB,OAA5BmX,EAAU9B,cACiB,OAAhC8B,EAAU/B,kBACZhjB,EAAQ,CAAE4N,EAAW,EAAGA,EAAW,IAEnC5N,EAAQ,CAAE4N,EAAUA,EAAW,GAC/BA,GAAY,GAELmX,EAAUvN,cAAc9d,OAAS,GAAM,IAChDkU,GAAY,GAGd,MAAMue,EAAc,IAAI/V,GAAS,CAAEnD,EAAMS,sBAAsBP,oBAE/D,OADKuQ,KAAAA,YAAYl1B,EAAS0oB,sBAAsBiV,EAAansB,IACtDxV,KAAK45B,aAAaxW,GAG3B0a,mBACE,MAAMvM,EAAgBvxB,KAAK66B,mBAC3B,GAAItJ,EAAe,CACX,MAAArf,MAAEA,GAAUqf,EAAc,GAC5Brf,GAAAA,EAAQ,EACH,OAAAlS,KAAKgE,SAASgoB,gBAAgB9Z,EAAQ,IAKnD4pB,WACE,MAAMvK,EAAgBvxB,KAAK66B,mBAC3B,GAAItJ,EACK,OAAAvxB,KAAKgE,SAASgoB,gBAAgBuF,EAAc,GAAGrf,OAI1D+pB,qBAAqBzmB,GACbxR,MAAAA,EAAWhE,KAAKgE,SAASsqB,mBAAmB9Y,GAClD,GAAIxR,EAASwK,aAAkBozB,GAAAA,OxCzvBS,UwC0vBtC,OAAO59B,EAAS0c,iBAAiB,GAIrC4c,0CAA0C,IAAAuE,EAAAC,EACjC,OAAA,QAAAD,EAAA7hC,KAAKud,gBAAL,IAAAskB,GAAA,QAAAC,EAAAD,EAAeE,6CAAf,IAAAD,OAAA,EAAAA,EAAA38B,KAAA08B,EAAuD7hC,KAAKg5B,mBAGrEgB,iCAAiCxkB,GAAO,IAAAwsB,EAAAC,EAC/B,OAAA,QAAAD,EAAAhiC,KAAKud,gBAAL,IAAAykB,GAAA,QAAAC,EAAAD,EAAeE,6CAAf,IAAAD,OAAA,EAAAA,EAAA98B,KAAA68B,EAAuDxsB,GAGhEypB,iCAAiC7b,EAAUlU,GACzC,MAAMizB,EAAcniC,KAAKgE,SAAS8N,gBAC5BswB,EAAgBD,EAAY9yB,qBAAqB+T,GACvD,OAAO+e,EAAYlzB,mBAAmBmzB,EAAgBlzB,IAI1D6pB,GAAY1rB,YAAY,uCACxB0rB,GAAY1rB,YAAY,wDACxB0rB,GAAY1rB,YAAY,yDACxB0rB,GAAY1rB,YAAY,gDACxB0rB,GAAY1rB,YAAY,6CACxB0rB,GAAY1rB,YAAY,iCClxBT,MAAMg1B,WAAoBj1B,EACvC0B,YAAYupB,GACVtpB,SAASxF,WACJ8uB,KAAAA,YAAcA,EACdiK,KAAAA,YAAc,GACdC,KAAAA,YAAc,GAGrBC,gBAAgBC,GAAa,IAAAC,QAAEA,EAAFC,eAAWA,0DAAmB,GACnDC,MAAAA,EAAgB5iC,KAAKsiC,YAAYnzB,OAAO,GAAG,GAEjD,IAAKwzB,IAAmBE,GAA8BD,EAAeH,EAAaC,GAAU,CAC1F,MAAMI,EAAY9iC,KAAK+iC,YAAY,CAAEN,YAAAA,EAAaC,QAAAA,IAClD1iC,KAAKsiC,YAAYv5B,KAAK+5B,GACjBP,KAAAA,YAAc,IAIvBrgC,OACE,MAAM4gC,EAAY9iC,KAAKsiC,YAAYU,MACnC,GAAIF,EAAW,CACb,MAAMG,EAAYjjC,KAAK+iC,YAAYD,GAE5B,OADP9iC,KAAKuiC,YAAYx5B,KAAKk6B,GACfjjC,KAAKq4B,YAAYkB,aAAauJ,EAAUI,WAInDnhC,OACE,MAAMkhC,EAAYjjC,KAAKuiC,YAAYS,MACnC,GAAIC,EAAW,CACb,MAAMH,EAAY9iC,KAAK+iC,YAAYE,GAE5B,OADPjjC,KAAKsiC,YAAYv5B,KAAK+5B,GACf9iC,KAAKq4B,YAAYkB,aAAa0J,EAAUC,WAInDC,UACE,OAAOnjC,KAAKsiC,YAAY94B,OAAS,EAGnC45B,UACE,OAAOpjC,KAAKuiC,YAAY/4B,OAAS,EAKnCu5B,cAAY,IAAAN,YAAEA,EAAFC,QAAeA,0DAAY,GAC9B,MAAA,CACLD,YAAaA,MAAAA,OAAAA,EAAAA,EAAaj0B,WAC1Bk0B,QAASpxB,KAAKO,UAAU6wB,GACxBQ,SAAUljC,KAAKq4B,YAAYiB,gBAKjC,MAAMuJ,GAAgC,CAACQ,EAAOZ,EAAaC,KACzDW,MAAAA,OAAA,EAAAA,EAAOZ,gBAAgBA,MAAAA,OAAAA,EAAAA,EAAaj0B,cAAc60B,MAAAA,OAAAA,EAAAA,EAAOX,WAAYpxB,KAAKO,UAAU6wB,GChDtF,MAAMY,GACJx0B,YAAYo0B,GACVljC,KAAKgE,SAAWk/B,EAASl/B,SACzBhE,KAAKs4B,cAAgB4K,EAAS5K,cAGhCnd,UAES,OADPnb,KAAKu9B,uBACEv9B,KAAKujC,sBAGdjK,cACS,MAAA,CAAEt1B,SAAUhE,KAAKgE,SAAUs0B,cAAet4B,KAAKs4B,eAKxDiF,uBACE,OAAOv9B,KAAKwjC,qBAAqBhzB,KAAKgF,GAAUxV,KAAKgE,SAAWhE,KAAKgE,SAAS8iB,uBAtBrD,oBAsBkGtR,KAG7H+tB,sBACMr0B,IAAAA,EAAS,EAEblP,KAAKyjC,qBAAqBp7B,SAASmN,IAC7BA,EAAM,GAAKA,EAAM,GAAK,IACxBA,EAAM,IAAMtG,EACZsG,EAAM,IAAMtG,EAE2C,OAAnDlP,KAAKgE,SAASgsB,uBAAuBxa,EAAM,MACxCxR,KAAAA,SAAWhE,KAAKgE,SAAS6qB,wBAAwBrZ,EAAM,IACxDA,EAAM,GAAKxV,KAAKs4B,cAAc,IAChCt4B,KAAK0jC,2BAEPluB,EAAM,KACNtG,KAGe,IAAbsG,EAAM,IACmD,OAAvDxV,KAAKgE,SAASgsB,uBAAuBxa,EAAM,GAAK,KAC7CxR,KAAAA,SAAWhE,KAAKgE,SAAS6qB,wBAAwBrZ,EAAM,IACxDA,EAAM,GAAKxV,KAAKs4B,cAAc,IAChCt4B,KAAK0jC,2BAEPluB,EAAM,KACNtG,KAIJlP,KAAKgE,SAAWhE,KAAKgE,SAAS8qB,2BArDT,qBAqD0D,EAAMtZ,OAK3FguB,qBACE,OAAOxjC,KAAKgE,SAASgtB,4BA3DI,qBA8D3ByS,qBACE,OAAOzjC,KAAKgE,SAASktB,2BA9DG,eA8D6C,CAAEC,UA7D9C,YAgE3BuS,2BACE1jC,KAAKs4B,cAAc,IAAM,EACzBt4B,KAAKs4B,cAAc,IAAM,GCrE7B,MAAMqL,GAAkB,CDLe,SAAST,GAC9C,MAAM3rB,EAAS,IAAI+rB,GAAOJ,GAEnB3rB,OADPA,EAAO4D,UACA5D,EAAO+hB,gBCID,MAAMsK,GACnB90B,YAAYupB,EAAahhB,EAAkBvX,GACpCi7B,KAAAA,YAAc/6B,KAAK+6B,YAAYhkB,KAAK/W,MACpCq4B,KAAAA,YAAcA,EACdhhB,KAAAA,iBAAmBA,EACnBvX,KAAAA,QAAUA,EACfE,KAAK6jC,YAAc,IAAIxB,GAAYriC,KAAKq4B,aACxCr4B,KAAK8jC,QAAUH,GAAgBx0B,MAAM,GAGvC40B,aAAa//B,GACJ,OAAAhE,KAAKu5B,aAAa,CAAEv1B,SAAAA,EAAUs0B,cAAe,CAAE,EAAG,KAG3D0L,WAASjgC,IAAAA,yDAAO,GACd,MAAMC,EAAW2vB,GAAW30B,MAAM+E,EAAM,CAAE6vB,iBAAkB5zB,KAAKF,UAAWi0B,cAC5E,OAAO/zB,KAAK+jC,aAAa//B,GAG3BigC,SAAsC/jB,GAA7B,IAAAlc,SAAEA,EAAFs0B,cAAYA,GAAiBpY,EAE7B,OADPlc,EAAW4nB,GAASva,SAASrN,GACtBhE,KAAKu5B,aAAa,CAAEv1B,SAAAA,EAAUs0B,cAAAA,IAGvCiB,aAAa2J,GAEX,OADAljC,KAAK6jC,YAAc,IAAIxB,GAAYriC,KAAKq4B,aACjCr4B,KAAKq4B,YAAYkB,aAAa2J,GAGvCnP,cACS,OAAA/zB,KAAKq4B,YAAYr0B,SAG1Bm5B,sBACE,OAAOn9B,KAAKq4B,YAAY8E,sBAG1B7D,cACE,OAAOt5B,KAAKq4B,YAAYiB,cAG1B5pB,SACS,OAAA1P,KAAKs5B,cAKdmC,kBAAkBlR,GAChB,OAAOvqB,KAAKq4B,YAAYoD,kBAAkBlR,GAG5C4Q,iBAAiB1vB,GACf,OAAOzL,KAAKq4B,YAAY8C,iBAAiB1vB,GAG3CyvB,kBAAkBjwB,GAChB,OAAOjL,KAAKq4B,YAAY6C,kBAAkBjwB,GAG5CivB,eAAel2B,GACb,OAAOhE,KAAKq4B,YAAY6B,eAAel2B,GAGzC82B,WAAWxvB,GACT,OAAOtL,KAAKq4B,YAAYyC,WAAWxvB,GAGrCyvB,YAAYnuB,GACV,OAAO5M,KAAKq4B,YAAY0C,YAAYnuB,GAGtC+tB,WAAW52B,GACT,OAAO/D,KAAKq4B,YAAYsC,WAAW52B,GAGrCo2B,aAAa5pB,GACX,OAAOvQ,KAAKq4B,YAAY8B,aAAa5pB,GAGvCupB,WAAWt6B,GACT,OAAOQ,KAAKq4B,YAAYyB,WAAWt6B,GAGrC86B,kBACE,OAAOt6B,KAAKq4B,YAAYiC,kBAK1B/B,mBACE,OAAOv4B,KAAKq4B,YAAYE,mBAG1BkE,cACE,OAAOz8B,KAAKq4B,YAAYoE,cAG1ByH,wBAAwB9gB,GACtB,MAAMmO,EAAgBvxB,KAAK+zB,cAAcjG,uBAAuB,CAAE1K,EAAUA,EAAW,IACvF,OAAOpjB,KAAKqX,iBAAiB8sB,6BAA6B5S,GAG5D8N,2BAA2B9U,GACzB,OAAOvqB,KAAKq4B,YAAYgH,2BAA2B9U,GAGrD4U,sBAAsB5U,GACpB,OAAOvqB,KAAKq4B,YAAY8G,sBAAsB5U,GAGhDoS,iBAAiBrE,GACf,OAAOt4B,KAAKq4B,YAAYsE,iBAAiBrE,GAK3C8L,kBAAkBv6B,GAAM/F,IAAAA,6DACf,OAAA9D,KAAKq4B,YAAY0E,oBAAoBlzB,EAAM/F,GAGpDugC,kBAAkBx6B,GAChB,OAAO7J,KAAKq4B,YAAYwE,oBAAoBhzB,GAG9Cy6B,qBAAqBz6B,GACnB,OAAO7J,KAAKq4B,YAAY2E,uBAAuBnzB,GAGjD06B,oBAAoB16B,GAClB,OAAO7J,KAAKq4B,YAAYiE,uBAAuBzyB,GAKjD6zB,0BACE,OAAO19B,KAAKq4B,YAAYqF,0BAG1BE,0BACE,OAAO59B,KAAKq4B,YAAYuF,0BAG1BhU,uBACM,GAAA5pB,KAAK09B,0BACP,OAAO19B,KAAKq4B,YAAYzO,uBAI5BC,uBACM,GAAA7pB,KAAK49B,0BACP,OAAO59B,KAAKq4B,YAAYxO,uBAM5BuZ,UACE,OAAOpjC,KAAK6jC,YAAYT,UAG1BD,UACE,OAAOnjC,KAAK6jC,YAAYV,UAG1BX,gBAAgBC,GAAa,IAAAC,QAAEA,EAAFC,eAAWA,0DAAmB,GACzD,OAAO3iC,KAAK6jC,YAAYrB,gBAAgBC,EAAa,CAAEC,QAAAA,EAASC,eAAAA,IAGlE5gC,OACM,GAAA/B,KAAKojC,UACP,OAAOpjC,KAAK6jC,YAAY9hC,OAI5BG,OACM,GAAAlC,KAAKmjC,UACP,OAAOnjC,KAAK6jC,YAAY3hC,QCrKf,MAAMsiC,GACnB11B,YAAYhP,GACLA,KAAAA,QAAUA,EAGjB2kC,mCAAmCC,EAAWx1B,GAAQ,IAAA5F,OAAEA,GAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAED,QAAQ,GACvE9C,EAAa,EACbm+B,GAAa,EACjB,MAAMvT,EAAW,CAAElf,MAAO,EAAGhD,OAAQ,GAC/B01B,EAAoB5kC,KAAK6kC,mCAAmCH,GAE9DE,IACFF,EAAYE,EAAkB7kC,WAC9BmP,EAAS5I,EAAqBs+B,IAGhC,MAAMnS,EAAS5rB,EAAS7G,KAAKF,QAAS,CAAEkH,YAAa89B,KAErD,KAAOrS,EAAOE,YAAY,CACxB,MAAM7sB,EAAO2sB,EAAOG,YAEhB9sB,GAAAA,IAAS4+B,GAAa56B,EAAe46B,GAAY,CAC9C96B,EAAmB9D,KACtBsrB,EAASliB,QAAUA,GAErB,MAEA,GAAIpJ,EAAK/F,aAAe2kC,GAClBl+B,GAAAA,MAAiB0I,EACnB,WAEG,IAAK7I,EAAoBq+B,EAAW5+B,IACrCU,EAAa,EACf,MAIA6C,EAAiBvD,EAAM,CAAEwD,OAAAA,KACvBq7B,GACFvT,EAASlf,QAEXkf,EAASliB,OAAS,EAClBy1B,GAAa,GAEbvT,EAASliB,QAAU61B,GAAWj/B,GAKpC,OAAOsrB,EAGT4T,mCAAmC5T,GAC7BsT,IAAAA,EAAWx1B,EACXkiB,GAAmB,IAAnBA,EAASlf,OAAmC,IAApBkf,EAASliB,OAAc,CAI1Cw1B,IAHPA,EAAY1kC,KAAKF,QACjBoP,EAAS,EAEFw1B,EAAUx7B,YAEf,GADAw7B,EAAYA,EAAUx7B,WAClBF,EAAqB07B,GAAY,CACnCx1B,EAAS,EACT,MAIJ,MAAO,CAAEw1B,EAAWx1B,GAGlB,IAAEpJ,EAAMm/B,GAAejlC,KAAKklC,8BAA8B9T,GAC1D,GAACtrB,EAAD,CAEJ,GAAIgE,EAAehE,GACQ,IAArBi/B,GAAWj/B,IACb4+B,EAAY5+B,EAAK/F,WAAWA,WAC5BmP,EAAS5I,EAAqBR,EAAK/F,YAC/B6J,EAAmB9D,EAAM,CAAE+D,KAAM,WACnCqF,MAGFw1B,EAAY5+B,EACZoJ,EAASkiB,EAASliB,OAAS+1B,OAExB,CAGL,GAFAP,EAAY5+B,EAAK/F,YAEZsJ,EAAiBvD,EAAKW,mBACpBuC,EAAqB07B,GACxB,KAAO5+B,IAAS4+B,EAAUnN,YACxBzxB,EAAO4+B,EACPA,EAAYA,EAAU3kC,YAClBiJ,EAAqB07B,MAO/Bx1B,EAAS5I,EAAqBR,GACN,IAApBsrB,EAASliB,QACXA,IAIJ,MAAO,CAAEw1B,EAAWx1B,IAGtBg2B,8BAA8B9T,GACxBtrB,IAAAA,EAAMm/B,EACN/1B,EAAS,EAER,IAAA,MAAM0jB,KAAe5yB,KAAKmlC,4BAA4B/T,EAASlf,OAAQ,CAC1E,MAAM1I,EAASu7B,GAAWnS,GAE1B,GAAIxB,EAASliB,QAAUA,EAAS1F,EAC9B,GAAIM,EAAe8oB,IAGbxB,GAFJtrB,EAAO8sB,EACPqS,EAAa/1B,EACTkiB,EAASliB,SAAW+1B,GAAcr7B,EAAmB9D,GACvD,WAEQA,IACVA,EAAO8sB,EACPqS,EAAa/1B,GAKjB,GADAA,GAAU1F,EACN0F,EAASkiB,EAASliB,OACpB,MAIJ,MAAO,CAAEpJ,EAAMm/B,GAKjBJ,mCAAmC/+B,GACjC,KAAOA,GAAQA,IAAS9F,KAAKF,SAAS,CACpC,GAAIkK,EAAwBlE,GAC1B,OAAOA,EAETA,EAAOA,EAAK/F,YAIhBolC,4BAA4BjzB,GACpBkzB,MAAAA,EAAQ,GACR3S,EAAS5rB,EAAS7G,KAAKF,QAAS,CAAEkH,YAAaq+B,KACjDC,IAAAA,GAAiB,EAErB,KAAO7S,EAAOE,YAAY,CACxB,MAAM7sB,EAAO2sB,EAAOG,YAElB,IAAInC,EADN,GAAIxnB,EAAwBnD,IAQtB2qB,GANc,MAAdA,EACFA,IAEAA,EAAa,EAGXA,IAAeve,EACjBozB,GAAiB,OACZ,GAAIA,EACT,WAEOA,GACTF,EAAMr8B,KAAKjD,GAIf,OAAOs/B,GAIX,MAAML,GAAa,SAASj/B,GAC1B,GAAIA,EAAKD,WAAaG,KAAKkE,UAAW,CACpC,GAAIN,EAAmB9D,GACrB,OAAO,EAGAyK,OADQzK,EAAK0C,YACNgB,OAEX,MAAsB,OAAlBzK,EAAQ+G,IAAkBkE,EAAwBlE,GACpD,EAEA,GAILu/B,GAAyB,SAASv/B,GAClCy/B,OAAAA,GAAqBz/B,KAAUqB,WAAWgxB,cACrC2M,GAAyBh/B,GAEzBqB,WAAW+wB,eAIhBqN,GAAuB,SAASz/B,GACpC,OAAImE,EAAoBnE,GACfqB,WAAW+wB,cAEX/wB,WAAWgxB,eAIhB2M,GAA2B,SAASh/B,GACxC,OAAIkE,EAAwBlE,EAAK/F,YACxBoH,WAAW+wB,cAEX/wB,WAAWgxB,eC/NP,MAAMqN,GACnBC,wBAAkCvlB,GAAV,IAClBvI,GADkB+tB,EAAEA,EAAFC,EAAKA,GAAKzlB,EAE5Blc,GAAAA,SAAS4hC,uBAAwB,CAC7B,MAAAC,WAAEA,EAAF32B,OAAcA,GAAWlL,SAAS4hC,uBAAuBF,EAAGC,GAGlE,OAFAhuB,EAAW3T,SAAS8hC,cACpBnuB,EAASouB,SAASF,EAAY32B,GACvByI,EACF,GAAI3T,SAASgiC,oBAClB,OAAOhiC,SAASgiC,oBAAoBN,EAAGC,GAClC,GAAI3hC,SAAS8I,KAAKm5B,gBAAiB,CAClCC,MAAAA,EAAmBtuB,KACrB,IAGF,MAAM6W,EAAYzqB,SAAS8I,KAAKm5B,kBAChCxX,EAAU0X,YAAYT,EAAGC,GACzBlX,EAAU2X,SACV,MAAOrzB,IAGT,OAFA4E,EAAWC,KACXU,GAAY4tB,GACLvuB,GAIX0uB,0BAA0B1uB,GAClB7G,MAAAA,EAAQjB,MAAMC,KAAK6H,EAAS2uB,kBAIlC,MAAO,CAHOx1B,EAAM,GACRA,EAAMA,EAAMtH,OAAS,KCdtB,MAAM+8B,WAAyBn5B,EAC5C0B,YAAYhP,GACViP,SAASxF,WACJi9B,KAAAA,aAAexmC,KAAKwmC,aAAazvB,KAAK/W,MACtC0X,KAAAA,mBAAqB1X,KAAK0X,mBAAmBX,KAAK/W,MAClDF,KAAAA,QAAUA,EACfE,KAAKymC,eAAiB,IAAIjC,GAAexkC,KAAKF,SAC9CE,KAAK0mC,YAAc,IAAIlB,GAClBmB,KAAAA,UAAY,EACjBviC,EAAY,YAAa,CAAEE,UAAWtE,KAAKF,QAAS0E,aAAcxE,KAAKwmC,eAEzE3L,mBAAiBlzB,IAAAA,yDAAU,GACzB,OAAuB,IAAnBA,EAAQ2B,OACHtJ,KAAKg/B,gCAAgCpnB,MACnCjQ,EAAQw2B,WACVn+B,KAAK4mC,qBACH5mC,KAAK6mC,oBACP7mC,KAAK6mC,oBAEL7mC,KAAK4mC,qBAIhBjI,iBAAiBpN,GACX,GAAAvxB,KAAK6mC,oBAAqB,OAC9BtV,EAAgBhc,GAAegc,GAE/B,MAAM5Z,EAAW3X,KAAK8mC,gCAAgCvV,GAClD5Z,IACFW,GAAYX,GACPovB,KAAAA,2BAA2BxV,IAIpCyV,+BAA+BC,GAC7BA,EAAa1xB,GAAe0xB,GACtBja,MAAAA,EAAgBhtB,KAAKknC,mBAAmBD,EAAW,IACnDvX,EAAc1vB,KAAKknC,mBAAmBD,EAAW,IACvDjnC,KAAK2+B,iBAAiB,CAAE3R,EAAe0C,IAGzCyU,6BAA6B5S,GAC3B,MAAM5Z,EAAW3X,KAAK8mC,gCAAgCvV,GACtD,GAAI5Z,EACF,OAAO3X,KAAKqmC,0BAA0B1uB,GAAU,GAIpDkoB,uBAAuBzO,GACrB,MAAMtrB,EAAO+J,MAAMC,KAAK9P,KAAKklC,8BAA8B9T,IAAW,GAC/DxnB,OAAAA,EAAmB9D,GAG5BqhC,OAC2B,GAArBnnC,KAAK2mC,cACP3mC,KAAK+mC,6BACL/mC,KAAK6mC,oBAAsB7mC,KAAK66B,oBAIpCuM,SACE,GAAyB,KAAnBpnC,KAAK2mC,UAAiB,CACpB,MAAAE,oBAAEA,GAAwB7mC,KAE5B6mC,GADCA,KAAAA,oBAAsB,KACA,MAAvBA,EACF,OAAO7mC,KAAK2+B,iBAAiBkI,IAKnCQ,iBAAiB,IAAAlvB,EACf,OAAO,QAAPA,EAAOJ,YAAA,IAAAI,OAAA,EAAAA,EAAmBI,kBAG5BqjB,uBAAuB,IAAA0L,EACrB,OAAoC,KAAlB,UAAX1vB,YAAe2vB,IAAAA,OAAAA,EAAAA,EAAAA,WAGxBC,sBACS,OAACxnC,KAAK47B,uBAGfoD,gCAAgCrnB,EAAUhQ,GACpCgQ,GAAY,MAAZA,IAAqB3X,KAAKynC,sBAAsB9vB,GAAW,OAE/D,MAAM/B,EAAQ5V,KAAKykC,mCAAmC9sB,EAASlB,eAAgBkB,EAASjB,YAAa/O,GACjG,IAACiO,EAAO,OAENC,MAAAA,EAAM8B,EAAS4vB,eACjB99B,EACAzJ,KAAKykC,mCAAmC9sB,EAAShB,aAAcgB,EAASf,UAAWjP,GAEvF,OAAO4N,GAAe,CAAEK,EAAOC,IAGjC2wB,eACS,OAAAxmC,KAAK0nC,mBAGdA,mBACE,IAAIC,EACCC,KAAAA,QAAS,EAERC,MAAAA,EAAS,KAQb,GAPKD,KAAAA,QAAS,EACdE,aAAaC,GAEbl4B,MAAMC,KAAK63B,GAAgBt/B,SAASvD,IAClCA,EAAQE,aAGNqB,EAAoBrC,SAAUhE,KAAKF,SAC9B,OAAAE,KAAK0X,sBAIVqwB,EAAgB3yB,WAAWyyB,EAAQ,KAEzCF,EAAiB,CAAE,YAAa,WAAYn3B,KAAKnM,GAC/CD,EAAYC,EAAW,CAAEC,UAAWN,SAAUQ,aAAcqjC,MAIhEnwB,qBACM,IAAC1X,KAAK4nC,SAAWzhC,EAAqBnG,KAAKF,SACtC,OAAAE,KAAK+mC,6BAIhBA,2BAA2BxV,GAEwC,IAAApU,EAAA6qB,EADjE,IAAqB,MAAjBzW,EAAwBA,EAAgBA,EAAgBvxB,KAAKg/B,gCAAgCpnB,SAC1F7B,GAAewb,EAAevxB,KAAK4mC,sBAEtC,OADKA,KAAAA,qBAAuBrV,EACrB,QAAPpU,EAAOnd,KAAKud,gBAAL,IAAAJ,GAAA,QAAA6qB,EAAA7qB,EAAe8qB,8BAAf,IAAAD,OAAA,EAAAA,EAAA7iC,KAAAgY,EAAwCnd,KAAK4mC,qBAAqBz3B,MAAM,IAKrF23B,gCAAgCvV,GACxB2W,MAAAA,EAAaloC,KAAKglC,mCAAmCzT,EAAc,IACnE4W,EAAWxyB,GAAiB4b,GAC9B2W,EACAloC,KAAKglC,mCAAmCzT,EAAc,KAAO2W,EAEjE,GAAkB,MAAdA,GAAkC,MAAZC,EAAkB,CAC1C,MAAMxwB,EAAW3T,SAAS8hC,cAG1B,OAFAnuB,EAASouB,YAAYl2B,MAAMC,KAAKo4B,GAAc,KAC9CvwB,EAASywB,UAAUv4B,MAAMC,KAAKq4B,GAAY,KACnCxwB,GAIXuvB,mBAAmBmB,GACjB,MAAM1wB,EAAW3X,KAAKylC,wBAAwB4C,GAChC,IAAAC,EAAd,GAAI3wB,EACK,OAAA,QAAA2wB,EAAAtoC,KAAKg/B,gCAAgCrnB,UAArC,IAAA2wB,OAAA,EAAAA,EAAiD,GAI5Db,sBAAsB9vB,GAChBA,OAAAA,EAAS4vB,UACJlhC,EAAoBrG,KAAKF,QAAS6X,EAASlB,gBAGhDpQ,EAAoBrG,KAAKF,QAAS6X,EAASlB,iBAC3CpQ,EAAoBrG,KAAKF,QAAS6X,EAAShB,eAMnD4vB,GAAiBl5B,YAAY,qDAC7Bk5B,GAAiBl5B,YAAY,qDAC7Bk5B,GAAiBl5B,YAAY,gDAC7Bk5B,GAAiBl5B,YAAY,uCAC7Bk5B,GAAiBl5B,YAAY,yCC/K7B,IAAek7B,GAAA,CACbrsB,WAAAA,GACAqE,kBAAAA,GACAyB,gBAAAA,GACAsG,MAAAA,GACAyQ,YAAAA,GACAyP,SAAAA,GACA5E,OAAAA,GACAjQ,WAAAA,GACA9B,cAAAA,GACAuG,mBAAAA,GACAoM,eAAAA,GACApkB,kBAAAA,GACAW,MAAAA,GACAykB,YAAAA,GACAe,iBAAAA,GACA1jB,eAAAA,GACAJ,YAAAA,GACAmD,KAAAA,GACAyc,YAAAA,ICnCF,MAAMoG,GAAO,CACXC,uBACA19B,OAAAA,GAGF4I,OAAO+0B,OAAOF,GAAMF,IAEpBj+B,OAAOm+B,KAAOA,GCXC,MAAMG,GACAt6B,sBAACu6B,IACdvpC,EADcupC,yDAAmB,IAAIhe,MAAEA,EAAFie,OAASA,0DAAW,GAEzDA,GACW,MAATje,IACFA,EAAQ,GAGNpR,MAAAA,EAAU,GAuBhB,OArBA5J,MAAMC,KAAK+4B,GAAkBxgC,SAASuF,IAAW,IAAAm7B,EAC/C,GAAIzpC,EAAO,CAAA,IAAA0pC,EAAAC,EAAAC,EACL,GAAA,QAAAF,EAAAp7B,EAAOgU,oBAAP,IAAAonB,GAAAA,EAAA7jC,KAAAyI,EAAsBid,IAAU,QAAAoe,GAAAC,EAAA5pC,EAAMA,EAAMkK,OAAS,IAAGqY,wBAAxB,IAAAonB,GAAAA,EAAA9jC,KAAA+jC,EAA2Ct7B,EAAQid,GAErF,YADAvrB,EAAMyJ,KAAK6E,GAGX6L,EAAQ1Q,KAAK,IAAI/I,KAAKV,EAAO,CAAEurB,MAAAA,EAAOie,OAAAA,KACtCxpC,EAAQ,KAIZ,QAAIsO,EAAAA,EAAOgU,oBAAX,IAAAmnB,GAAIA,OAAAn7B,EAAsBid,GACxBvrB,EAAQ,CAAEsO,GAEV6L,EAAQ1Q,KAAK6E,MAIbtO,GACFma,EAAQ1Q,KAAK,IAAI/I,KAAKV,EAAO,CAAEurB,MAAAA,EAAOie,OAAAA,KAEjCrvB,EAGT3K,cAAY2K,IAAAA,yDAAU,IAAIoR,MAAEA,EAAFie,OAASA,GAAUv/B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtCgQ,KAAAA,QAAUA,EACXqvB,IACGje,KAAAA,MAAQA,EACRpR,KAAAA,QAAUzZ,KAAK8O,YAAYq6B,aAAanpC,KAAKyZ,QAAS,CAAEqvB,OAAAA,EAAQje,MAAO7qB,KAAK6qB,MAAQ,KAI7FuB,aACE,OAAOpsB,KAAKyZ,QAGd2vB,WACE,OAAOppC,KAAK6qB,MAGdlb,cACE,MAAMkE,EAAO,CAAE,eAIf,OAHAhE,MAAMC,KAAK9P,KAAKosB,cAAc/jB,SAASuF,IACrCiG,EAAK9K,KAAK6E,EAAO+B,kBAEZkE,EAAK5C,KAAK,MCvDN,MAAMo4B,GACnBv6B,YAAYw6B,GACLzxB,KAAAA,MAAMyxB,GAGb/gC,IAAIzI,GACF,MAAM+D,EAAM0lC,GAAOzpC,GACnBE,KAAKspC,SAASzlC,GAAO/D,EAGvBkC,OAAOlC,GACL,MAAM+D,EAAM0lC,GAAOzpC,GACbgE,EAAQ9D,KAAKspC,SAASzlC,GAC5B,GAAIC,EAEF,cADO9D,KAAKspC,SAASzlC,GACdC,EAIX+T,QAAMyxB,IAAAA,yDAAW,GAKf,OAJKA,KAAAA,SAAW,GAChBz5B,MAAMC,KAAKw5B,GAAUjhC,SAASvI,IACvByI,KAAAA,IAAIzI,MAEJwpC,GAIX,MAAMC,GAAUzpC,GAAYA,EAAQoI,QAAQshC,aCzB7B,MAAMC,WAAmBr8B,EACtC0B,YAAYlB,GAAQjG,IAAAA,yDAAU,GAC5BoH,SAASxF,WACJqE,KAAAA,OAASA,EACTjG,KAAAA,QAAUA,EACV+hC,KAAAA,WAAa,GACbC,KAAAA,SAAW3pC,KAGlB4pC,WAEE,OADK5pC,KAAKolC,QAASplC,KAAKolC,MAAQplC,KAAK6pC,eAC9B7pC,KAAKolC,MAAM50B,KAAK1K,GAASA,EAAKwuB,WAAU,KAGjDwV,aAAa,IAAAC,EAGX,OAFK3E,KAAAA,MAAQ,KACRsE,KAAAA,WAAa,GACX,QAAPK,EAAO/pC,KAAKgqC,kBAAL,IAAAD,OAAA,EAAAA,EAAiBD,aAG1BG,wBAAwBr8B,GAAQ,IAAAs8B,EACvB,OAAA,QAAAA,EAAAlqC,KAAKmqC,kBAAkBv8B,UAAvB,IAAAs8B,OAAA,EAAAA,EAAgCJ,aAGzCM,4BAA4BC,EAAWz8B,EAAQjG,GAC7C,IAAI2iC,EAAOtqC,KAAKuqC,uBAAuB38B,GAOvC,OANI08B,EACGE,KAAAA,gBAAgBF,IAErBA,EAAOtqC,KAAKyqC,mBAAmBlhC,WAC/BvJ,KAAK0qC,mBAAmBJ,EAAM18B,IAEzB08B,EAGTG,gBAAgBJ,EAAWz8B,GAAQjG,IAAAA,yDAAU,GACvCiG,aAAkBg7B,KACpBjhC,EAAQ0iC,UAAYA,EACpBA,EAAYM,IAGRL,MAAAA,EAAO,IAAID,EAAUz8B,EAAQjG,GACnC,OAAO3H,KAAKwqC,gBAAgBF,GAG9BE,gBAAgBF,GAId,OAHAA,EAAKN,WAAahqC,KAClBsqC,EAAKX,SAAW3pC,KAAK2pC,SACrB3pC,KAAK0pC,WAAW3gC,KAAKuhC,GACdA,EAGTM,mBACMC,IAAAA,EAAQ,GAOZ,OALA7qC,KAAK0pC,WAAWrhC,SAASyiC,IACvBD,EAAM9hC,KAAK+hC,GACXD,EAAQA,EAAMnnC,OAAOonC,EAAUF,uBAG1BC,EAGTE,cACE,OAAO/qC,KAAKgrC,qBAAqBhrC,KAAK4N,QAGxCo9B,qBAAqBp9B,GACblB,MAAAA,EAAKkB,MAAAA,OAAAA,EAAAA,EAAQlB,GACnB,GAAIA,EACK,OAAA1M,KAAK2pC,SAAS7pC,QAAQyU,cAAtB,kBAAA7Q,OAAsDgJ,EAA7D,OAIJy9B,kBAAkBv8B,GAChB,IAAK,MAAM08B,KAAQtqC,KAAK4qC,mBACtB,GAAIN,EAAK18B,SAAWA,EAClB,OAAO08B,EAKbW,eACE,OAAIjrC,KAAK2pC,WAAa3pC,KAMbA,KAAK2pC,SAASsB,eALjBjrC,KAAKkrC,wBACFlrC,KAAKmrC,YAAkBA,KAAAA,UAAY,IACjCnrC,KAAKmrC,gBAFV,EASRD,uBACS,OAA0B,IAA1BlrC,KAAKorC,iBAGdC,oBACOD,KAAAA,kBAAmB,EAG1BE,qBACOF,KAAAA,kBAAmB,EAG1Bb,uBAAuB38B,GAAQ,IAAA29B,EACtB,OAAP,QAAOA,EAAAvrC,KAAKirC,sBAAZ,IAAAM,OAAA,EAAOA,EAAsB39B,EAAO+B,eAGtC+6B,mBAAmBJ,EAAM18B,GACvB,MAAM49B,EAAQxrC,KAAKirC,eACfO,IACFA,EAAM59B,EAAO+B,eAAiB26B,GAIlCmB,4BACE,MAAMD,EAAQxrC,KAAKirC,eACnB,GAAIO,EAAO,CACHX,MACAa,EADQ1rC,KAAK4qC,mBAAmBlnC,OAAO1D,MACpBwQ,KAAK85B,GAASA,EAAK18B,OAAO+B,gBACnD,IAAK,MAAM9L,KAAO2nC,EACXE,EAAWtiC,SAASvF,WAChB2nC,EAAM3nC,KAOhB,MAAM8mC,WAAwBlB,GACnC36B,cACEC,SAASxF,WACJoiC,KAAAA,YAAc3rC,KAAK4N,OACxB5N,KAAKqqC,UAAYrqC,KAAK2H,QAAQ0iC,iBACvBrqC,KAAK2H,QAAQ0iC,UAGtBuB,gBAME,OALK5rC,KAAK0pC,WAAWlgC,QACnBqG,MAAMC,KAAK9P,KAAK2rC,YAAYvf,cAAc/jB,SAASuF,IAC5Cw8B,KAAAA,4BAA4BpqC,KAAKqqC,UAAWz8B,EAAQ5N,KAAK2H,YAG3D3H,KAAK0pC,WAGdG,cACE,MAAM/pC,EAAUE,KAAK6rC,yBAQd,OANP7rC,KAAK4rC,gBAAgBvjC,SAASiiC,IAC5Bz6B,MAAMC,KAAKw6B,EAAKV,YAAYvhC,SAASvC,IACnChG,EAAQ6I,YAAY7C,SAIjB,CAAEhG,GAGX+rC,yBAA4D,IAArChhB,EAAQthB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAvJ,KAAK2rC,YAAYvC,WACvC,OAAAppC,KAAK4rC,gBAAgB,GAAGC,uBAAuBhhB,IC9J1D,MAAQrf,IAAAA,IAAQR,EAED,MAAM8gC,WAAuBrC,GAC1C36B,cACEC,SAASxF,WACJkC,KAAAA,WAAazL,KAAK4N,OACvB5N,KAAKyL,WAAWwT,uBAAyBjf,KACzCA,KAAK+rC,gBAAkB/rC,KAAK2H,QAAQ6Z,MAGtCwqB,qBACE,MAAO,GAGTnC,cACE,IAAIoC,EACJ,MAAMC,EAASD,EAAexkC,EAAY,CACxC1I,QAAS,SACToJ,UAAWnI,KAAKmsC,eAChBlkC,KAAMjI,KAAK2U,UACX9M,UAAU,IAGN6C,EAAO1K,KAAK4d,UAiClB,OAhCIlT,IACFuhC,EAAexkC,EAAY,CAAE1I,QAAS,IAAK8I,UAAU,EAAOhJ,WAAY,CAAE6L,KAAAA,EAAM0hC,UAAW,KAC3FF,EAAOvjC,YAAYsjC,IAGjBjsC,KAAKyL,WAAWuS,aAClBiuB,EAAa1Z,UAAYvyB,KAAKyL,WAAW6S,aAEzCte,KAAKgsC,qBAAqB3jC,SAASvC,IACjCmmC,EAAatjC,YAAY7C,MAI7BmmC,EAAatjC,YAAY3I,KAAKqsC,wBAE1BrsC,KAAKyL,WAAWiS,cACb4uB,KAAAA,gBAAkB7kC,EAAY,CACjC1I,QAAS,WACTF,WAAY,CACV0tC,MAAO/gC,GAAIO,mBACXjI,MAAO9D,KAAKyL,WAAWmT,oBACvBxP,IAAK,KAEPnH,KAAM,CACJukC,aAAa,EACbhD,aAAc,CAAE,kBAAmBxpC,KAAKyL,WAAWiB,IAAKuE,KAAK,QAIjEi7B,EAAOvjC,YAAY3I,KAAKssC,kBAGnB,CAAEG,GAAmB,QAASP,EAAQO,GAAmB,UAGlEJ,uBACQK,MAAAA,EAAajlC,EAAY,CAAE1I,QAAS,aAAcoJ,UAAWqD,GAAIE,oBACjEN,EAAUpL,KAAK+rC,gBAAgB3pB,aACrC,GAAIhX,EACFshC,EAAWpkC,UAAUC,IAAOiD,GAAAA,OAAAA,GAAIE,kBAAhC,aACAghC,EAAWlkC,YAAc4C,MACpB,CACDvB,IAAAA,EAAMwB,EACV,MAAMshC,EAAgB3sC,KAAK4sC,mBAQ3B,GAPID,EAAc9iC,OAChBA,EAAO7J,KAAKyL,WAAWwS,eAErB0uB,EAActhC,OAChBA,EAAOrL,KAAKyL,WAAW0S,wBAGrBtU,EAAM,CACFgjC,MAAAA,EAAcplC,EAAY,CAAE1I,QAAS,OAAQoJ,UAAWqD,GAAIM,eAAgBtD,YAAaqB,IAC/F6iC,EAAW/jC,YAAYkkC,GAGzB,GAAIxhC,EAAM,CACJxB,GACF6iC,EAAW/jC,YAAY3E,SAAS8oC,eAAe,MAE3CC,MAAAA,EAActlC,EAAY,CAAE1I,QAAS,OAAQoJ,UAAWqD,GAAIQ,eAAgBxD,YAAa6C,IAC/FqhC,EAAW/jC,YAAYokC,IAI3B,OAAOL,EAGTP,eACE,MAAMa,EAAQ,CAAExhC,GAAIC,WAAeD,GAAAA,OAAAA,GAAIC,wBAAezL,KAAKyL,WAAWsS,YAChEkvB,EAAYjtC,KAAKyL,WAAW2S,eAIlC,OAHI6uB,GACFD,EAAMjkC,KAAN,GAAArF,OAAc8H,GAAIC,wBAAewhC,IAE5BD,EAAM/7B,KAAK,KAGpB0D,UACE,MAAM1M,EAAO,CACXilC,eAAgB57B,KAAKO,UAAU7R,KAAKyL,YACpC0hC,gBAAiBntC,KAAKyL,WAAWqS,iBACjCsvB,OAAQptC,KAAKyL,WAAWiB,KAGpB7N,WAAEA,GAAemB,KAAK+rC,gBAS5B,OARKltC,EAAWqb,YACdjS,EAAKolC,eAAiB/7B,KAAKO,UAAUhT,IAGnCmB,KAAKyL,WAAWiS,cAClBzV,EAAKqlC,eAAgB,GAGhBrlC,EAGT2V,UACM,IAAC2vB,GAAoBvtC,KAAKyL,WAAW6S,aAAc,KACrD,OAAOte,KAAKyL,WAAWmS,UAI3BgvB,mBAAmB,IAAAxR,EACjB,MAAM7uB,EAAOvM,KAAKyL,WAAWsS,UACvB4uB,EAAgBt3B,GAAW,QAAD+lB,EAACpwB,EAAOC,YAAYsB,UAAnB,IAAA6uB,OAAA,EAAAA,EAA0BhwB,SAI3D,MAHa,SAATmB,IACFogC,EAAc9iC,MAAO,GAEhB8iC,EAGTa,sBAAsB,IAAAC,EACb,OAAP,QAAOA,EAAAztC,KAAK+qC,qBAAZ,IAAA0C,OAAA,EAAOA,EAAoBl5B,cAAc,YAK3C2K,oCACE,MAAMpb,EAAQ9D,KAAKyL,WAAWmT,oBACxB0tB,EAAkBtsC,KAAKwtC,sBACzBlB,IACFA,EAAgBxoC,MAAQA,IAK9B,MAAM2oC,GAAsB5iC,GAC1BpC,EAAY,CACV1I,QAAS,OACTyJ,YpD9J4B,SoD+J5BP,KAAM,CACJ8B,iBAAkBF,EAClByjC,eAAe,KAIfC,GAAsB,SAASxpC,EAAMhF,GACzC,MAAM2uC,EAAMjmC,EAAY,OAExB,OADAimC,EAAInb,UAAYxuB,GAAQ,GACjB2pC,EAAIn5B,cAAcxV,ICnKZ,MAAM4uC,WAAkC7B,GACrDh9B,cACEC,SAASxF,WACTvJ,KAAKyL,WAAW4R,gBAAkBrd,KAGpCgsC,qBAYS,OAXFvwB,KAAAA,MAAQhU,EAAY,CACvB1I,QAAS,MACTF,WAAY,CACVod,IAAK,IAEPhU,KAAM,CACJukC,aAAa,KAIZoB,KAAAA,QAAQ5tC,KAAKyb,OACX,CAAEzb,KAAKyb,OAGhB4wB,uBACE,MAAMK,EAAa39B,MAAMs9B,wBAAwB9iC,WAIjD,OAHKmjC,EAAWlkC,aACdkkC,EAAW3kC,aAAa,wBAAyBiD,EAAOpI,KAAKnB,oBAExDirC,EAGTkB,QAAQnyB,GACM,IAAAgyB,EAAPhyB,IAASA,UAAQgyB,EAAAztC,KAAK+qC,kCAAL0C,EAAoBl5B,cAAc,QACxD,GAAIkH,EACF,OAAOzb,KAAK6tC,yBAAyBpyB,GAIzCoyB,yBAAyBpyB,GACvB,MAAMrZ,EAAMpC,KAAKyL,WAAWkS,SACtByB,EAAapf,KAAKyL,WAAW0T,gBAG/BC,GAFJ3D,EAAMQ,IAAMmD,GAAchd,EAEtBgd,IAAehd,EACjBqZ,EAAMuN,gBAAgB,uCACjB,CACL,MAAM8kB,EAAuBx8B,KAAKO,UAAU,CAAEoK,IAAK7Z,IACnDqZ,EAAM1T,aAAa,kCAAmC+lC,GAGxD,MAAMlyB,EAAQ5b,KAAKyL,WAAW8S,WACxBzC,EAAS9b,KAAKyL,WAAW+S,YAElB,MAAT5C,IACFH,EAAMG,MAAQA,GAEF,MAAVE,IACFL,EAAMK,OAASA,GAGXiyB,MAAAA,EAAW,CAAE,eAAgB/tC,KAAKyL,WAAWiB,GAAI+O,EAAMQ,IAAKR,EAAMG,MAAOH,EAAMK,QAAS7K,KAAK,KACnGwK,EAAMvT,QAAQshC,aAAeuE,EAK/BzwB,gCAES,OADFswB,KAAAA,QAAQ5tC,KAAKyb,OACXzb,KAAK4tC,WC3DD,MAAMI,WAAkBvE,GACrC36B,cACEC,SAASxF,WACJiY,KAAAA,MAAQxhB,KAAK4N,OAClB5N,KAAKnB,WAAamB,KAAKwhB,MAAM1E,gBAC7B9c,KAAKiuC,WAAajuC,KAAK2H,QAAQsmC,WAC/BjuC,KAAK0iC,QAAU1iC,KAAK2H,QAAQ+6B,QAExB1iC,KAAKwhB,MAAM/V,WACbzL,KAAKyL,WAAazL,KAAKwhB,MAAM/V,WAE7BzL,KAAKuQ,OAASvQ,KAAKwhB,MAAMhT,WAI7Bq7B,cACMzE,IAAAA,EAAQplC,KAAKyL,WAAazL,KAAKkuC,wBAA0BluC,KAAKmuC,oBAClE,MAAMruC,EAAUE,KAAK4H,gBACrB,GAAI9H,EAAS,CACX,MAAMmsC,EpDiDoB,SAASnsC,GACvC,KAAA,QAAAsuC,EAAOtuC,SAAP,IAAAsuC,GAAOA,EAAS7Y,mBAAmB,CAAA,IAAA6Y,EACjCtuC,EAAUA,EAAQy1B,kBAEpB,OAAOz1B,EoDrDkBuuC,CAAiBvuC,GACtC+P,MAAMC,KAAKs1B,GAAO/8B,SAASvC,IACzBmmC,EAAatjC,YAAY7C,MAE3Bs/B,EAAQ,CAAEtlC,GAEZ,OAAOslC,EAGT8I,wBACQp/B,MAAAA,EAAc9O,KAAKyL,WAAW+R,gBAAkBmwB,GAA4B7B,GAG3ExB,OADMtqC,KAAKyqC,gBAAgB37B,EAAa9O,KAAKwhB,MAAM/V,WAAY,CAAE+V,MAAOxhB,KAAKwhB,QACxEooB,WAGduE,oBAAoB,IAAAG,EAClB,GAAI,QAAJA,EAAItuC,KAAKiuC,kBAAL,IAAAK,GAAAA,EAAiB7uC,UACZ,MAAA,CAAEuE,SAAS8oC,eAAe9sC,KAAKuQ,SACjC,CACC60B,MAAAA,EAAQ,GACRvU,EAAW7wB,KAAKuQ,OAAOnI,MAAM,MACnC,IAAK,IAAI8J,EAAQ,EAAGA,EAAQ2e,EAASrnB,OAAQ0I,IAAS,CACpD,MAAMq8B,EAAY1d,EAAS3e,GACvBA,GAAAA,EAAQ,EAAG,CACb,MAAMpS,EAAU2H,EAAY,MAC5B29B,EAAMr8B,KAAKjJ,GAGTyuC,GAAAA,EAAU/kC,OAAQ,CACd1D,MAAAA,EAAO9B,SAAS8oC,eAAe9sC,KAAKwuC,eAAeD,IACzDnJ,EAAMr8B,KAAKjD,IAGf,OAAOs/B,GAIXx9B,gBACE,IAAI9H,EAAS+D,EAAKC,EACZ2qC,MAAAA,EAAS,GAEf,IAAK5qC,KAAO7D,KAAKnB,WAAY,CAC3BiF,EAAQ9D,KAAKnB,WAAWgF,GACxB,MAAMmH,EAAS8I,GAAcjQ,GAC7B,GAAImH,EAAQ,CACNA,GAAAA,EAAOjM,QAAS,CAClB,IAAIktC,EACJ,MAAMyC,EAAiBjnC,EAAYuD,EAAOjM,SAEtCktC,GACFA,EAAatjC,YAAY+lC,GACzBzC,EAAeyC,GAEf5uC,EAAUmsC,EAAeyC,EAQzB1jC,GAJAA,EAAOgsB,gBACTyX,EAAOzjC,EAAOgsB,eAAiBlzB,GAG7BkH,EAAOhD,MACT,IAAKnE,KAAOmH,EAAOhD,MACjBlE,EAAQkH,EAAOhD,MAAMnE,GACrB4qC,EAAO5qC,GAAOC,GAMtB,GAAI8P,OAAOC,KAAK46B,GAAQjlC,OAEjB3F,IAAAA,KADA/D,IAAWA,EAAU2H,EAAY,SAC1BgnC,EACV3qC,EAAQ2qC,EAAO5qC,GACf/D,EAAQkI,MAAMnE,GAAOC,EAGzB,OAAOhE,EAGT+rC,yBACE,IAAK,MAAMhoC,KAAO7D,KAAKnB,WAAY,CACjC,MAAMiF,EAAQ9D,KAAKnB,WAAWgF,GACxBmH,EAAS8I,GAAcjQ,GAC7B,GAAImH,GACEA,EAAOL,aAAc,CACjB9L,MAAAA,EAAa,GAEnB,OADAA,EAAWgF,GAAOC,EACX2D,EAAYuD,EAAOL,aAAc9L,KAMhD2vC,eAAej+B,GAcb,OAbIvQ,KAAK0iC,QAAQiM,SACfp+B,EAASA,EAAO9M,QAAQ,MtD/HI,MsDkI9B8M,EAASA,EACN9M,QAAQ,8BtDnImB,IsDkIrB,QAENA,QAAQ,mBtDpImB,IsDkIrB,MAGNA,QAAQ,SAAcmV,IAAAA,OtDrIK,OsDuI1B5Y,KAAK0iC,QAAQkM,SAAW5uC,KAAK0iC,QAAQmM,qBACvCt+B,EAASA,EAAO9M,QAAQ,MtDxII,MsD2IvB8M,GCrII,MAAMu+B,WAAiBrF,GACpC36B,cACEC,SAASxF,WACJ/J,KAAAA,KAAOQ,KAAK4N,OACjB5N,KAAKiuC,WAAajuC,KAAK2H,QAAQsmC,WAGjCpE,cACQzE,MAAAA,EAAQ,GACRtf,EAAS8iB,GAAYO,aAAanpC,KAAKomB,aACvC2oB,EAAYjpB,EAAOtc,OAAS,EAElC,IAAK,IAAI0I,EAAQ,EAAGA,EAAQ4T,EAAOtc,OAAQ0I,IAAS,CAClD,MAAMsP,EAAQsE,EAAO5T,GACfwwB,EAAU,GACF,IAAVxwB,IACFwwB,EAAQkM,SAAU,GAEhB18B,IAAU68B,IACZrM,EAAQiM,QAAS,GAEfK,GAAmBC,KACrBvM,EAAQmM,mBAAoB,GAGxBvE,MAAAA,EAAOtqC,KAAKoqC,4BAA4B4D,GAAWxsB,EAAO,CAAEysB,WAAYjuC,KAAKiuC,WAAYvL,QAAAA,IAC/F0C,EAAMr8B,QAAQ8G,MAAMC,KAAKw6B,EAAKV,YAAc,KAExCqF,IAAAA,EAAgBztB,EAEtB,OAAO4jB,EAGThf,YACSvW,OAAAA,MAAMC,KAAK9P,KAAKR,KAAK4mB,aAAa7O,QAAQiK,IAAWA,EAAM3E,aAAa,iBAInF,MAAMmyB,GAAsBxtB,GAAU,MAAM3hB,KAAK2hB,MAAAA,OAAAA,EAAAA,EAAOhT,aCxChDhD,IAAAA,IAAQR,EAED,MAAMkkC,WAAkBzF,GACrC36B,cACEC,SAASxF,WACJkf,KAAAA,MAAQzoB,KAAK4N,OAClB5N,KAAKnB,WAAamB,KAAKyoB,MAAM3L,gBAG/B+sB,cACE,MACMzE,EAAQ,CADEphC,SAASmrC,cAAc,UAEvC,GAAInvC,KAAKyoB,MAAMvO,UACbkrB,EAAMr8B,KAAKtB,EAAY,WAClB,CAAA,IAAAwiB,EACL,MAAMgkB,EAAa,QAAHhkB,EAAGvW,GAAe1T,KAAKyoB,MAAMU,2BAA1B,IAAAc,OAAA,EAAAA,EAA+CzqB,KAC5D4vC,EAAWpvC,KAAKoqC,4BAA4B0E,GAAU9uC,KAAKyoB,MAAMjpB,KAAM,CAAEyuC,WAAAA,IAC/E7I,EAAMr8B,QAAQ8G,MAAMC,KAAKs/B,EAASxF,YAAc,KAC5C5pC,KAAKqvC,gCACPjK,EAAMr8B,KAAKtB,EAAY,OAI3B,GAAIzH,KAAKnB,WAAW2K,OAClB,OAAO47B,EACF,CACL,IAAIvmC,EACE,MAAAE,QAAEA,GAAYiM,EAAOlC,gBAAgBhK,QACvCkB,KAAKyoB,MAAMJ,UACbxpB,EAAa,CAAE4T,IAAK,QAGhB3S,MAAAA,EAAU2H,EAAY,CAAE1I,QAAAA,EAASF,WAAAA,IAEhC,OADPumC,EAAM/8B,SAASvC,GAAShG,EAAQ6I,YAAY7C,KACrC,CAAEhG,IAIb+rC,uBAAuBhhB,GACjBhsB,IAAAA,EAAYsJ,EAChB,MAAMwL,EAAgB3T,KAAKnB,WAAWgsB,IAEhC9rB,QAAEA,GAAY2U,GAAeC,GAK/BA,GAJU,IAAVkX,GAAe7qB,KAAKyoB,MAAMJ,UAC5BxpB,EAAa,CAAE4T,IAAK,QAGA,sBAAlBkB,EAAuC,CACzC,MAAMtI,EAAOrL,KAAKyoB,MAAMkC,wBACxBxiB,EAAeqD,GAAAA,OAAAA,GAAIrL,kBAAqBqL,KAAAA,OAAAA,GAAIrL,kBAAsBkL,MAAAA,OAAAA,GAGpE,OAAO5D,EAAY,CAAE1I,QAAAA,EAASoJ,UAAAA,EAAWtJ,WAAAA,IAK3CwwC,+BACS,MAAA,QAAQxvC,KAAKG,KAAKyoB,MAAMja,aCtDpB,MAAM8gC,WAAqB7F,GACjC8F,cAAOvrC,GACZ,MAAMlE,EAAU2H,EAAY,OACtB6iC,EAAO,IAAItqC,KAAKgE,EAAU,CAAElE,QAAAA,IAGlC,OAFAwqC,EAAKiF,SACLjF,EAAKkF,OACE1vC,EAGTgP,cACEC,SAASxF,WACTvJ,KAAKF,QAAUE,KAAK2H,QAAQ7H,QAC5BE,KAAKyvC,aAAe,IAAIpG,GACnBnQ,KAAAA,YAAYl5B,KAAK4N,QAGxBsrB,YAAYl1B,GACLA,EAASwL,UAAUxP,KAAKgE,YAC3BhE,KAAKgE,SAAWhE,KAAK4N,OAAS5J,GAIlCurC,SAKE,GAJK7F,KAAAA,WAAa,GAElB1pC,KAAK0vC,cAAgBjoC,EAAY,QAE5BzH,KAAKgE,SAASkW,UAAW,CACtBT,MAAAA,EAAUmvB,GAAYO,aAAanpC,KAAKgE,SAASqoB,YAAa,CAAEyc,QAAQ,IAE9Ej5B,MAAMC,KAAK2J,GAASpR,SAASuF,IACrB08B,MAAAA,EAAOtqC,KAAKoqC,4BAA4B8E,GAAWthC,GACzDiC,MAAMC,KAAKw6B,EAAKV,YAAYp5B,KAAK1K,GAAS9F,KAAK0vC,cAAc/mC,YAAY7C,SAK/E6pC,WACE,OAAOC,GAAsB5vC,KAAK0vC,cAAe1vC,KAAKF,SAGxD0vC,OACE,MAAMK,EAAW7vC,KAAK8vC,gCACtB,KAAO9vC,KAAKF,QAAQy3B,WAClBv3B,KAAKF,QAAQ8G,YAAY5G,KAAKF,QAAQy3B,WAGjC,OADPv3B,KAAKF,QAAQ6I,YAAYknC,GAClB7vC,KAAK+vC,UAKdA,UAEE,OADKN,KAAAA,aAAa53B,MAAMm4B,GAAmBhwC,KAAKF,UACzCoV,IAAM,IAAMlV,KAAKyrC,8BAG1BqE,gCACE,MAAMD,EAAW7rC,SAASisC,yBAa1B,OAXApgC,MAAMC,KAAK9P,KAAK0vC,cAAcjnC,YAAYJ,SAASvC,IACjD+pC,EAASlnC,YAAY7C,EAAKwuB,WAAU,OAGtCzkB,MAAMC,KAAKkgC,GAAmBH,IAAWxnC,SAASvI,IAC1CowC,MAAAA,EAAgBlwC,KAAKyvC,aAAaztC,OAAOlC,GAC3CowC,GACFpwC,EAAQC,WAAWowC,aAAaD,EAAepwC,MAI5C+vC,GAIX,MAAMG,GAAsBlwC,GAAYA,EAAQkzB,iBAAiB,yBAE3D4c,GAAwB,CAAC9vC,EAASswC,IACtCC,GAAavwC,EAAQyyB,aAAe8d,GAAaD,EAAa7d,WAE1D8d,GAAgBtsC,GAASA,EAAKN,QAAQ,UAAW,KC/EjD6sC,GAA+B,CACnC,kBACA,eACA,sBACA,oBACA,wBACA,YAGIC,GAAmCC,IAAAA,OADH,kCACtC,KAEMC,GAAsB,IAAIriC,OAAO,qBAAgB,KAEjDsiC,GAAc,CACE,mBAAA,SAASC,GAC3B,IAAI3sC,EACA2sC,GAAAA,aAAwB/kB,GAC1B5nB,EAAW2sC,MACN,CAAA,KAAIA,aAAwBC,aAGjC,MAAM,IAAI3iC,MAAM,yBAFhBjK,EAAW2vB,GAAW30B,MAAM2xC,EAAape,WAAWwB,cAKtD,OAAO/vB,EAASytB,yBAAyB7f,gBAG9B,YAAA,SAAS++B,GACpB,IAAI7wC,EACA6wC,GAAAA,aAAwB/kB,GAC1B9rB,EAAUwvC,GAAaC,OAAOoB,OACzB,CAAA,KAAIA,aAAwBC,aAGjC,MAAM,IAAI3iC,MAAM,yBAFhBnO,EAAU6wC,EAAarc,WAAU,GA6B5Bx0B,OAvBP+P,MAAMC,KAAKhQ,EAAQkzB,iBAvCe,gCAuCkC3qB,SAASwoC,IAC3EnqC,EAAWmqC,MAIbP,GAA6BjoC,SAASuU,IACpC/M,MAAMC,KAAKhQ,EAAQkzB,iBAAqBpW,IAAAA,OAAAA,EAAxC,OAAuDvU,SAASwoC,IAC9DA,EAAG7nB,gBAAgBpM,SAKvB/M,MAAMC,KAAKhQ,EAAQkzB,iBAAiBud,KAA+BloC,SAASwoC,IACtE,IACF,MAAMhyC,EAAayS,KAAKtS,MAAM6xC,EAAGhmC,aA5CH,oCA6C9BgmC,EAAG7nB,gBA7C2B,mCA8C9B,IAAK,MAAMnf,KAAQhL,EAAY,CAC7B,MAAMiF,EAAQjF,EAAWgL,GACzBgnC,EAAG9oC,aAAa8B,EAAM/F,IAExB,MAAOiP,QAGJjT,EAAQyyB,UAAU9uB,QAAQgtC,GAAqB,MC3DpDK,GAAsBC,IAAAA,OADC,oBAC7B,KAEMppC,GAAU,CACd9I,YAAY,EACZmyC,WAAW,EACXC,eAAe,EACfC,uBAAuB,EACvBC,SAAS,GAGI,MAAMC,WAAyBhkC,EAC5C0B,YAAYhP,GACViP,MAAMjP,GACDuxC,KAAAA,UAAYrxC,KAAKqxC,UAAUt6B,KAAK/W,MAChCF,KAAAA,QAAUA,EACVwxC,KAAAA,SAAW,IAAIhnC,OAAO8mC,iBAAiBpxC,KAAKqxC,WACjDrxC,KAAK4V,QAGPA,QAES,OADP5V,KAAK6X,QACE7X,KAAKsxC,SAASC,QAAQvxC,KAAKF,QAAS6H,IAG7CwP,OACE,OAAOnX,KAAKsxC,SAASE,aAGvBH,UAAUI,GAGmB,IAAAt0B,EAAAu0B,EAA3B,GAFA1xC,KAAKyxC,UAAU1oC,QAAQ8G,MAAMC,KAAK9P,KAAK2xC,yBAAyBF,IAAc,KAE1EzxC,KAAKyxC,UAAUjoC,OAEV,OADQooC,QAAfz0B,EAAAnd,KAAKud,gBAAUq0B,IAAAA,GAAmB,QAAnBA,EAAAA,EAAAA,wBAAmB,IAAAF,GAAAA,EAAAvsC,KAAAgY,EAAAnd,KAAK6xC,sBAChC7xC,KAAK6X,QAMhBA,QACO45B,KAAAA,UAAY,GAGnBE,yBAAyBF,GACvB,OAAOA,EAAUl6B,QAAQu6B,GAChB9xC,KAAK+xC,sBAAsBD,KAItCC,sBAAsBD,GACpB,GAAI9xC,KAAKgyC,cAAcF,EAAS7sC,QAC9B,OAAO,EAET,IAAK,MAAMa,KAAQ+J,MAAMC,KAAK9P,KAAKiyC,wBAAwBH,IACzD,GAAI9xC,KAAKkyC,kBAAkBpsC,GAAO,OAAO,EAE3C,OAAO,EAGTosC,kBAAkBpsC,GAChB,OAAOA,IAAS9F,KAAKF,UAAYE,KAAKgyC,cAAclsC,KAAUmE,EAAoBnE,GAGpFksC,cAAclsC,GACLZ,OAAAA,EAA2BY,EAAM,CAAEvB,iBAAkBusC,KAG9DmB,wBAAwBH,GAChB1M,MAAAA,EAAQ,GACN0M,OAAAA,EAASvlC,MACf,IAAK,aAvEkB,sBAwEjBulC,EAASn+B,eACXyxB,EAAMr8B,KAAK+oC,EAAS7sC,QAEtB,MACF,IAAK,gBAEHmgC,EAAMr8B,KAAK+oC,EAAS7sC,OAAOlF,YAC3BqlC,EAAMr8B,KAAK+oC,EAAS7sC,QACpB,MACF,IAAK,YAEHmgC,EAAMr8B,QAAQ8G,MAAMC,KAAKgiC,EAASK,YAAc,KAChD/M,EAAMr8B,QAAQ8G,MAAMC,KAAKgiC,EAASM,cAAgB,KAGtD,OAAOhN,EAGTyM,qBACS,OAAA7xC,KAAKqyC,yBAGdA,yBACQ,MAAAC,UAAEA,EAAFC,UAAaA,GAAcvyC,KAAKwyC,kCAChCC,EAAczyC,KAAK0yC,8BAEzB7iC,MAAMC,KAAK2iC,EAAYH,WAAWjqC,SAASsqC,IACpC9iC,MAAMC,KAAKwiC,GAAWlpC,SAASupC,IAClCL,EAAUvpC,KAAK4pC,MAInBJ,EAAUxpC,QAAQ8G,MAAMC,KAAK2iC,EAAYF,WAAa,KAEhDK,MAAAA,EAAU,GAEV3S,EAAQqS,EAAUrhC,KAAK,IACzBgvB,IACF2S,EAAQC,UAAY5S,GAGtB,MAAM6S,EAAUP,EAAUthC,KAAK,IAK/B,OAJI6hC,IACFF,EAAQG,YAAcD,GAGjBF,EAGTI,mBAAmBzmC,GACjB,OAAOsD,MAAMC,KAAK9P,KAAKyxC,WAAWl6B,QAAQu6B,GAAaA,EAASvlC,OAASA,IAG3EmmC,8BACMG,IAAAA,EAAWI,EACTd,MAAAA,EAAa,GACbC,EAAe,GAErBviC,MAAMC,KAAK9P,KAAKgzC,mBAAmB,cAAc3qC,SAASypC,IACxDK,EAAWppC,QAAQ8G,MAAMC,KAAKgiC,EAASK,YAAc,KACrDC,EAAarpC,QAAQ8G,MAAMC,KAAKgiC,EAASM,cAAgB,QAInC,IAAtBD,EAAW3oC,QAAwC,IAAxB4oC,EAAa5oC,QAAgBP,EAAwBmpC,EAAa,KAG7FS,EAAY,GACZI,EAAc,CAAE,QAEhBJ,EAAYK,GAAgBf,GAC5Bc,EAAcC,GAAgBd,IAMzB,MAAA,CAAEE,UAHSO,EAAUt7B,QAAO,CAAC/X,EAAM0S,IAAU1S,IAASyzC,EAAY/gC,KAAQ1B,IAAImI,IAGjE45B,UAFFU,EAAY17B,QAAO,CAAC/X,EAAM0S,IAAU1S,IAASqzC,EAAU3gC,KAAQ1B,IAAImI,KAKvF65B,kCACMvS,IAAAA,EAAOC,EACX,MAAMiT,EAAqBnzC,KAAKgzC,mBAAmB,iBAE/CG,GAAAA,EAAmB3pC,OAAQ,CAC7B,MAAM4pC,EAAgBD,EAAmB,GACvCE,EAAcF,EAAmBA,EAAmB3pC,OAAS,GAIzD8pC,ErCxJyB,SAASC,EAAWC,GACnDvT,IAAAA,EAAOC,EAUJ,OATPqT,EAAYllC,EAAYoB,IAAI8jC,IAC5BC,EAAYnlC,EAAYoB,IAAI+jC,IAEdhqC,OAAS+pC,EAAU/pC,QAC7B02B,EAASD,GAAUjnB,GAAuBu6B,EAAWC,IAErDvT,EAAOC,GAAYlnB,GAAuBw6B,EAAWD,GAGlD,CAAEtT,MAAAA,EAAOC,QAAAA,GqC6IOuT,CAFD96B,GAAgBy6B,EAAcM,UAC9B/6B,GAAgB06B,EAAYpuC,OAAOgD,OAErDg4B,EAAQqT,EAAWrT,MACnBC,EAAUoT,EAAWpT,QAGhB,MAAA,CACLoS,UAAWrS,EAAQ,CAAEA,GAAU,GAC/BsS,UAAWrS,EAAU,CAAEA,GAAY,KAKzC,MAAMgT,GAAkB,WAAS9N,IAAAA,yDAAQ,GACjC5lC,MAAAA,EAAO,GACR,IAAA,MAAMsG,KAAQ+J,MAAMC,KAAKs1B,GACpBt/B,OAAAA,EAAKD,UACNG,KAAAA,KAAKkE,UACR1K,EAAKuJ,KAAKjD,EAAKmC,MACf,MACGjC,KAAAA,KAAKC,aACc,OAAlBlH,EAAQ+G,GACVtG,EAAKuJ,KAAK,MAEVvJ,EAAKuJ,QAAQ8G,MAAMC,KAAKojC,GAAgBptC,EAAK2C,aAAe,KAKpE,OAAOjJ,GCtMM,MAAMm0C,WAAmBvmC,GCEzB,MAAMwmC,WAAkCt5B,GACrDxL,YAAYxD,GACVyD,SAASxF,WACJ+B,KAAAA,KAAOA,EAGd6P,QAAQ7O,GACN,MAAMunC,EAAS,IAAIC,WAYnB,OAVAD,EAAO73B,QAAU,IAAM1P,GAAS,GAEhCunC,EAAOl4B,OAAS,KACdk4B,EAAO73B,QAAU,KACb,IACF63B,EAAOE,QACP,MAAOhhC,IACT,OAAOzG,GAAS,EAAMtM,KAAKsL,OAGtBuoC,EAAOG,kBAAkBh0C,KAAKsL,OClB1B,MAAM2oC,WAAwB7mC,EAI3C0B,YAAYhP,GACViP,SAASxF,WACJzJ,KAAAA,QAAUA,EACfE,KAAKk0C,iBAAmB,IAAI9C,GAAiBpxC,KAAKF,SAClDE,KAAKk0C,iBAAiB32B,SAAWvd,KACjC,IAAK,MAAMqE,KAAarE,KAAK8O,YAAYqlC,OACvC/vC,EAAYC,EAAW,CAAEC,UAAWtE,KAAKF,QAAS0E,aAAcxE,KAAKo0C,WAAW/vC,KAIpFutC,iBAAiByC,IAEjBC,6BACE,OAAOt0C,KAAKk0C,iBAAiB/8B,OAG/Bo9B,4BACE,OAAOv0C,KAAKk0C,iBAAiBt+B,QAG/B4+B,gBAAgB,IAAAr3B,EAAAs3B,EACd,OAAA,QAAAt3B,EAAOnd,KAAKud,gBAAZ,IAAAJ,WAAAs3B,EAAOt3B,EAAeu3B,kDAAtB,EAAOD,EAAPtvC,KAAAgY,GAGFw3B,iBAAiB,IAAAl1B,EAAAm1B,EAER,eADFr3B,EAAAA,KAAAA,uBAAL,YAAes3B,wCAAf,IAAAD,GAAAA,EAAAzvC,KAAAsa,GACOzf,KAAKw0C,gBAGdpzC,YAAYwL,GACV,MAAMkoC,EAAajlC,MAAMC,KAAKlD,GAAO4D,KAAKlF,GAAS,IAAIsoC,GAA0BtoC,KAC1E0P,OAAAA,QAAQ+5B,IAAID,GAAY70B,MAAMrT,IAC9BooC,KAAAA,aAAY,WAAW,IAAAvb,EAAAwb,EAGnB,eAFF13B,EAAAA,KAAAA,yBAAU23B,iCACf,QAAAD,EAAAj1C,KAAKm1C,iBAAL,IAAAF,GAAAA,EAAgBla,YAAYnuB,GACrB5M,KAAKw0C,sBAOlBJ,WAAW/vC,GACT,OAAQU,IACDA,EAAMqwC,kBACJJ,KAAAA,aAAY,KACV7uC,EAAqBnG,KAAKF,WACxBuE,KAAAA,UAAYA,EACZyK,KAAAA,YAAYqlC,OAAO9vC,GAAWc,KAAKnF,KAAM+E,QAOxDiwC,YAAY1oC,GACN,IAAA,IAAA0uB,UACGzd,EAAAA,KAAAA,yBAAU83B,iCACf/oC,EAASnH,KAAKnF,MACN,QAAA,IAAAw+B,UACHjhB,EAAAA,KAAAA,yBAAU+3B,iCAInBC,eAAe7qC,EAAMlL,GACnB,MAAMoC,EAAOoC,SAAS4D,cAAc,KAG7BhG,OAFPA,EAAK8I,KAAOA,EACZ9I,EAAK4G,YAAchJ,GAAckL,EAC1B9I,EAAK4zC,kBAxEKvB,EAAAA,YAEH,ICWlB,MAAM1oC,QAAEA,GAASyB,SAAAA,IAAahC,EAC9B,IAAIyqC,GAAkB,EAEP,MAAMC,WAA8BzB,GAmVjDnlC,cACEC,SAASxF,WACTvJ,KAAK21C,oBAGPC,kBAAgBhD,IAAAA,yDAAU,GACxB5yC,KAAK61C,aAAaxxC,UAAYrE,KAAKqE,UACnC,IAAK,MAAMR,KAAO+uC,EAAS,CACzB,MAAM9uC,EAAQ8uC,EAAQ/uC,GACtB7D,KAAK61C,aAAahyC,GAAOC,EAE3B,OAAO9D,KAAK61C,aAGdF,oBACOE,KAAAA,aAAe,GAGtBh+B,QAEShB,OADP7W,KAAK21C,oBACE9+B,GAAwBgB,QAKjC+5B,iBAAiByC,GACS,IAAAl3B,EAAAs3B,EAApB,OAAAz0C,KAAK81C,cACP,QAAA34B,EAAOnd,KAAKud,gBAAZ,IAAAJ,WAAAs3B,EAAOt3B,EAAe44B,wDAAtB,EAAOtB,EAAPtvC,KAAAgY,GAEOnd,KAAKg1C,aAAY,WAQf,OAPHh1C,KAAK+xC,sBAAsBsC,KACzBr0C,KAAKg2C,mBAAmB3B,GAC1Br0C,KAAKw0C,gBAELx0C,KAAK20C,kBAGF30C,KAAK6X,WAKlBm+B,mBAA+C91B,GAA5B,IAAA2yB,UAAEA,EAAFE,YAAaA,GAAe7yB,EAC7C,GAAIlgB,KAAK61C,aAAaI,eACpB,OAAO,EAGT,MAAMC,EACS,MAAbrD,EAAoBA,IAAc7yC,KAAK61C,aAAahD,WAAa7yC,KAAK61C,aAAahD,UAC/EsD,EACW,MAAfpD,EAAsB/yC,KAAK61C,aAAaO,WAAap2C,KAAK61C,aAAaO,UAEnEC,EAA4B,CAAE,KAAM,OAAQjtC,SAASypC,KAAeqD,EACpEI,EAA4C,OAAhBvD,IAAyBoD,EAK3D,GAHEE,IAA8BC,GAC9BA,IAA8BD,EAEH,CAC3B,MAAM7gC,EAAQxV,KAAKu4B,mBACnB,GAAI/iB,EAAO,CAAA,IAAAy/B,EACT,MAAM/lC,EAASmnC,EAA4BxD,EAAUpvC,QAAQ,MAAO,IAAI+F,SAAW,GAAIqpC,MAAAA,OAAA,EAAAA,EAAWrpC,SAAU,EAC5G,GAAI,QAAJyrC,EAAIj1C,KAAKm1C,iBAAL,IAAAF,GAAAA,EAAgBnV,qBAAqBtqB,EAAM,GAAKtG,GAClD,OAAO,GAKNgnC,OAAAA,GAAkCC,EAG3CpE,sBAAsBsC,GAAiB,IAAAkC,EAC/BC,MAAAA,EAAc5iC,OAAOC,KAAKwgC,GAAiB7qC,OAAS,EACpDitC,EAA8D,MAAjBC,QAAvBH,EAAAv2C,KAAK22C,wBAAkBD,IAAAA,OAAAA,EAAAA,EAAAA,cAC5CF,OAAAA,IAAgBC,EAKzBG,sBACM,GAAA52C,KAAK81C,cACP,OAAO91C,KAAK22C,iBAEZ32C,KAAK22C,iBAAmB,IAAIE,GAAiB72C,MAIjD81C,cACS,OAAA91C,KAAK22C,mBAAqB32C,KAAK22C,iBAAiBG,UAGzDrb,kBAAkBlR,EAAWxlB,GAAO,IAAAgyC,EAC9B,OAAiD,KAAjCtb,QAAhBsb,EAAA/2C,KAAKm1C,iBAAW1Z,IAAAA,OAAAA,EAAAA,EAAAA,kBAAkBlR,IAM7BvqB,KAAK41C,gBAAgB,CAAEQ,WAAW,IALrCrxC,GACFA,EAAML,iBACC1E,KAAKw0C,sBAFd,EASJwC,iCAAiCtiC,GAAc,IAAAuiC,EAC7C,I9ChckC,SAASviC,GACzC,GAACA,MAAAA,IAAAA,EAAcwiC,QAAS,OAAO,EAEnC,IAAK,MAAMrzC,KAAO2Q,GAAkB,CAClC,MAAM1Q,EAAQ0Q,GAAiB3Q,GAE3B,IAEE,GADJ6Q,EAAawiC,QAAQrzC,EAAKC,IACrB4Q,EAAaC,QAAQ9Q,KAASC,EAAO,OAAO,EACjD,MAAOiP,GACP,OAAO,GAGX,OAAO,E8CmbAokC,CAAuBziC,GAAe,OACrC1Q,MAAAA,YAAWhE,KAAKm1C,8BAAL8B,EAAgB9Z,sBAAsB1L,yBAKvD,OAHA/c,EAAawiC,QAAQ,8BAA+B5lC,KAAKO,UAAU7N,IACnE0Q,EAAawiC,QAAQ,YAAa5H,GAAaC,OAAOvrC,GAAUuuB,WAChE7d,EAAawiC,QAAQ,aAAclzC,EAASwK,WAAW/K,QAAQ,MAAO,MAC/D,EAGT2zC,sBAAsB1iC,GACdsM,MAAAA,EAAQ,GAId,OAHAnR,MAAMC,MAAK4E,MAAAA,SAAAA,EAAcsM,QAAS,IAAI3Y,SAASkE,IAC7CyU,EAAMzU,IAAQ,KAETyU,EAAMq2B,OAASr2B,EAAM,gCAAkCA,EAAM,cAAgBA,EAAM,cAG5Fs2B,gCAAgChrC,GAC9B,MAAMgsB,EAAgBt4B,KAAKu4B,mBAErBvwB,EAAQ,CACZob,SAAU,WACV9M,KAAI,GAAA5S,OAAK4G,OAAOitC,YAFJ,MAGZ3f,IAAG,GAAAl0B,OAAK4G,OAAOktC,YAHH,MAIZC,QAAS,GAGL33C,EAAU2H,EAAY,CAAEO,MAAAA,EAAOjJ,QAAS,MAAO8I,UAAU,IAIxDiQ,OAHP9T,SAAS8I,KAAKnE,YAAY7I,GAC1BA,EAAQ43C,QAED5/B,uBAAsB,KAC3B,MAAM/T,EAAOjE,EAAQyyB,UAGdjmB,OAFP5F,EAAW5G,GACN68B,KAAAA,iBAAiBrE,GACfhsB,EAASvI,OA7dD2xC,EAAAA,GAEH,SAAA,CACdiC,QAAQ5yC,GACD/E,KAAK81C,eACR91C,KAAK21C,oBAEP31C,KAAK61C,aAAa+B,UAAW,EAE7B,MAAMC,EAAU7qC,GAASjI,EAAM+yC,SAC/B,GAAID,EAAS,CAAA,IAAAE,EACPrV,IAAAA,EAAU1iC,KAAK6T,KAEhB,CAAA,OAAQ,MAAO,QAAS,QAASxL,SAAS2vC,IACd,IAAAC,EAAzBlzC,EAAK,GAAArB,OAAIs0C,EAAJ,UACU,SAAbA,IACFA,EAAW,WAEbtV,EAAU,QAAAA,EAAAA,SAAA,IAAAuV,OAAA,EAAAA,EAAUD,OAIE,OAAf,UAAPtV,wBAAUmV,MACZ73C,KAAK41C,gBAAgB,CAAEiC,QAAAA,IACvBhhC,GAAwBgB,QACxB6qB,EAAQmV,GAAS1yC,KAAKnF,KAAM+E,IAIhC,GAAI+P,GAA0B/P,GAAQ,CAC9BmzC,MAAAA,EAAY9nC,OAAOY,aAAajM,EAAM+yC,SAASr3C,cACrD,GAAIy3C,EAAW,CAAA,IAAAze,EACP5lB,MAAAA,EAAO,CAAE,MAAO,SAAUrD,KAAKwnC,IACnC,GAAIjzC,EAAK,GAAArB,OAAIs0C,EAAJ,QACP,OAAOA,KAERzgC,QAAO1T,GAAOA,IACjBgQ,EAAK9K,KAAKmvC,GACN,QAAAze,EAAAz5B,KAAKud,gBAAL,IAAAkc,GAAAA,EAAe0e,yCAAyCtkC,IAC1D9O,EAAML,oBAMd0zC,SAASrzC,GACP,GAAmC,MAA/B/E,KAAK61C,aAAaxxC,UAAmB,OACrCU,GAAAA,EAAMiQ,QAAS,OACfjQ,GAAAA,EAAMkQ,UAAYlQ,EAAMszC,OAAQ,OAEpC,MAAM9nC,EAAS+nC,GAAmBvzC,GACtB,IAAAi2B,EAAAud,EAAZ,OAAIhoC,WACGgN,EAAAA,KAAAA,yBAAUi7B,mCACf,QAAAD,EAAAv4C,KAAKm1C,iBAAL,IAAAoD,GAAAA,EAAgBpe,aAAa5pB,GACtBvQ,KAAK41C,gBAAgB,CAAE/C,UAAWtiC,EAAQ6lC,UAAWp2C,KAAKwnC,8BAHnE,GAOFiR,UAAU1zC,GAEF,MAAAkD,KAAEA,GAASlD,GACX8tC,UAAEA,GAAc7yC,KAAK61C,aACvBhD,GAAAA,GAAaA,IAAc5qC,GAAQ4qC,EAAU6F,gBAAkBzwC,EAAM,CAAA,IAAA0wC,EACvE,MAAMnjC,EAAQxV,KAAKu4B,mBAInB,OAHAv4B,KAAK28B,iBAAiB,CAAEnnB,EAAM,GAAIA,EAAM,GAAKq9B,EAAUrpC,SACvD,QAAAmvC,EAAA34C,KAAKm1C,iBAAL,IAAAwD,GAAAA,EAAgBxe,aAAalyB,GAC7BjI,KAAK41C,gBAAgB,CAAE/C,UAAW5qC,IAC3BjI,KAAK28B,iBAAiBnnB,KAIjCojC,UAAU7zC,GACRA,EAAML,kBAGRm0C,UAAU9zC,GAAO,IAAAy5B,EAAAsa,EAGf,OAFA94C,KAAKg3C,iCAAiCjyC,EAAM2P,cAC5C1U,KAAK+4C,aAAe/4C,KAAKu4B,mBACzB,QAAAiG,EAAOx+B,KAAKud,gBAAZ,IAAAihB,WAAAsa,EAAOta,EAAewa,8CAAtB,EAAOF,EAAP3zC,KAAAq5B,IAGFya,SAASl0C,GACH,GAAA/E,KAAK+4C,cAAgB/4C,KAAKo3C,sBAAsBryC,EAAM2P,cAAe,CACvE3P,EAAML,iBACN,MAAMw0C,EAAgB,CAAExT,EAAG3gC,EAAMo0C,QAASxT,EAAG5gC,EAAMq0C,SACM,IAAA3Y,EAAA4Y,EAArD,IAAC/jC,GAAgB4jC,EAAel5C,KAAKk5C,eAEhC,OADFA,KAAAA,cAAgBA,EACd,QAAAzY,EAAAzgC,KAAKud,gBAAL,IAAAkjB,GAAA,QAAA4Y,EAAA5Y,EAAe6Y,8CAAf,IAAAD,OAAA,EAAAA,EAAAl0C,KAAAs7B,EAAwDzgC,KAAKk5C,iBAK1EK,QAAQx0C,GAAO,IAAA67B,EAAA4Y,UACRj8B,EAAAA,KAAAA,uBAAL,YAAek8B,oCAAf,IAAAD,GAAAA,EAAAr0C,KAAAy7B,GACKmY,KAAAA,aAAe,KACfG,KAAAA,cAAgB,MAGvBQ,KAAK30C,GAAO,IAAA40C,EAAAC,EACV70C,EAAML,iBACN,MAAMkI,EAAK,QAAG7H,EAAAA,EAAM2P,oBAAT,IAAAilC,OAAA,EAAGA,EAAoB/sC,MAC5Bif,EAAe9mB,EAAM2P,aAAaC,QAAQ,+BAE1C0zB,EAAQ,CAAE3C,EAAG3gC,EAAMo0C,QAASxT,EAAG5gC,EAAMq0C,SAG3C,GAFA,QAAAQ,EAAA55C,KAAKm1C,iBAAL,IAAAyE,GAAAA,EAAgB5S,+BAA+BqB,GAE3Cz7B,MAAAA,GAAAA,EAAOpD,OACJpI,KAAAA,YAAYwL,QACZ,GAAI5M,KAAK+4C,aAAc,CAAA,IAAAhY,EAAA8Y,UACvBt8B,EAAAA,KAAAA,yBAAUu8B,8BACf,QAAAD,EAAA75C,KAAKm1C,iBAAL,IAAA0E,GAAAA,EAAgB1d,kBAAkBn8B,KAAK+4C,cAClCA,KAAAA,aAAe,KACpB/4C,KAAKw0C,qBACA,GAAI3oB,EAAc,CAAA,IAAAkuB,EACvB,MAAM/1C,EAAW4nB,GAASza,eAAe0a,GACzC,QAAAkuB,EAAA/5C,KAAKm1C,iBAAL,IAAA4E,GAAAA,EAAgB7f,eAAel2B,GAC/BhE,KAAKw0C,gBAGFuE,KAAAA,aAAe,KACfG,KAAAA,cAAgB,MAGvBc,IAAIj1C,GAAO,IAAAk1C,EACkC/Y,EAA3C,GAAA,QAAA+Y,EAAIj6C,KAAKm1C,iBAAT,IAAA8E,GAAIA,EAAgBzS,wBACdxnC,KAAKg3C,iCAAiCjyC,EAAMm1C,gBAC9Cn1C,EAAML,yBAGH6Y,EAAAA,KAAAA,yBAAU48B,6BACV1e,KAAAA,kBAAkB,YACnB12B,EAAMqwC,kBACD,OAAAp1C,KAAKw0C,iBAKlB16B,KAAK/U,GAAO,IAAAq1C,EACV,QAAAA,EAAIp6C,KAAKm1C,iBAAT,IAAAiF,GAAIA,EAAgB5S,uBACdxnC,KAAKg3C,iCAAiCjyC,EAAMm1C,gBAC9Cn1C,EAAML,kBAKZ21C,MAAMt1C,GACEu1C,MAAAA,EAAYv1C,EAAMm1C,eAAiBn1C,EAAMw1C,kBACzCF,EAAQ,CAAEC,UAAAA,GAEhB,IAAKA,GAAaE,GAAoCz1C,GASpD,YARKuyC,KAAAA,iCAAiCvzC,IAAS,IAAAs9B,EAAAoZ,EAAAjZ,EAM7C,OALA6Y,EAAM9tC,KAAO,YACb8tC,EAAMt2C,KAAOA,EACb,QAAAs9B,EAAArhC,KAAKud,gBAAL,IAAA8jB,GAAAA,EAAeqZ,yBAAyBL,GACxB1f,QAAhB8f,EAAAz6C,KAAKm1C,iBAAWxa,IAAAA,GAAAA,EAAAA,WAAW0f,EAAMt2C,MACjC/D,KAAKw0C,gBACL,QAAAhT,EAAOxhC,KAAKud,gBAAZ,IAAAikB,OAAA,EAAOA,EAAemZ,wBAAwBN,MAKlD,MAAM3vC,EAAO4vC,EAAU3lC,QAAQ,OACzB5Q,EAAOu2C,EAAU3lC,QAAQ,aACzB9K,EAAOywC,EAAU3lC,QAAQ,mBAE/B,GAAIjK,EAAM,CAAA,IAAAm3B,EAAA+Y,EAAA5Y,EACR,IAAIzxB,EACJ8pC,EAAM9tC,KAAO,YAEXgE,EADE1G,EACOiP,GAA0BjP,GAAMqJ,OAEhCxI,EAEX2vC,EAAMt2C,KAAO/D,KAAKu1C,eAAe7qC,EAAM6F,GACvC,QAAAsxB,EAAA7hC,KAAKud,gBAAL,IAAAskB,GAAAA,EAAe6Y,yBAAyBL,GACxCr6C,KAAK41C,gBAAgB,CAAE/C,UAAWtiC,EAAQ6lC,UAAWp2C,KAAKwnC,wBAC1C7M,QAAhBigB,EAAA56C,KAAKm1C,iBAAWxa,IAAAA,GAAAA,EAAAA,WAAW0f,EAAMt2C,MACjC/D,KAAKw0C,gBACL,QAAAxS,EAAAhiC,KAAKud,gBAAL,IAAAykB,GAAAA,EAAe2Y,wBAAwBN,QAClC,GAAI5lC,GAAwB6lC,GAAY,CAAA,IAAAO,EAAAC,EAAAC,EAC7CV,EAAM9tC,KAAO,aACb8tC,EAAM9pC,OAAS+pC,EAAU3lC,QAAQ,cACjC,QAAAkmC,EAAA76C,KAAKud,gBAAL,IAAAs9B,GAAAA,EAAeH,yBAAyBL,GACxCr6C,KAAK41C,gBAAgB,CAAE/C,UAAWwH,EAAM9pC,OAAQ6lC,UAAWp2C,KAAKwnC,wBAChDrN,QAAhB2gB,EAAA96C,KAAKm1C,iBAAWhb,IAAAA,GAAAA,EAAAA,aAAakgB,EAAM9pC,QACnCvQ,KAAKw0C,gBACL,QAAAuG,EAAA/6C,KAAKud,gBAAL,IAAAw9B,GAAAA,EAAeJ,wBAAwBN,QAClC,GAAIt2C,EAAM,CAAA,IAAAi3C,EAAAC,EAAAC,EACfb,EAAM9tC,KAAO,YACb8tC,EAAMt2C,KAAOA,EACb,QAAAi3C,EAAAh7C,KAAKud,gBAAL,IAAAy9B,GAAAA,EAAeN,yBAAyBL,GACxB1f,QAAhBsgB,EAAAj7C,KAAKm1C,iBAAWxa,IAAAA,GAAAA,EAAAA,WAAW0f,EAAMt2C,MACjC/D,KAAKw0C,gBACL,QAAA0G,EAAAl7C,KAAKud,gBAAL,IAAA29B,GAAAA,EAAeP,wBAAwBN,QAClC,GAAIxqC,MAAMC,KAAKwqC,EAAUt5B,OAAO5X,SAAS,SAAU,CAAA,IAAA+xC,EAAAC,EAAAC,EACxD,MAAM/vC,EAAI,QAAA6vC,EAAGb,EAAUgB,aAAb,IAAAH,GAAA,QAAAC,EAAGD,EAAkB,UAArB,IAAAC,WAAAC,EAAGD,EAAsBG,4BAAzB,EAAGF,EAAbl2C,KAAAi2C,GACA,GAAI9vC,EAAM,CAAA,IAAAkwC,EAAAC,EAAAC,EACR,MAAMzO,EAAY0O,GAAiBrwC,IAC9BA,EAAKzB,MAAQojC,IAChB3hC,EAAKzB,6BAAwB4rC,eAAmBxI,IAElDoN,EAAM9tC,KAAO,OACb8tC,EAAM/uC,KAAOA,UACRiS,EAAAA,KAAAA,yBAAU23B,iCACCpa,QAAhB2gB,EAAAz7C,KAAKm1C,iBAAWra,IAAAA,GAAAA,EAAAA,WAAWuf,EAAM/uC,MACjCtL,KAAKw0C,gBACL,QAAAkH,EAAA17C,KAAKud,gBAAL,IAAAm+B,GAAAA,EAAef,wBAAwBN,IAI3Ct1C,EAAML,kBAGRk3C,iBAAiB72C,GACR,OAAA/E,KAAK42C,sBAAsBhhC,MAAM7Q,EAAMkD,OAGhD4zC,kBAAkB92C,GACT,OAAA/E,KAAK42C,sBAAsB9/B,OAAO/R,EAAMkD,OAGjD6zC,eAAe/2C,GACN,OAAA/E,KAAK42C,sBAAsB/gC,IAAI9Q,EAAMkD,OAG9C8zC,YAAYh3C,GACV/E,KAAK61C,aAAa+B,UAAW,GAG/B1rC,MAAMnH,GAEGA,OADP/E,KAAK61C,aAAa+B,UAAW,EACtB7yC,EAAMi3C,qBAvOEtG,EAAAA,GA2OL,OAAA,CACZuG,UAAUl3C,GAAO,IAAAm3C,EAEf,eADK3+B,EAAAA,KAAAA,yBAAUi7B,mCACRx4C,KAAKy7B,kBAAkB,WAAY12B,IAG5Co3C,OAAOp3C,GAAO,IAAAq3C,EAEZ,eADK7+B,EAAAA,KAAAA,yBAAUi7B,mCACRx4C,KAAKy7B,kBAAkB,UAAW12B,IAG3Cs3C,OAAOt3C,GAAO,IAAAu3C,EAAAC,EAGZ,OAFAv8C,KAAK41C,gBAAgB,CAAEK,gBAAgB,YAClC14B,EAAAA,KAAAA,yBAAUi7B,mCACR,QAAP+D,EAAOv8C,KAAKm1C,iBAAL,IAAAoH,OAAA,EAAAA,EAAgBjiB,mBAGzBkiB,IAAIz3C,GAAO,IAAA03C,EACsCC,EAA/C,QAAAD,EAAIz8C,KAAKm1C,iBAAT,IAAAsH,GAAIA,EAAgB7e,oCACbuX,EAAAA,KAAAA,0BAAWtrB,uBAChB7pB,KAAKw0C,gBACLzvC,EAAML,mBAIV4R,KAAKvR,GACmC,IAAA43C,EAAlC,GAAA38C,KAAK2/B,4BAEP,OADA56B,EAAML,iBACN,QAAAi4C,EAAO38C,KAAKm1C,iBAAZ,IAAAwH,OAAA,EAAOA,EAAgBxd,sBAAsB,aAIjD5oB,MAAMxR,GACkC,IAAA63C,EAAlC,GAAA58C,KAAK2/B,4BAEP,OADA56B,EAAML,iBACN,QAAAk4C,EAAO58C,KAAKm1C,iBAAZ,IAAAyH,OAAA,EAAOA,EAAgBzd,sBAAsB,YAIjD0d,QAAS,CACPC,EAAE/3C,GAAO,IAAAg4C,EAEP,eADKx/B,EAAAA,KAAAA,yBAAUi7B,mCACRx4C,KAAKy7B,kBAAkB,UAAW12B,IAG3Ci4C,EAAEj4C,GAAO,IAAAk4C,EAEP,eADK1/B,EAAAA,KAAAA,yBAAUi7B,mCACRx4C,KAAKy7B,kBAAkB,WAAY12B,IAG5Cm4C,EAAEn4C,GAAO,IAAAo4C,EAAAC,EAIA,OAHPr4C,EAAML,yBACD6Y,EAAAA,KAAAA,yBAAUi7B,mCACf,QAAA4E,EAAAp9C,KAAKm1C,iBAAL,IAAAiI,GAAAA,EAAgBjjB,aAAa,KAAM,CAAEJ,gBAAgB,IAC9C/5B,KAAKw0C,kBAIhB6I,MAAO,CACLhB,OAAOt3C,GAAO,IAAAu4C,EAAAC,UACPhgC,EAAAA,KAAAA,yBAAUi7B,mCACf,QAAA+E,EAAAv9C,KAAKm1C,iBAAL,IAAAoI,GAAAA,EAAgBpjB,aAAa,MAC7Bn6B,KAAKw0C,gBACLzvC,EAAML,kBAGR83C,IAAIz3C,GAAO,IAAAy4C,EACsCC,EAA/C,QAAAD,EAAIx9C,KAAKm1C,iBAAT,IAAAqI,GAAIA,EAAgB9f,oCACbyX,EAAAA,KAAAA,0BAAWvrB,uBAChB5pB,KAAKw0C,gBACLzvC,EAAML,mBAIV4R,KAAKvR,GACC,GAAA/E,KAAK2/B,4BAEP,OADA56B,EAAML,iBACC1E,KAAKq/B,2BAA2B,aAI3C9oB,MAAMxR,GACA,GAAA/E,KAAK2/B,4BAEP,OADA56B,EAAML,iBACC1E,KAAKq/B,2BAA2B,aAK7Cqe,IAAK,CACHzB,UAAUl3C,GAAO,IAAA44C,EAEf,OADA39C,KAAK41C,gBAAgB,CAAEK,gBAAgB,IAChC,QAAP0H,EAAO39C,KAAKud,gBAAL,IAAAogC,OAAA,EAAAA,EAAenF,qCAI1BoF,KAAM,CACJ3B,UAAUl3C,GAAO,IAAA84C,EAEf,OADA79C,KAAK41C,gBAAgB,CAAEK,gBAAgB,IAChC,QAAP4H,EAAO79C,KAAKud,gBAAL,IAAAsgC,OAAA,EAAAA,EAAerF,uCAoJ9B9C,GAAsBroC,YAAY,+BAClCqoC,GAAsBroC,YAAY,+BAClCqoC,GAAsBroC,YAAY,yCAClCqoC,GAAsBroC,YAAY,wCAClCqoC,GAAsBroC,YAAY,kCAElC,MAAMsuC,GAAoBrwC,IAAD,IAAAwyC,EAAAC,EAAA,OAAA,QAAAD,EAAUxyC,EAAKiB,YAAf,IAAAuxC,GAAA,QAAAC,EAAUD,EAAW55C,MAAM,mBAA3B,IAAA65C,OAAA,EAAUA,EAA+B,IAE5D/tC,KAAyB,QAAAC,GAAA,IAAIC,mBAAJ,IAAAD,KAAAA,GAAA9K,KAAA,IAAkB,IAE3CmzC,GAAqB,SAASvzC,GAClC,GAAIA,EAAMlB,KAAOmM,IAAwBjL,EAAMlB,IAAIqM,YAAY,KAAOnL,EAAM+yC,QACnE/yC,OAAAA,EAAMlB,IACR,CACL,IAAItE,EAOAA,GANgB,OAAhBwF,EAAMi5C,MACRz+C,EAAOwF,EAAM+yC,QACY,IAAhB/yC,EAAMi5C,OAAkC,IAAnBj5C,EAAMk5C,WACpC1+C,EAAOwF,EAAMk5C,UAGH,MAAR1+C,GAAmC,WAAnByN,GAASzN,GACpB8O,OAAAA,EAAYM,eAAe,CAAEpP,IAAQiP,aAK5CgsC,GAAsC,SAASz1C,GACnD,MAAMs1C,EAAQt1C,EAAMm1C,cACpB,GAAIG,EAAO,CACLA,GAAAA,EAAMr5B,MAAM5X,SAAS,aAAc,CAGrC,IAAK,MAAMmD,KAAQ8tC,EAAMr5B,MAAO,CAC9B,MAAMk9B,EAAsB,4BAA4Br+C,KAAK0M,GACvD4xC,EAAyB,SAASt+C,KAAK0M,IAAS8tC,EAAM1lC,QAAQpI,GAEpE,GADkC2xC,GAAuBC,EAEvD,OAAO,EAGX,OAAO,EACF,CACCC,MAAAA,EAAsB/D,EAAMr5B,MAAM5X,SAAS,wBAC3Ci1C,EAA0BhE,EAAMr5B,MAAM5X,SAAS,uBAC9Cg1C,OAAAA,GAAuBC,KAKpC,MAAMxH,WAAyBzpC,EAC7B0B,YAAYwvC,GACVvvC,SAASxF,WACJ+0C,KAAAA,gBAAkBA,EACvBt+C,KAAKm1C,UAAYn1C,KAAKs+C,gBAAgBnJ,UACtCn1C,KAAKud,SAAWvd,KAAKs+C,gBAAgB/gC,SACrCvd,KAAK61C,aAAe71C,KAAKs+C,gBAAgBzI,aACpC5tC,KAAAA,KAAO,GAGd2N,MAAM3N,GAGA,GAFJjI,KAAKiI,KAAK2N,MAAQ3N,EAEdjI,KAAKu+C,gBAAiB,CAAA,IAAAC,EACuDC,EAA3E,GAAgC,aAAhCz+C,KAAK61C,aAAaxxC,WAA4BrE,KAAK61C,aAAahD,UAClE,QAAA4L,EAAAz+C,KAAKm1C,iBAAL,IAAAsJ,GAAAA,EAAgBhjB,kBAAkB,QAG/Bz7B,KAAKwnC,wBACRxnC,KAAKu8B,oBACLv8B,KAAKw0C,iBAGPx0C,KAAKwV,MAAQ,QAAAgpC,EAAAx+C,KAAKm1C,iBAAL,IAAAqJ,OAAA,EAAAA,EAAgBjmB,oBAIjCzhB,OAAO7O,GAGD,GAFJjI,KAAKiI,KAAK6O,OAAS7O,EAEfjI,KAAKu+C,gBAAiB,CACxB,MAAM/oC,EAAQxV,KAAK08B,oBACflnB,IACFxV,KAAK48B,oBACApnB,KAAAA,MAAQA,IAKnBK,IAAI5N,GAGE,OAFJjI,KAAKiI,KAAK4N,IAAM5N,EAEZjI,KAAKu+C,iBACPv+C,KAAK48B,oBAED58B,KAAK0+C,sBACP1+C,KAAK41C,gBAAgB,CAAEK,gBAAgB,EAAM2B,UAAU,YAClDr6B,EAAAA,KAAAA,yBAAUi7B,mCACf,QAAAmG,EAAA3+C,KAAKm1C,iBAAL,IAAAwJ,GAAAA,EAAgBhiB,iBAAiB38B,KAAKwV,OACtB2kB,QAAhBykB,EAAA5+C,KAAKm1C,iBAAWhb,IAAAA,GAAAA,EAAAA,aAAan6B,KAAKiI,KAAK4N,KACvC,QAAAgpC,EAAO7+C,KAAKm1C,iBAAZ,IAAA0J,OAAA,EAAOA,EAAgBliB,iBAAiB38B,KAAKwV,MAAM,GAAKxV,KAAKiI,KAAK4N,IAAIrM,SAC1C,MAAnBxJ,KAAKiI,KAAK2N,OAAqC,MAApB5V,KAAKiI,KAAK6O,QAC9C9W,KAAK20C,iBACE30C,KAAKs+C,gBAAgBzmC,cAFvB,GAKA7X,KAAKs+C,gBAAgBzmC,QAXG,IAAA4H,EAAAk/B,EAAAC,EAAAC,EAenCnI,aACS,OAAA12C,KAAKiI,KAAK4N,IAGnBihC,UACS,OAAqB,MAArB92C,KAAK02C,aAGd6H,gBACMhzC,OAAAA,GAAQ5K,sBACHX,KAAK61C,aAAa+B,SAQ7B8G,qBAAqB,IAAAI,EAAAC,EACnB,OAAmC,KAAXv1C,eAAZvB,KAAK2N,aAAOpM,IAAAA,OAAAA,EAAAA,EAAAA,UAA+BA,eAAVvB,KAAK4N,WAAKrM,IAAAA,OAAAA,EAAAA,EAAAA,QAAS,GAAKxJ,KAAKwV,OAI9EqhC,GAAiBxpC,YAAY,mCAC7BwpC,GAAiBxpC,YAAY,iCAC7BwpC,GAAiBxpC,YAAY,kCAC7BwpC,GAAiBxpC,YAAY,kCAC7BwpC,GAAiBxpC,YAAY,gCAC7BwpC,GAAiBxpC,YAAY,gCAC7BwpC,GAAiBxpC,YAAY,gCC5nBd,MAAM2xC,WAA8B/K,GACjDnlC,cACEC,SAAAxF,WACKgmC,KAAAA,OAASvvC,KAAKuvC,OAAOx4B,KAAK/W,MAicjC4xC,mBACM,OAAA5xC,KAAKi/C,gBACHj/C,KAAKk/C,UACP,QAAA/hC,EAAOnd,KAAKud,gBAAZ,IAAAJ,WAAAs3B,EAAOt3B,EAAe44B,wDAAtB,EAAOtB,EAAPtvC,KAAAgY,QADE,EAIGnd,KAAKm/C,UAJQ,IAAAhiC,EAAAs3B,EAQxB2K,iBACE,OAAOp/C,KAAKi/C,gBAAkBj/C,KAAKi/C,gBAAkBj/C,KAAKi/C,gBAAkBnnC,sBAAsB9X,KAAKuvC,QAGzGA,SAAS,IAAA8P,EAGc5/B,GAFrB6/B,qBAAqBt/C,KAAKi/C,iBACrBA,KAAAA,gBAAkB,KAClBj/C,KAAKk/C,qBACH3hC,EAAAA,KAAAA,yBAAUgyB,UAEjB,QAAA8P,EAAAr/C,KAAKu/C,mBAAL,IAAAF,GAAAA,EAAAl6C,KAAAnF,MACKu/C,KAAAA,YAAc,KAGrBJ,UAAU,IAAA1lB,EACR,OAAO,QAAPA,EAAOz5B,KAAKud,gBAAL,IAAAkc,OAAA,EAAAA,EAAe0lB,UAKxBhlB,eAAmC,IAAAa,EAAtBzqB,IAAAA,yDAAS,GAAI5I,EAAS4B,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAE1B,eADF8T,EAAAA,KAAAA,yBAAUi7B,mCACRx4C,KAAK++B,oBAAmB,WAAW,IAAAkW,EACjC,OAAA,QAAAA,EAAAj1C,KAAKm1C,iBAAL,IAAAF,OAAA,EAAAA,EAAgB9a,aAAa5pB,EAAQ5I,MAIhD63C,2BAA2B7rC,GAC2B,IAAA6qB,EAApD,GAAIjrB,KAAuBnK,SAASuK,GAE3B,OADP,QAAA6qB,EAAAx+B,KAAKud,gBAAL,IAAAihB,GAAAA,EAAeihB,qCAAqC9rC,GAC7C3T,KAAK++B,oBAAmB,WAAW,IAAAgY,EACxC,OAAA,QAAAA,EAAO/2C,KAAKm1C,iBAAZ,IAAA4B,OAAA,EAAOA,EAAgBja,uBAAuBnpB,MAKpD+rC,6BAA6B/rC,EAAe7P,GACU,IAAA28B,EAApD,GAAIltB,KAAuBnK,SAASuK,GAE3B,OADP,QAAA8sB,EAAAzgC,KAAKud,gBAAL,IAAAkjB,GAAAA,EAAegf,qCAAqC9rC,GAC7C3T,KAAK++B,oBAAmB,WAAW,IAAAkY,EACjC,OAAA,QAAAA,EAAAj3C,KAAKm1C,iBAAL,IAAA8B,OAAA,EAAAA,EAAgBla,oBAAoBppB,EAAe7P,MAKhE23B,kBAAkBlR,GAAW,IAAAiY,gBAAEA,GAAoBj5B,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAEi5B,iBAAiB,GAC/C,IAAA5B,EAAjB4B,YACGjlB,EAAAA,KAAAA,yBAAUi7B,oCAEjB,MAAMr9B,EAAU,KAAA,IAAAsjC,EAAA,OAAA,QAAAA,EAAMz+C,KAAKm1C,iBAAX,IAAAsJ,OAAA,EAAMA,EAAgBhjB,kBAAkBlR,IAClD5S,EAAW3X,KAAK2/C,kBAAkB,CAAEC,UAAW,IACrD,OAAIjoC,EACK3X,KAAK++B,mBAAmBpnB,EAAUwD,GAElCA,IAMX4jB,mBAAmBpnB,EAAUxC,GAKb,IAAAqpC,EAAd,MAJwB,mBAAb7mC,IACTxC,EAAKwC,EACLA,EAAW3X,KAAK2/C,qBAEdhoC,EACK,QAAP6mC,EAAOx+C,KAAKm1C,iBAAL,IAAAqJ,OAAA,EAAAA,EAAgBzf,mBAAmBpnB,EAAUxC,EAAG4B,KAAK/W,QAE5D6W,GAAwBgB,QACjB1C,EAAGhQ,KAAKnF,OAInB2/C,oBAAoD,IAAAE,EAAAC,EAAlC,IAAAF,UAAEA,GAAcr2C,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAA,CAAEq2C,UAAW,GAC7C,MAAMG,UAAeF,GAAAC,EAAA9/C,KAAK+E,OAAMi7C,oCAAXH,EAArB16C,KAAA26C,GACA,GAAIC,GACEA,EAAav2C,OAAQ,CACjBmO,MAAAA,EAAWsoC,GAAmBF,EAAa,IAC7CH,GAAc,IAAdA,GAAmBjoC,EAASnJ,WAAWhF,QAAUo2C,EACnD,OAAOjoC,GAMfuoC,UAAUn7C,EAAOoQ,GACf,IAAIpE,EACChM,KAAAA,MAAQA,EACT,IACFgM,EAASoE,EAAGhQ,KAAKnF,MACT,QACH+E,KAAAA,MAAQ,KAEf,OAAOgM,GA3iBUiuC,EAAAA,GAMH,SAAA,CACdrH,QAAQ5yC,GACN,GAAI+P,GAA0B/P,GAAQ,CAAA,IAAAg8B,EACpC,MAAMof,EAAUC,GAA4Br7C,GACxC,QAAAg8B,EAAA/gC,KAAKud,gBAAL,IAAAwjB,GAAAA,EAAeoX,yCAAyCgI,IAC1Dp7C,EAAML,qBAEH,CACL,IAAImF,EAAO9E,EAAMlB,IACbkB,EAAMszC,SACRxuC,GAAQ,QAEN9E,EAAMs7C,WACRx2C,GAAQ,UAEJ/E,MAAAA,EAAU9E,KAAK8O,YAAY+E,KAAKhK,GACtC,GAAI/E,EACF,OAAO9E,KAAKkgD,UAAUn7C,EAAOD,KAOnCu1C,MAAMt1C,GAAO,IAAAu7C,EAEX,IAAIjG,EACE3vC,MAAAA,UAAO3F,EAAAA,EAAMm1C,kCAANoG,EAAqB3rC,QAAQ,OAC1C,OAAI4rC,GAAuBx7C,IACzBA,EAAML,iBACC1E,KAAKoB,YAAY2D,EAAMm1C,cAActtC,QAGnC4zC,GAA2Bz7C,IACpCA,EAAML,iBACN21C,EAAQ,CACN9tC,KAAM,aACNgE,OAAQxL,EAAMm1C,cAAcvlC,QAAQ,eAEtC,QAAAusB,EAAAlhC,KAAKud,gBAAL,IAAA2jB,GAAAA,EAAewZ,yBAAyBL,GACxBlgB,QAAhBwkB,EAAA3+C,KAAKm1C,iBAAWhb,IAAAA,GAAAA,EAAAA,aAAakgB,EAAM9pC,QACnCvQ,KAAKuvC,SACE,QAAAlO,EAAArhC,KAAKud,gBAAL,IAAA8jB,OAAA,EAAAA,EAAesZ,wBAAwBN,IAGrC3vC,GACT3F,EAAML,iBACN21C,EAAQ,CACN9tC,KAAM,YACNxI,KAAM/D,KAAKu1C,eAAe7qC,IAE5B,QAAA82B,EAAAxhC,KAAKud,gBAAL,IAAAikB,GAAAA,EAAekZ,yBAAyBL,GACxB1f,QAAhBikB,EAAA5+C,KAAKm1C,iBAAWxa,IAAAA,GAAAA,EAAAA,WAAW0f,EAAMt2C,MACjC/D,KAAKuvC,SACL,QAAA1N,EAAO7hC,KAAKud,gBAAZ,IAAAskB,OAAA,EAAOA,EAAe8Y,wBAAwBN,SATzC,EAZuC,IAAAnZ,EAAAyd,EAAAtd,EAY7BG,EAAAod,EAAA/c,GAanBka,YAAYh3C,GACJD,MAAAA,EAAU9E,KAAK8O,YAAY2xC,WAAW17C,EAAM27C,WAClD,GAAI57C,EAEK,OADP9E,KAAKkgD,UAAUn7C,EAAOD,GACf9E,KAAKo/C,kBAIhBlzC,MAAMnH,GACG8R,GAAwBgB,QAGjCghC,UAAU9zC,GAAO,IAAA85C,EACqCtG,EAApD,QAAAsG,EAAI7+C,KAAKm1C,iBAAT,IAAA0J,GAAIA,EAAgBrf,iCAClBz6B,EAAM2P,aAAawiC,QAAQ,+BAA+B,GAE1Dl3C,KAAK2gD,SAAW,CACdnrC,MAAO,QAAA+iC,EAAAv4C,KAAKm1C,iBAAL,IAAAoD,OAAA,EAAAA,EAAgBhgB,mBACvB8P,MAAOuY,GAAe77C,MAK5B6zC,UAAU7zC,GACJ87C,GAAkB97C,IACpBA,EAAML,kBAIVu0C,SAASl0C,GACH,GAAA/E,KAAK2gD,SAAU,CACjB57C,EAAML,iBACN,MAAM2jC,EAAQuY,GAAe77C,GACqB,IAAA4zC,EAA9C,IAACrjC,GAAgB+yB,EAAOroC,KAAK2gD,SAAStY,OAExC,OADAroC,KAAK2gD,SAAStY,MAAQA,EACtB,QAAAsQ,EAAO34C,KAAKm1C,iBAAZ,IAAAwD,OAAA,EAAOA,EAAgB3R,+BAA+BqB,QAE/CwY,GAAkB97C,IAC3BA,EAAML,kBAIVg1C,KAAK30C,GACgB,IAAAi9B,EAAA4X,EAAf,GAAA55C,KAAK2gD,SAKA,OAJP57C,EAAML,yBACD6Y,EAAAA,KAAAA,yBAAUu8B,8BACC3d,QAAhByd,EAAA55C,KAAKm1C,iBAAWhZ,IAAAA,GAAAA,EAAAA,kBAAkBn8B,KAAK2gD,SAASnrC,OAC3CmrC,KAAAA,SAAW,KACT3gD,KAAKo/C,iBACP,GAAIyB,GAAkB97C,GAAQ,CAAA,IAAA80C,EACnC90C,EAAML,iBACN,MAAM2jC,EAAQuY,GAAe77C,GAEtB,OADP,QAAA80C,EAAA75C,KAAKm1C,iBAAL,IAAA0E,GAAAA,EAAgB7S,+BAA+BqB,GACxCroC,KAAKoB,YAAY2D,EAAM2P,aAAa9H,SAI/C2sC,UACqB,IAAAQ,EAAf/5C,KAAK2gD,WACShkB,QAAhBod,EAAA/5C,KAAKm1C,iBAAWxY,IAAAA,GAAAA,EAAAA,iBAAiB38B,KAAK2gD,SAASnrC,OAC1CmrC,KAAAA,SAAW,OAIpB7E,eAAe/2C,GACT,GAAA/E,KAAKk/C,UAEA,OADFA,KAAAA,WAAY,EACVl/C,KAAKo/C,oBAnICJ,EAAAA,GAwIL,OAAA,CACZ8B,YAAY,IAAA7G,EAC2DG,EAAjE,GAAA,QAAAH,EAAAj6C,KAAKm1C,iBAAL,IAAA8E,GAAAA,EAAgBze,oCAAoC,YAEtD,OADKz2B,KAAAA,MAAML,iBACX,QAAA01C,EAAOp6C,KAAKm1C,iBAAZ,IAAAiF,OAAA,EAAOA,EAAgBjb,sBAAsB,aAIjD4hB,aAAa,IAAAtG,EACyDG,EAAhE,GAAA,QAAAH,EAAAz6C,KAAKm1C,iBAAL,IAAAsF,GAAAA,EAAgBjf,oCAAoC,WAEtD,OADKz2B,KAAAA,MAAML,iBACX,QAAAk2C,EAAO56C,KAAKm1C,iBAAZ,IAAAyF,OAAA,EAAOA,EAAgBzb,sBAAsB,YAIjD6hB,YAAY,IAAAlG,EACuDD,EAAAI,EAA7D,GAAA,QAAAH,EAAA96C,KAAKm1C,iBAAL,IAAA2F,GAAAA,EAAgBvf,gCAAgC,YAI3C,OAHFx2B,KAAAA,MAAML,yBACN6Y,EAAAA,KAAAA,yBAAUi7B,mCACf,QAAAyC,EAAAj7C,KAAKm1C,iBAAL,IAAA8F,GAAAA,EAAgBxf,kBAAkB,YAC3Bz7B,KAAKuvC,UAIhB0R,MAAM,IAAAxF,EAC2Cc,EAA/C,GAAA,QAAAd,EAAIz7C,KAAKm1C,iBAAT,IAAAsG,GAAIA,EAAgB7d,0BAGX,OAFF74B,KAAAA,MAAML,yBACNywC,EAAAA,KAAAA,0BAAWtrB,uBACT7pB,KAAKuvC,UAIF,cAAA,IAAAkN,EACmCC,EAA/C,GAAA,QAAAD,EAAIz8C,KAAKm1C,iBAAT,IAAAsH,GAAIA,EAAgB/e,0BAGX,OAFF34B,KAAAA,MAAML,yBACNywC,EAAAA,KAAAA,0BAAWvrB,uBACT5pB,KAAKuvC,YA5KCyP,EAAAA,GAiLC,aAAA,CAClBkC,sBACE,OAAOlhD,KAAKy7B,kBAAkB,WAAY,CAAE+G,iBAAiB,KAG/D2e,cACE,OAAOnhD,KAAKy7B,kBAAkB,aAGhC2lB,eAES,OADFr8C,KAAAA,MAAML,iBACJ1E,KAAK++B,oBAAmB,WAAW,IAAA4d,EACxC38C,KAAKqhD,kBAAoB,QAAA1E,EAAA38C,KAAKm1C,iBAAL,IAAAwH,OAAA,EAAAA,EAAgBpkB,uBAI7C+oB,wBACE,OAAOthD,KAAKy7B,kBAAkB,WAAY,CAAE+G,iBAAiB,KAG/D+e,gBACE,OAAOvhD,KAAKy7B,kBAAkB,aAGhC+lB,wBACE,OAAOxhD,KAAKy7B,kBAAkB,aAGhCgmB,uBACE,OAAOzhD,KAAKy7B,kBAAkB,YAGhCimB,uBACE,OAAO1hD,KAAKy7B,kBAAkB,YAGhCkmB,yBACE,OAAO3hD,KAAKy7B,kBAAkB,aAGhCmmB,wBACE,OAAO5hD,KAAKy7B,kBAAkB,YAGhComB,yBACE,OAAO7hD,KAAKy7B,kBAAkB,aAGhCqmB,wBACE,OAAO9hD,KAAKy7B,kBAAkB,YAGhCsmB,qBACE,OAAO/hD,KAAKy7B,kBAAkB,aAGhCumB,oBACE,OAAOhiD,KAAKy7B,kBAAkB,YAGhCwmB,kBACS,OAAAjiD,KAAK0/C,6BAA6B,kBAAmB1/C,KAAK+E,MAAMkD,OAGzEi6C,aACE,OAAOliD,KAAKw/C,2BAA2B,SAGzC2C,kBACS,OAAAniD,KAAK0/C,6BAA6B,QAAS1/C,KAAK+E,MAAMkD,OAG/Dm6C,iBACS,OAAApiD,KAAK0/C,6BAA6B,OAAQ1/C,KAAK+E,MAAMkD,OAG9Do6C,eAAe,IAAAzF,EACb,GAAA,QAAAA,EAAI58C,KAAKm1C,iBAAT,IAAAyH,GAAIA,EAAgBhf,0BACX,OAAA59B,KAAK++B,oBAAmB,WAAW,IAAAqe,EACxC,OAAO,QAAPA,EAAOp9C,KAAKm1C,iBAAL,IAAAiI,OAAA,EAAAA,EAAgBvzB,2BAK7By4B,eACE,OAAOtiD,KAAKw/C,2BAA2B,WAGzC+C,sBACE,OAAOviD,KAAKw/C,2BAA2B,kBAGzCgD,oBACE,OAAOxiD,KAAKw/C,2BAA2B,gBAGzCiD,oBACE,OAAOziD,KAAKw/C,2BAA2B,gBAGzCkD,qBACE,OAAO1iD,KAAKw/C,2BAA2B,iBAGzCmD,gBAAgB,IAAApF,EACd,GAAA,QAAAA,EAAIv9C,KAAKm1C,iBAAT,IAAAoI,GAAIA,EAAgB7f,0BACX,OAAA19B,KAAK++B,oBAAmB,WAAW,IAAAye,EACxC,OAAO,QAAPA,EAAOx9C,KAAKm1C,iBAAL,IAAAqI,OAAA,EAAAA,EAAgB5zB,2BAK7Bg5B,eACO7jB,KAAAA,oBAAmB,WACjB,IAAA,MAAMprB,KAAiB,QAAA8pC,EAAAz9C,KAAKm1C,iBAAL,IAAAsI,OAAA,EAAAA,EAAgBrf,uBAAwB,CAAA,IAAAqf,EAAAoF,EAClE,QAAAA,EAAA7iD,KAAKm1C,iBAAL,IAAA0N,GAAAA,EAAgBvmB,uBAAuB3oB,QAK7CmvC,8BACS,OAAA9iD,KAAK0/C,6BAA6B,WAAY1/C,KAAK+E,MAAMkD,OAGlE86C,+BACS,OAAA/iD,KAAK0/C,6BAA6B,UAAW1/C,KAAK+E,MAAMkD,OAGjE+6C,sBACE,OAAOhjD,KAAKw/C,2BAA2B,WAGzCyD,kBACE,OAAOjjD,KAAKw/C,2BAA2B,QAGzC0D,oBACE,OAAOljD,KAAKw/C,2BAA2B,QAGzC2D,kBACE,OAAOnjD,KAAKw/C,2BAA2B,cAGzC4D,cAAc,IAAArI,EACZ,OAAO,QAAPA,EAAO/6C,KAAKud,gBAAL,IAAAw9B,OAAA,EAAAA,EAAesI,kCAGxBC,cAAc,IAAAtI,EACZ,OAAO,QAAPA,EAAOh7C,KAAKud,gBAAL,IAAAy9B,OAAA,EAAAA,EAAeuI,kCAGxBC,wBAEE,OADKtE,KAAAA,WAAY,EACVl/C,KAAKm6B,aAAan6B,KAAK+E,MAAMkD,OAGtCw7C,wBAEE,OADKvE,KAAAA,WAAY,EACVl/C,KAAKm6B,aAAan6B,KAAK+E,MAAMkD,OAGtCy7C,iBACQluC,MAAAA,EAAQxV,KAAKqhD,kBACR,IAAAnG,EAAX,GAAI1lC,EAGK,OAFF6rC,KAAAA,kBAAoB,aACpB9jC,EAAAA,KAAAA,yBAAUu8B,8BACR95C,KAAK++B,oBAAmB,WAAW,IAAA4kB,EACxC,OAAA,QAAAA,EAAO3jD,KAAKm1C,iBAAZ,IAAAwO,OAAA,EAAOA,EAAgBxnB,kBAAkB3mB,OAK/CouC,kBAAkB,IAAAC,EACV,MAAAnvC,aAAEA,GAAiB1U,KAAK+E,MACxBs1C,EAAQ,CAAE3lC,aAAAA,GACVhK,EAAOgK,EAAaC,QAAQ,OAC5B5Q,EAAO2Q,EAAaC,QAAQ,aAElC,GAAIjK,EAAM,CAAA,IAAA8wC,EACR,IAAIjrC,EACCxL,KAAAA,MAAML,iBACX21C,EAAM9tC,KAAO,YACb,MAAM1C,EAAO6K,EAAaC,QAAQ,mBAEhCpE,EADE1G,EACOiP,GAA0BjP,GAAMqJ,OAEhCxI,EAEX2vC,EAAMt2C,KAAO/D,KAAKu1C,eAAe7qC,EAAM6F,GACvC,QAAAirC,EAAAx7C,KAAKud,gBAAL,IAAAi+B,GAAAA,EAAed,yBAAyBL,GACnCtb,KAAAA,oBAAmB,WAAW,IAAA+kB,EAC1B,OAAA,QAAAA,EAAA9jD,KAAKm1C,iBAAL,IAAA2O,OAAA,EAAAA,EAAgBnpB,WAAW0f,EAAMt2C,SAGrCw7C,KAAAA,YAAc,KAAM,IAAA7D,EACvB,OAAA,QAAAA,EAAO17C,KAAKud,gBAAZ,IAAAm+B,OAAA,EAAOA,EAAef,wBAAwBN,SAE3C,GAAI5lC,GAAwBC,GAAe,CAAA,IAAAwnC,EAChD7B,EAAM9tC,KAAO,aACb8tC,EAAM9pC,OAASmE,EAAaC,QAAQ,cACpC,QAAAunC,EAAAl8C,KAAKud,gBAAL,IAAA2+B,GAAAA,EAAexB,yBAAyBL,GACnCtb,KAAAA,oBAAmB,WAAW,IAAAglB,EAC1B,OAAA,QAAAA,EAAA/jD,KAAKm1C,iBAAL,IAAA4O,OAAA,EAAAA,EAAgB5pB,aAAakgB,EAAM9pC,WAGvCgvC,KAAAA,YAAc,KAAM,IAAAnD,EACvB,OAAA,QAAAA,EAAOp8C,KAAKud,gBAAZ,IAAA6+B,OAAA,EAAOA,EAAezB,wBAAwBN,SAE3C,GAAIt2C,EAAM,CAAA,IAAAu4C,EACVv3C,KAAAA,MAAML,iBACX21C,EAAM9tC,KAAO,YACb8tC,EAAMt2C,KAAOA,EACb,QAAAu4C,EAAAt8C,KAAKud,gBAAL,IAAA++B,GAAAA,EAAe5B,yBAAyBL,GACnCtb,KAAAA,oBAAmB,WAAW,IAAAilB,EAC1B,OAAA,QAAAA,EAAAhkD,KAAKm1C,iBAAL,IAAA6O,OAAA,EAAAA,EAAgBrpB,WAAW0f,EAAMt2C,SAGrCw7C,KAAAA,YAAc,KAAM,IAAAxC,EACvB,OAAA,QAAAA,EAAO/8C,KAAKud,gBAAZ,IAAAw/B,OAAA,EAAOA,EAAepC,wBAAwBN,SAE3C,GAAI,UAAA3lC,EAAa9H,aAAb,IAAAi3C,GAAAA,EAAoBr6C,OAAQ,CAAA,IAAAyzC,EACrC5C,EAAM9tC,KAAO,OACb8tC,EAAM/uC,KAAOoJ,EAAa9H,MAAM,GAChC,QAAAqwC,EAAAj9C,KAAKud,gBAAL,IAAA0/B,GAAAA,EAAevC,yBAAyBL,GACnCtb,KAAAA,oBAAmB,WAAW,IAAAklB,EAC1B,OAAA,QAAAA,EAAAjkD,KAAKm1C,iBAAL,IAAA8O,OAAA,EAAAA,EAAgBnpB,WAAWuf,EAAM/uC,SAGrCi0C,KAAAA,YAAc,KAAM,IAAApC,EACvB,OAAA,QAAAA,EAAOn9C,KAAKud,gBAAZ,IAAA4/B,OAAA,EAAOA,EAAexC,wBAAwBN,MAKpD6J,iBACE,OAAOlkD,KAAKm6B,aAAan6B,KAAK+E,MAAMkD,OAGtCqyB,kBACE,OAAOt6B,KAAKm6B,aAAa,OAG3BgqB,aACS,OAAAnkD,KAAK0/C,6BAA6B,OAAQ1/C,KAAK+E,MAAMkD,OAG9Dm8C,oBACE,OAAOpkD,KAAKw/C,2BAA2B,WAGzC6E,kBAAkB,IAAA/G,EAET,eADF//B,EAAAA,KAAAA,yBAAUi7B,mCACRx4C,KAAK++B,oBAAmB,WAAW,IAAAulB,EACxC,OAAO,QAAPA,EAAOtkD,KAAKm1C,iBAAL,IAAAmP,OAAA,EAAAA,EAAgBhqB,sBAI3BiqB,wBACE,OAAOvkD,KAAKm6B,aAAan6B,KAAK+E,MAAM2P,aAAaC,QAAQ,cAAe,CAAEolB,gBAAgB,KAG5FD,aAAa,IAAA0qB,EACX,OAAOxkD,KAAKm6B,aAAan6B,KAAK+E,MAAMkD,eAAQu8C,EAAAxkD,KAAK+E,MAAM2P,iCAAX8vC,EAAyB7vC,QAAQ,iBAG/E8vC,kBACE,OAAOzkD,KAAKm6B,aAAan6B,KAAK+E,MAAMkD,OAGtCy8C,sBACE,OAAO1kD,KAAKw/C,2BAA2B,aA+G7C,MAAMS,GAAqB,SAAS0E,GAClC,MAAMnvC,EAAQxR,SAAS8hC,cAGvB,OAFAtwB,EAAMuwB,SAAS4e,EAAYluC,eAAgBkuC,EAAYjuC,aACvDlB,EAAM4yB,OAAOuc,EAAYhuC,aAAcguC,EAAY/tC,WAC5CpB,GAKHqrC,GAAqB97C,IAAD,IAAA40C,EAAA,OAAW9pC,MAAMC,MAAyBkR,QAApB24B,EAAA50C,EAAM2P,oBAAcsM,IAAAA,OAAAA,EAAAA,EAAAA,QAAS,IAAI5X,SAAS,UAEpFm3C,GAAyB,SAASx7C,GACtC,MAAMu1C,EAAYv1C,EAAMm1C,cACxB,GAAII,EACKA,OAAAA,EAAUt5B,MAAM5X,SAAS,UAAuC,IAA3BkxC,EAAUt5B,MAAMxX,QAAgB8wC,EAAU1tC,MAAMpD,QAAU,GAIpGg3C,GAA6B,SAASz7C,GAC1C,MAAMu1C,EAAYv1C,EAAMm1C,cACxB,GAAII,EACF,OAAOA,EAAUt5B,MAAM5X,SAAS,eAA4C,IAA3BkxC,EAAUt5B,MAAMxX,QAI/D42C,GAA8B,SAASr7C,GACrCo7C,MAAAA,EAAU,GAQhB,OAPIp7C,EAAMszC,QACR8H,EAAQp3C,KAAK,OAEXhE,EAAMs7C,UACRF,EAAQp3C,KAAK,SAEfo3C,EAAQp3C,KAAKhE,EAAMlB,KACZs8C,GAGHS,GAAkB77C,IAAW,CACjC2gC,EAAG3gC,EAAMo0C,QACTxT,EAAG5gC,EAAMq0C,WCvlBLx2C,KAAEA,GAAF4I,IAAQA,GAARwB,SAAaA,IAAahC,EAE1B45C,GAAW,SAASzvC,GACxB,OAAO,WACC0vC,MAAAA,EAAW1vC,EAAGpH,MAAM/N,KAAMuJ,WAChCs7C,EAASC,KACJ9kD,KAAK+kD,QACHA,KAAAA,MAAQ,IAEf/kD,KAAK+kD,MAAMh8C,KAAK87C,EAAS3iD,QAId,MAAM8iD,WAAmC53C,EACtD0B,YAAYi9B,EAAiBjsC,EAAS4kC,GAAW/8B,IAAAA,yDAAU,GACzDoH,SAASxF,WAoDUq7C,EAAAA,KAAAA,qBAAAA,IAAS,KACrB,CACLE,GAAI,KACF9kD,KAAKF,QAAQoI,QAAQskC,aAAc,GAErCtqC,KAAM,WAAalC,KAAKF,QAAQoI,QAAQskC,iBAI/BoY,EAAAA,KAAAA,aAAAA,IAAS,KAQd9kD,MAAAA,EAAU2H,EAAY,CAC1B1I,QAAS,MACToJ,UAAWqD,GAAIS,kBACfhE,KAAM,CAAEukC,aAAa,GACrB/jC,WAAYhB,EAAY,CACtB1I,QAAS,MACToJ,UAAW,kBACXM,WAAYhB,EAAY,CACtB1I,QAAS,OACToJ,UAAW,+CACXM,WAAYhB,EAAY,CACtB1I,QAAS,SACToJ,UAAW,kCACXK,YAAa5F,GAAKZ,OAClBnD,WAAY,CAAEomD,MAAOriD,GAAKZ,QAC1BiG,KAAM,CAAEi9C,WAAY,kBA6CrB,OAvCHllD,KAAKyL,WAAW+R,iBAOlB1d,EAAQ6I,YACNlB,EAAY,CACV1I,QAAS,MACToJ,UAAWqD,GAAIK,4BACfpD,WAAYhB,EAAY,CACtB1I,QAAS,OACToJ,UAAWqD,GAAII,mBACfnD,WAAY,CACVhB,EAAY,CACV1I,QAAS,OACToJ,UAAWqD,GAAIM,eACftD,YAAaxI,KAAKyL,WAAWwS,cAC7Bpf,WAAY,CAAEomD,MAAOjlD,KAAKyL,WAAWwS,iBAEvCxW,EAAY,CACV1I,QAAS,OACToJ,UAAWqD,GAAIQ,eACfxD,YAAaxI,KAAKyL,WAAW0S,+BAQzC/Z,EAAY,QAAS,CAAEE,UAAWxE,EAAS0E,aAAcxE,KAAKmlD,kBAC9D/gD,EAAY,QAAS,CACnBE,UAAWxE,EACXyE,iBAAkB,qBAClBC,aAAcxE,KAAKolD,uBAGd,CACLN,GAAI,IAAM9kD,KAAKF,QAAQ6I,YAAY7I,GACnCoC,KAAM,IAAMwE,EAAW5G,QAIJ8kD,EAAAA,KAAAA,uBAAAA,IAAS,KACxBS,MAAAA,EAAW59C,EAAY,CAC3B1I,QAAS,WACToJ,UAAWqD,GAAIG,wBACf9M,WAAY,CAAEymD,YAAa1iD,GAAKnB,oBAChCwG,KAAM,CAAEukC,aAAa,KAEvB6Y,EAASvhD,MAAQ9D,KAAK+rC,gBAAgB3pB,aAEtC,MAAMmjC,EAAgBF,EAAS/wB,YAC/BixB,EAAcj9C,UAAUC,IAAI,yBAC5Bg9C,EAAcC,UAAY,EAEpBC,MAAAA,EAAa,WACjBF,EAAczhD,MAAQuhD,EAASvhD,MAC/BuhD,EAASr9C,MAAM8T,OAASypC,EAAcG,aAAe,MAGvDthD,EAAY,QAAS,CAAEE,UAAW+gD,EAAU7gD,aAAcihD,IAC1DrhD,EAAY,QAAS,CAAEE,UAAW+gD,EAAU7gD,aAAcxE,KAAK2lD,kBAC/DvhD,EAAY,UAAW,CAAEE,UAAW+gD,EAAU7gD,aAAcxE,KAAK4lD,oBACjExhD,EAAY,SAAU,CAAEE,UAAW+gD,EAAU7gD,aAAcxE,KAAK6lD,mBAChEzhD,EAAY,OAAQ,CAAEE,UAAW+gD,EAAU7gD,aAAcxE,KAAK8lD,iBAExDpZ,MAAAA,EAAa1sC,KAAKF,QAAQyU,cAAc,cACxCwxC,EAAoBrZ,EAAWpY,YAE9B,MAAA,CACLwwB,GAAI,KAOF,GANApY,EAAW1kC,MAAMusB,QAAU,OAC3BwxB,EAAkBp9C,YAAY08C,GAC9BU,EAAkBp9C,YAAY48C,GAC9BQ,EAAkBz9C,UAAUC,IAAOiD,GAAAA,OAAAA,GAAIE,kBAAvC,cACAghC,EAAW/W,cAActhB,aAAa0xC,EAAmBrZ,GACzD+Y,IACIzlD,KAAK2H,QAAQq+C,YACf,OAAO9wC,IAAM,IAAMmwC,EAAS3N,WAGhCx1C,OACEwE,EAAWq/C,GACXrZ,EAAW1kC,MAAMusB,QAAU,WA/K1B4wB,KAAAA,gBAAkBnlD,KAAKmlD,gBAAgBpuC,KAAK/W,MAC5ColD,KAAAA,qBAAuBplD,KAAKolD,qBAAqBruC,KAAK/W,MACtD4lD,KAAAA,kBAAoB5lD,KAAK4lD,kBAAkB7uC,KAAK/W,MAChD2lD,KAAAA,gBAAkB3lD,KAAK2lD,gBAAgB5uC,KAAK/W,MAC5C6lD,KAAAA,iBAAmB7lD,KAAK6lD,iBAAiB9uC,KAAK/W,MAC9C8lD,KAAAA,eAAiB9lD,KAAK8lD,eAAe/uC,KAAK/W,MAC1C+rC,KAAAA,gBAAkBA,EAClBjsC,KAAAA,QAAUA,EACV4kC,KAAAA,UAAYA,EACZ/8B,KAAAA,QAAUA,EACf3H,KAAKyL,WAAazL,KAAK+rC,gBAAgBtgC,WACT,MAA1B1M,EAAQiB,KAAKF,WACfE,KAAKF,QAAUE,KAAKF,QAAQoJ,YAE9BlJ,KAAKimD,UAGPA,UACEjmD,KAAKkmD,qBACLlmD,KAAKmmD,aACDnmD,KAAKyL,WAAW+R,iBAClBxd,KAAKomD,uBAITC,YAAY,IAAAlpC,EACV,IAAIjb,EAAOlC,KAAK+kD,MAAM/hB,MAEtB,IADAhjC,KAAKsmD,qBACEpkD,GACLA,IACAA,EAAOlC,KAAK+kD,MAAM/hB,MAEpB,QAAA7lB,EAAAnd,KAAKud,gBAAL,IAAAJ,GAAAA,EAAeopC,6BAA6BvmD,MAK9CsmD,qBACM,GAAAtmD,KAAKwmD,eAAgB,CACjBp7C,MAAAA,EAAUpL,KAAKwmD,eAER,IAAA/mC,EAAAC,EAEN+Z,EAAAgtB,EAFP,GADKD,KAAAA,eAAiB,KAClBp7C,EACas7C,QAAVnpC,EAAAA,KAAAA,gBAAUmpC,IAAAA,GAA4D,QAA5DA,EAAAA,EAAAA,iEAA4D,IAAAhnC,GAAAA,EAAAva,KAAAsa,EAAA,CAAErU,QAAAA,GAAWpL,KAAKyL,iBAE9Ek7C,QAAfltB,EAAAz5B,KAAKud,gBAAUopC,IAAAA,WAAAA,EAAAA,EAAAA,gFAA2D,UAAW3mD,KAAKyL,aA0IhG05C,gBAAgBpgD,GAEPA,OADPA,EAAML,iBACCK,EAAMi3C,kBAGfoJ,qBAAqBrgD,GAAO,IAAAi2B,EAE1B,GACO,WAFQj2B,EAAME,OAAO4F,aAAa,oBAG9B,OAAA,QAAAmwB,EAAAh7B,KAAKud,gBAAL,IAAAyd,OAAA,EAAAA,EAAe4rB,8CAA8C5mD,KAAKyL,YAI/Em6C,kBAAkB7gD,GAC0B,IAAAy5B,EAAAqoB,EAAtC75C,GAA4B,WAA5BA,GAASjI,EAAM+yC,SAGV,OAFP/yC,EAAML,iBACN1E,KAAKsmD,qBACE,QAAA9nB,EAAAx+B,KAAKud,gBAAL,IAAAihB,GAAA,QAAAqoB,EAAAroB,EAAesoB,uDAAf,IAAAD,OAAA,EAAAA,EAAA1hD,KAAAq5B,EAAiEx+B,KAAKyL,YAIjFk6C,gBAAgB5gD,GACd/E,KAAKwmD,eAAiBzhD,EAAME,OAAOnB,MAAML,QAAQ,MAAO,KAAKyP,OAG/D2yC,iBAAiB9gD,GACR,OAAA/E,KAAKsmD,qBAGdR,eAAe/gD,GACN,OAAA/E,KAAKsmD,sBCnOD,MAAMS,WAA8B35C,EACjD0B,YAAYhP,EAASu4B,GACnBtpB,SAASxF,WACJy9C,KAAAA,SAAWhnD,KAAKgnD,SAASjwC,KAAK/W,MAC9BinD,KAAAA,QAAUjnD,KAAKinD,QAAQlwC,KAAK/W,MAC5BknD,KAAAA,mBAAqBlnD,KAAKknD,mBAAmBnwC,KAAK/W,MAElDF,KAAAA,QAAUA,EACVu4B,KAAAA,YAAcA,EACd8uB,KAAAA,aAAe,IAAI7X,GAAatvC,KAAKq4B,YAAYr0B,SAAU,CAAElE,QAASE,KAAKF,UAEhFsE,EAAY,QAAS,CAAEE,UAAWtE,KAAKF,QAAS0E,aAAcxE,KAAKgnD,WACnE5iD,EAAY,OAAQ,CAAEE,UAAWtE,KAAKF,QAAS0E,aAAcxE,KAAKinD,UAClE7iD,EAAY,QAAS,CACnBE,UAAWtE,KAAKF,QAChByE,iBAAkB,2BAClBG,gBAAgB,IAElBN,EAAY,YAAa,CACvBE,UAAWtE,KAAKF,QAChByE,iBvE3B4B,yBuE4B5BC,aAAcxE,KAAKknD,qBAErB9iD,EAAY,QAAS,CAAEE,UAAWtE,KAAKF,QAASyE,iBAAsBqG,IAAAA,OvE9BxC,0BuE8B8DlG,gBAAgB,IAG9GsiD,SAASjiD,GAAO,IAAAqiD,EACRjsC,MAAAA,EAAU,KACK,IAAAgC,EAAAgc,EAAf,IAACn5B,KAAKqnD,QAER,OADKA,KAAAA,SAAU,EACf,QAAAlqC,EAAOnd,KAAKud,gBAAZ,IAAAJ,WAAAgc,EAAOhc,EAAemqC,gDAAtB,EAAOnuB,EAAPh0B,KAAAgY,IAIG,OAAkB8C,QAAlBmnC,EAAApnD,KAAKunD,mBAAatnC,IAAAA,OAAAA,EAAAA,EAAAA,KAAK9E,KAAYA,IAG5C8rC,QAAQliD,GACN/E,KAAKunD,YAAc,IAAIvsC,SAASC,GACvB/F,IAAM,KAC8B,IAAAuK,EAAA+Z,EAApCrzB,EAAqBnG,KAAKF,WACxBunD,KAAAA,QAAU,aACV9pC,EAAAA,KAAAA,uBAAL,YAAeiqC,oCAAf,IAAAhuB,GAAAA,EAAAr0B,KAAAsa,IAGF,OADK8nC,KAAAA,YAAc,KACZtsC,SAKbisC,mBAAmBniD,EAAOE,GAAQ,IAAAw0B,EAAAC,EAChC,MAAMjuB,EAAazL,KAAKynD,yBAAyBxiD,GAC3C+gD,IAAgB9gD,EAA2BH,EAAME,OAAQ,CAAEV,iBAAkB,eAC5E,OAAA,QAAAk1B,EAAAz5B,KAAKud,gBAAL,IAAAkc,GAAA,QAAAC,EAAAD,EAAeiuB,gDAAf,IAAAhuB,OAAA,EAAAA,EAAAv0B,KAAAs0B,EAA0DhuB,EAAY,CAAEu6C,YAAAA,IAGjF2B,yBACM,OAAA3nD,KAAK4nD,sBACA5nD,KAAKmnD,aAAazX,cAElB1vC,KAAKF,QAIhByvC,SAAS,IAAA9O,EAAAC,EAO0D1F,EAAA6sB,EAAArpB,EAAAspB,GAN7D9nD,KAAKi5B,WAAaj5B,KAAKq4B,YAAYY,WACrCj5B,KAAKmnD,aAAajuB,YAAYl5B,KAAKq4B,YAAYr0B,UAC1CmjD,KAAAA,aAAa5X,SAClBvvC,KAAKi5B,SAAWj5B,KAAKq4B,YAAYY,UAG/Bj5B,KAAK+nD,wBAA0B/nD,KAAKmnD,aAAaxX,sBAC9CpyB,EAAAA,KAAAA,uBAAL,YAAeyqC,iDAAf,IAAAH,GAAAA,EAAA1iD,KAAA61B,GACKmsB,KAAAA,aAAa3X,eACbjyB,EAAAA,KAAAA,uBAAL,YAAe0qC,gDAAf,IAAAH,GAAAA,EAAA3iD,KAAAq5B,IAGF,OAAA,QAAAiC,EAAOzgC,KAAKud,gBAAZ,IAAAkjB,WAAAC,EAAOD,EAAeynB,iDAAtB,EAAOxnB,EAAPv7B,KAAAs7B,GAGF0nB,sBAAsBv6C,GAEb,OADFq8B,KAAAA,wBAAwBr8B,GACtB5N,KAAKuvC,SAGdtF,wBAAwBr8B,GACtB,OAAO5N,KAAKmnD,aAAald,wBAAwBr8B,GAGnDs9B,uBACE,OAAOlrC,KAAKmnD,aAAajc,uBAG3BG,oBACE,OAAOrrC,KAAKmnD,aAAa9b,oBAG3BC,qBACE,OAAOtrC,KAAKmnD,aAAa7b,qBAG3B8c,mBACE,OAAOpoD,KAAKmnD,aAAa1b,4BAK3Bmc,sBACS,QAAE5nD,KAAKqoD,iBAGhBC,qCAAqC78C,EAAY9D,GAAS,IAAA4gD,EACxD,IAAI,eAAKF,wBAAL,IAAAE,OAAA,EAAAA,EAAuB98C,cAAeA,EAAY,OAChD3L,MAAAA,EAAUE,KAAKmnD,aAAanc,qBAAqBv/B,GACnD,IAAC3L,EAAS,OAEdE,KAAKwoD,4BACCzc,MAAAA,EAAkB/rC,KAAKq4B,YAAYr0B,SAAS+sB,gCAAgCtlB,GAClFzL,KAAKqoD,iBAAmB,IAAIrD,GAA2BjZ,EAAiBjsC,EAASE,KAAKF,QAAS6H,GAC/F3H,KAAKqoD,iBAAiB9qC,SAAWvd,KAGnCwoD,4BAA4B,IAAAC,EAC1B,OAAO,QAAPA,EAAOzoD,KAAKqoD,wBAAL,IAAAI,OAAA,EAAAA,EAAuBpC,YAKhCE,+BAES,OADF8B,KAAAA,iBAAmB,KACjBroD,KAAKuvC,SAGdmX,0DAA0D7nD,EAAY4M,GAAY,IAAAm1B,EAAAC,EAEzE,OADP,QAAAD,EAAA5gC,KAAKud,gBAAL,IAAAqjB,GAAA,QAAAC,EAAAD,EAAe8nB,iDAAf,IAAA7nB,GAAAA,EAAA17B,KAAAy7B,EAA2Dn1B,GACpDzL,KAAKq4B,YAAYrQ,8BAA8BnpB,EAAY4M,GAGpEk7C,yDAAyD/pC,EAAWnR,GAAY,IAAAs1B,EAAAC,EAEvE,OADP,QAAAD,EAAA/gC,KAAKud,gBAAL,IAAAwjB,GAAA,QAAAC,EAAAD,EAAe2nB,iDAAf,IAAA1nB,GAAAA,EAAA77B,KAAA47B,EAA2Dt1B,GACpDzL,KAAKq4B,YAAYzJ,6BAA6BhS,EAAWnR,GAGlEm7C,8CAA8Cn7C,GAAY,IAAAy1B,EAAAC,EACjD,OAAA,QAAAD,EAAAlhC,KAAKud,gBAAL,IAAA2jB,GAAA,QAAAC,EAAAD,EAAeynB,0DAAf,IAAAxnB,OAAA,EAAAA,EAAAh8B,KAAA+7B,EAAoEz1B,GAG7Eq7C,gDAAgDr7C,GAAY,IAAA41B,EAAAC,EACnD,OAAA,QAAAD,EAAArhC,KAAKud,gBAAL,IAAA8jB,GAAA,QAAAC,EAAAD,EAAeunB,4DAAf,IAAAtnB,OAAA,EAAAA,EAAAn8B,KAAAk8B,EAAsE51B,GAK/Es8C,sBACS,OAAC/nD,KAAK4nD,sBAGfH,yBAAyB3nD,GACvB,OAAOE,KAAKq4B,YAAYr0B,SAAS6jB,kBAAkBuO,SAASt2B,EAAQoI,QAAQklC,OAAQ,MCjKxF,MAEMyb,GAAqB,GAAAnlD,OAFK,wBAEL,MAAAA,OADE,sBAGvBolD,GAA0BC,GAAAA,OADT,qBACvB,sBACMC,GAA0BD,GAAAA,OAFT,qBAEvB,uBACME,GAAyBF,GAAAA,OAHR,qBAGvB,sBACMG,GAAoB,CAACppD,EAAS6T,KAC7BA,IAAiBA,EAAgBw1C,GAAiBrpD,IAChDA,EAAQyU,cAAR,2BAAA7Q,OAAiDiQ,EAAxD,QAEIy1C,GAAiBtpD,GAAYA,EAAQ+K,aAAa,oBAClDs+C,GAAoBrpD,GACjBA,EAAQ+K,aAAa,wBAA0B/K,EAAQ+K,aAAa,8BAI9D,MAAMw+C,WAA0Bj8C,EAC7C0B,YAAYhP,GACViP,MAAMjP,GACDslD,KAAAA,qBAAuBplD,KAAKolD,qBAAqBruC,KAAK/W,MACtDspD,KAAAA,wBAA0BtpD,KAAKspD,wBAAwBvyC,KAAK/W,MAC5DupD,KAAAA,qBAAuBvpD,KAAKupD,qBAAqBxyC,KAAK/W,MACtDwpD,KAAAA,sBAAwBxpD,KAAKwpD,sBAAsBzyC,KAAK/W,MACxDF,KAAAA,QAAUA,EACVjB,KAAAA,WAAa,GACb4qD,KAAAA,QAAU,GACfzpD,KAAK0pD,oBAELtlD,EAAY,YAAa,CACvBE,UAAWtE,KAAKF,QAChByE,iBA9BuB,qBA+BvBC,aAAcxE,KAAKolD,uBAErBhhD,EAAY,YAAa,CACvBE,UAAWtE,KAAKF,QAChByE,iBApC0B,wBAqC1BC,aAAcxE,KAAKspD,0BAErBllD,EAAY,QAAS,CAAEE,UAAWtE,KAAKF,QAASyE,iBAAkBskD,GAAuBnkD,gBAAgB,IACzGN,EAAY,QAAS,CACnBE,UAAWtE,KAAKF,QAChByE,iBAAkBykD,GAClBxkD,aAAcxE,KAAKupD,uBAErBnlD,EAAY,UAAW,CACrBE,UAAWtE,KAAKF,QAChByE,iBAAkB0kD,GAClBzkD,aAAcxE,KAAKwpD,wBAMvBpE,qBAAqBrgD,EAAOjF,GAAS,IAAAqd,UAC9BI,EAAAA,KAAAA,yBAAUosC,wBACf5kD,EAAML,iBACN,MAAMklD,EAAaR,GAActpD,GAEjC,OAAIE,KAAK6pD,UAAUD,GACV5pD,KAAK8pD,aAAaF,GAEzB,QAAAnqC,EAAOzf,KAAKud,gBAAZ,IAAAkC,OAAA,EAAOA,EAAesqC,uBAAuBH,GADxC,IAAAnqC,EAKT6pC,wBAAwBvkD,EAAOjF,GAAS,IAAA25B,UACjClc,EAAAA,KAAAA,yBAAUosC,wBACf5kD,EAAML,iBACN,MAAMiP,EAAgBw1C,GAAiBrpD,GAIhC,IAAAk7B,EAFHh7B,KAAK6pD,UAAUl2C,GACZm2C,KAAAA,aAAan2C,GAElB,QAAAqnB,EAAAh7B,KAAKud,gBAAL,IAAAyd,GAAAA,EAAegvB,0BAA0Br2C,GAGpC,OAAA3T,KAAKiqD,0BAGdV,qBAAqBxkD,EAAOjF,GAC1B,MAAMoqD,EAAgBhlD,EAA2BpF,EAAS,CAAEyE,iBA9EzC,uBAgFZ,OAAAvE,KADQF,EAAQ+K,aAAa,qBAChB1F,KAAKnF,KAAMkqD,GAGjCV,sBAAsBzkD,EAAOjF,GAC3B,GAAsB,KAAlBiF,EAAM+yC,QAAgB,CAExB/yC,EAAML,iBACN,MAAMkY,EAAY9c,EAAQ+K,aAAa,QACjCs/C,EAASnqD,KAAK6pD,UAAUjtC,GACzB7U,KAAAA,aAAaoiD,GAEpB,GAAsB,KAAlBplD,EAAM+yC,QAGD,OADP/yC,EAAML,iBACC1E,KAAKoqD,aAMhBC,cAAcZ,GAEL,OADFA,KAAAA,QAAUA,EACRzpD,KAAKsqD,uBAGdA,uBACE,OAAOtqD,KAAKuqD,kBAAiB,CAACzqD,EAAS8pD,KACrC9pD,EAAQ0qD,UAAwC,IAA7BxqD,KAAKypD,QAAQG,MAIpCW,iBAAiBj+C,GACRuD,OAAAA,MAAMC,KAAK9P,KAAKF,QAAQkzB,iBAlHN,uBAkH8CxiB,KAAK1Q,GAC1EwM,EAASxM,EAASspD,GAActpD,MAMpC2qD,iBAAiB5rD,GAER,OADFA,KAAAA,WAAaA,EACXmB,KAAKiqD,0BAGdA,0BACE,OAAOjqD,KAAK0qD,qBAAoB,CAAC5qD,EAAS6T,KACxC7T,EAAQ0qD,UAA8C,IAAnCxqD,KAAKnB,WAAW8U,GAC/B3T,KAAKnB,WAAW8U,IAAkB3T,KAAK2qD,gBAAgBh3C,IACzD7T,EAAQiI,aAAa,mBAAoB,IAClCjI,EAAQwI,UAAUC,IAAI,iBAE7BzI,EAAQkpB,gBAAgB,oBACjBlpB,EAAQwI,UAAUtG,OAAO,mBAKtC0oD,oBAAoBp+C,GACXuD,OAAAA,MAAMC,KAAK9P,KAAKF,QAAQkzB,iBA7IH,0BA6I8CxiB,KAAK1Q,GAC7EwM,EAASxM,EAASqpD,GAAiBrpD,MAIvC8qD,qBAAqB/2C,GACbg3C,MAAAA,EAAYv5C,KAAKO,UAAUgC,EAAKwG,QACtC,IAAK,MAAMywC,KAAUj7C,MAAMC,KAAK9P,KAAKF,QAAQkzB,iBAAiB,oBAAqB,CAC3E+3B,MAAAA,EAAaD,EAAOjgD,aAAa,iBAAiBzC,MAAM,KAE1D4iD,GADoB15C,KAAKO,UAAUk5C,EAAW1wC,UAC1BwwC,EAEtB,OADAvlD,EAAa,YAAa,CAAEhB,UAAWwmD,KAChC,EAGX,OAAO,EAKTH,gBAAgBM,GACd,MAAMnrD,EAAUE,KAAK6pD,UAAUoB,GAC/B,GAAInrD,EACF,OAAOA,EAAQ+c,aAAa,oBAIhCitC,aAAamB,GACX,OAAIjrD,KAAK2qD,gBAAgBM,GAChBjrD,KAAKoqD,aAELpqD,KAAKkrD,WAAWD,GAI3BC,WAAWD,GAAY,IAAAzsB,EAAAiC,EACrBzgC,KAAKoqD,qBACA7sC,EAAAA,KAAAA,yBAAU4tC,wBAEf,MAAMrrD,EAAUE,KAAK6pD,UAAUoB,GAC/BnrD,EAAQiI,aAAa,mBAAoB,IACzCjI,EAAQwI,UAAUC,IAAI,eAEtBsH,MAAMC,KAAKhQ,EAAQkzB,iBAAiB,oBAAoB3qB,SAAS+iD,IAC/DA,EAAcpiC,gBAAgB,eAGhC,MAAMrV,EAAgBw1C,GAAiBrpD,GACvC,GAAI6T,EAAe,CACjB,MAAMzH,EAAQg9C,GAAkBppD,EAASmrD,GACrC/+C,IACFA,EAAMpI,MAAQ9D,KAAKnB,WAAW8U,IAAkB,GAChDzH,EAAMk6B,UAIV,OAAA,QAAA3F,EAAOzgC,KAAKud,gBAAZ,IAAAkjB,OAAA,EAAOA,EAAe4qB,qBAAqBJ,GAG7CljD,aAAamiD,GACX,MAAMv2C,EAAgBw1C,GAAiBe,GACjCh+C,EAAQg9C,GAAkBgB,EAAev2C,GAC3CzH,OAAAA,EAAMo/C,eAAiBp/C,EAAMq/C,iBAC/Br/C,EAAMnE,aAAa,qBAAsB,IACzCmE,EAAM5D,UAAUC,IAAI,iBACb2D,EAAMwrC,kBAERn6B,EAAAA,KAAAA,yBAAUiuC,0BAA0B73C,EAAezH,EAAMpI,OACvD9D,KAAKoqD,cAFP,IAAAxpB,EAMT5X,gBAAgBkhC,GAAe,IAAAnpB,EAC7B,MAAMptB,EAAgBw1C,GAAiBe,GAEhC,OADP,QAAAnpB,EAAA/gC,KAAKud,gBAAL,IAAAwjB,GAAAA,EAAe0qB,0BAA0B93C,GAClC3T,KAAKoqD,aAGdA,aACQtqD,MAAAA,EAAUE,KAAKF,QAAQyU,cAAcu0C,IAC9B,IAAA5nB,EAAb,GAAIphC,EAIK,OAHPA,EAAQkpB,gBAAgB,oBACxBlpB,EAAQwI,UAAUtG,OAAO,eACzBhC,KAAK0pD,oBACL,QAAOxoB,EAAAlhC,KAAKud,gBAAZ,IAAA2jB,OAAA,EAAOA,EAAewqB,qBAlNL5rD,CAAAA,GAAYA,EAAQ+K,aAAa,oBAkNP8gD,CAAc7rD,IAI7D4pD,oBACE75C,MAAMC,KAAK9P,KAAKF,QAAQkzB,iBAAiBi2B,KAAsB5gD,SAAS6D,IACtEA,EAAMnE,aAAa,WAAY,YAC/BmE,EAAM8c,gBAAgB,sBACtB9c,EAAM5D,UAAUtG,OAAO,oBAI3B6nD,UAAUoB,GACR,OAAOjrD,KAAKF,QAAQyU,cAAb,qBAAA7Q,OAAgDunD,EAAvD,OC5NW,MAAMW,WAAyBjY,GAiD5C7kC,YAA+CoR,GAAnC,IAAA2rC,cAAEA,EAAF7nD,SAAiBA,EAAjBD,KAA2BA,GAAQmc,EAC7CnR,SAASxF,WACJsiD,KAAAA,cAAgBA,EACrB7rD,KAAKqX,iBAAmB,IAAIkvB,GAAiBvmC,KAAK6rD,eAClD7rD,KAAKqX,iBAAiBkG,SAAWvd,KAEjCA,KAAKq4B,YAAc,IAAIU,GACvB/4B,KAAKq4B,YAAY9a,SAAWvd,KAEvBqgB,KAAAA,kBAAoB,IAAIE,GAAkBvgB,KAAKq4B,YAAY3X,kBAChE1gB,KAAKqgB,kBAAkB9C,SAAWvd,KAE7Bs+C,KAAAA,gBACyB,IAA5BtzC,EAAOkB,MAAME,WACT,IAAI4yC,GAAsBh/C,KAAK6rD,eAC/B,IAAInW,GAAsB11C,KAAK6rD,eAErC7rD,KAAKs+C,gBAAgB/gC,SAAWvd,KAChCA,KAAKs+C,gBAAgBnJ,UAAYn1C,KAAKq4B,YAEjCyzB,KAAAA,sBAAwB,IAAI/E,GAAsB/mD,KAAK6rD,cAAe7rD,KAAKq4B,aAChFr4B,KAAK8rD,sBAAsBvuC,SAAWvd,KAEjC+rD,KAAAA,kBAAoB,IAAI1C,GAAkBrpD,KAAK6rD,cAAcG,gBAClEhsD,KAAK+rD,kBAAkBxuC,SAAWvd,KAElCA,KAAKisD,OAAS,IAAIroB,GAAO5jC,KAAKq4B,YAAar4B,KAAKqX,iBAAkBrX,KAAK6rD,eACnE7nD,EACFhE,KAAKisD,OAAOloB,aAAa//B,GAEzBhE,KAAKisD,OAAOjoB,SAASjgC,GAIzBqT,2BACE,OAAOP,GAAwBO,yBAAyBpX,KAAKqX,kBAG/DC,6BACE,OAAOT,GAAwBS,2BAA2BtX,KAAKqX,kBAGjEk4B,SACE,OAAOvvC,KAAK8rD,sBAAsBvc,SAGpC4P,UACS,OAAAn/C,KAAKq4B,YAAYuC,YAAY56B,KAAK6rD,cAAct5B,WAKzD8G,6BAA6Br1B,GAEvB,GADCkoD,KAAAA,oBAAoB,oBACpBlsD,KAAKmsD,cACD,OAAAnsD,KAAKuvC,SAIhBxN,sCAAsC/I,GAIpC,OAHKA,KAAAA,kBAAoBA,EACzBh5B,KAAK+rD,kBAAkBtB,iBAAiBzqD,KAAKg5B,mBAC7Ch5B,KAAKosD,uBACEpsD,KAAKksD,oBAAoB,oBAAqB,CAAErtD,WAAYmB,KAAKg5B,oBAG1EkJ,sCAAsC1sB,GAChCxV,KAAKqsD,UACFC,KAAAA,YAAc92C,GAIvBylB,4BAA4B3vB,GAC1B,OAAOtL,KAAKksD,oBAAoB,cAAe,CAAE5gD,KAAAA,IAGnDw1B,4BAA4Br1B,GACpBqV,MAAAA,EAAoB9gB,KAAKqgB,kBAAkBI,iBAAiBhV,GAClE,OAAOzL,KAAKksD,oBAAoB,iBAAkB,CAAEzgD,WAAYqV,IAGlEmgB,6BAA6Bx1B,GAC3BzL,KAAK8rD,sBAAsB3D,sBAAsB18C,GAC3CqV,MAAAA,EAAoB9gB,KAAKqgB,kBAAkBI,iBAAiBhV,GAElE,OADKygD,KAAAA,oBAAoB,kBAAmB,CAAEzgD,WAAYqV,IACnD9gB,KAAKksD,oBAAoB,UAGlC9qB,yCAAyC31B,GAEvC,OADAzL,KAAK8rD,sBAAsB7hB,wBAAwBx+B,GAC5CzL,KAAKksD,oBAAoB,UAGlCvrB,+BAA+Bl1B,GACvBqV,MAAAA,EAAoB9gB,KAAKqgB,kBAAkBQ,mBAAmBpV,GACpE,OAAOzL,KAAKksD,oBAAoB,oBAAqB,CAAEzgD,WAAYqV,IAGrEygB,qCAAqC91B,EAAY9D,GAG/C,OAFK4kD,KAAAA,wBAA0BvsD,KAAKq4B,YAAYr0B,SAAS8sB,6BAA6BrlB,GACtFzL,KAAK8rD,sBAAsBxD,qCAAqC78C,EAAY9D,GACrE3H,KAAKqX,iBAAiBsnB,iBAAiB3+B,KAAKusD,yBAGrD7qB,oCAAoCj2B,GAC7BqgD,KAAAA,sBAAsBtD,4BACtB+D,KAAAA,wBAA0B,KAGjC9tB,sDAAsDlN,GACpD,IAAIvxB,KAAKwsD,iBAAoBxsD,KAAKysD,YAG9B,OAFCC,KAAAA,uBAAyBn7B,EAC9BvxB,KAAK2sD,8CAAgD3sD,KAAKq4B,YAAYY,SACjEj5B,KAAKmsD,mBAAN,EACKnsD,KAAKuvC,SAIhB5V,8BACO6yB,KAAAA,iBAAkB,EAGzB3yB,6BACOiyB,KAAAA,sBAAsB1D,mBAC3BpoD,KAAKuvC,SACAid,KAAAA,iBAAkB,EAGzB9tB,sBACE,OAAO1+B,KAAKqX,iBAKduJ,+CAA+CnV,GAC7C,OAAOzL,KAAKo8B,iBAAiB3wB,GAK/Bu8C,4CAGE,OAFK1J,KAAAA,gBAAgBhK,6BAChBj9B,KAAAA,iBAAiB8vB,OACfnnC,KAAKqX,iBAAiBgwB,iBAG/B4gB,2CAIE,OAHK3J,KAAAA,gBAAgB/J,4BAChBl9B,KAAAA,iBAAiB+vB,SACtBpnC,KAAKosD,uBACEpsD,KAAKksD,oBAAoB,QAGlChE,iCACMloD,KAAK0sD,yBACH1sD,KAAK2sD,gDAAkD3sD,KAAKq4B,YAAYY,UAC1Ej5B,KAAKqX,iBAAiBsnB,iBAAiB3+B,KAAK0sD,wBAEzCA,KAAAA,uBAAyB,KACzBC,KAAAA,8CAAgD,MAGnD3sD,KAAK4sD,8BAAgC5sD,KAAKq4B,YAAYY,WACxDj5B,KAAK6sD,mBACAx0B,KAAAA,YAAYmF,0BACZ0uB,KAAAA,oBAAoB,WAG3BlsD,KAAK4sD,4BAA8B5sD,KAAKq4B,YAAYY,SAGtDquB,gCAKE,OAJItnD,KAAK8sD,sBACP9sD,KAAK2+B,iBAAiB,CAAEzsB,MAAO,EAAGhD,OAAQ,IAEvC68C,KAAAA,kBAAkB3B,aAChBpqD,KAAKksD,oBAAoB,SAGlC1E,+BACE,OAAOxnD,KAAKksD,oBAAoB,QAGlCxE,yCAAyCj8C,EAAY9D,GAE5C,OADFokD,KAAAA,kBAAkB3B,aAChBpqD,KAAKq4B,YAAY6D,eAAezwB,EAAY9D,GAGrDihD,qDAAqDn9C,GACnD,MAAM8lB,EAAgBvxB,KAAKusD,yBAA2BvsD,KAAKq4B,YAAYr0B,SAAS8sB,6BAA6BrlB,GACtG,OAAAzL,KAAKqX,iBAAiBsnB,iBAAiBpN,EAAc,IAG9Dm3B,0CAA0Cj9C,GACxC,OAAOzL,KAAKisD,OAAOzpB,gBAAgB,kBAAmB,CAAEE,QAASj3B,EAAWiB,GAAIi2B,gBAAgB,IAGlGgmB,mDAAmDl9C,GACjD,OAAOzL,KAAKo8B,iBAAiB3wB,GAK/B4pC,iCACO8W,KAAAA,eAAgB,EAChBY,KAAAA,iBAAkB,EAGzBrY,kCACOqY,KAAAA,iBAAkB,EAGzBzX,gCAEM,GADC6W,KAAAA,eAAgB,EACjBnsD,KAAK+sD,gBAEA,OADFA,KAAAA,iBAAkB,EAChB/sD,KAAKuvC,SAIhBwG,wCACE,OAAO/1C,KAAKksD,oBAAoB,UAGlCrX,mCACS,OAAA70C,KAAKm/C,UAGd3G,mCACS,OAAAx4C,KAAKgtD,wBAGdvN,qCAAqC9rC,GACnC,OAAO3T,KAAKitD,0BAA0Bt5C,GAGxCwmC,6BACE,OAAOn6C,KAAKisD,OAAOzpB,gBAAgB,OAGrCkY,yBAAyBL,GAGvB,OAFAr6C,KAAKisD,OAAOzpB,gBAAgB,SACvB6pB,KAAAA,SAAU,EACRrsD,KAAKksD,oBAAoB,eAAgB,CAAE7R,MAAAA,IAGpDM,wBAAwBN,GAItB,OAHAA,EAAM7kC,MAAQxV,KAAKssD,YACdA,KAAAA,YAAc,KACdD,KAAAA,QAAU,KACRrsD,KAAKksD,oBAAoB,QAAS,CAAE7R,MAAAA,IAG7CP,8BACE,OAAO95C,KAAKisD,OAAOzpB,gBAAgB,QAGrC0S,iCACE,OAAOl1C,KAAKisD,OAAOzpB,gBAAgB,cAGrC+gB,iCACE,OAAOvjD,KAAKisD,OAAO/pD,OAGrBmhD,iCACE,OAAOrjD,KAAKisD,OAAOlqD,OAGrBo2C,yCAAyCtkC,GACvC,OAAO7T,KAAK+rD,kBAAkBnB,qBAAqB/2C,GAGrDmlC,8BACEh5C,KAAKktD,wBAA0BltD,KAAKqX,iBAAiBwjB,mBAGvDye,uCAAuCjR,GACrC,OAAOroC,KAAKqX,iBAAiB2vB,+BAA+BqB,GAG9DoR,+BACEz5C,KAAKqX,iBAAiBsnB,iBAAiB3+B,KAAKktD,yBACvCA,KAAAA,wBAA0B,KAKjCjlB,uBAAuB1W,GAMrB,OALK8G,KAAAA,YAAYmF,0BACjBx9B,KAAKosD,uBACDpsD,KAAKusD,0BAA4Bx2C,GAAe/V,KAAKusD,wBAAyBh7B,IAC3E8G,KAAAA,YAAYgE,wBAEZr8B,KAAKksD,oBAAoB,oBAKlCvC,wBACE,IAAK3pD,KAAK66B,mBACD,OAAA76B,KAAK2+B,iBAAiB,CAAEzsB,MAAO,EAAGhD,OAAQ,IAIrD66C,uBAAuBH,GACrB,OAAO5pD,KAAKmtD,aAAavD,GAG3BI,0BAA0Br2C,GAIpB,GAHCs5C,KAAAA,0BAA0Bt5C,GAC/B3T,KAAKq4B,YAAYyE,uBAAuBnpB,GACxC3T,KAAKuvC,UACAvvC,KAAKotD,gBACR,OAAOptD,KAAK6rD,cAAcnU,QAI9B8T,0BAA0B73C,EAAe7P,GAInC,GAHCmpD,KAAAA,0BAA0Bt5C,GAC/B3T,KAAKq4B,YAAY0E,oBAAoBppB,EAAe7P,GACpD9D,KAAKuvC,UACAvvC,KAAKotD,gBACR,OAAOptD,KAAK6rD,cAAcnU,QAI9B+T,0BAA0B93C,GAIpB,GAHCs5C,KAAAA,0BAA0Bt5C,GAC/B3T,KAAKq4B,YAAYiE,uBAAuB3oB,GACxC3T,KAAKuvC,UACAvvC,KAAKotD,gBACR,OAAOptD,KAAK6rD,cAAcnU,QAI9ByT,sBAAsBjB,GAEb,OADF7xB,KAAAA,YAAYiH,4BACVt/B,KAAKq+B,kBAGdgtB,qBAAqBJ,GACnB,OAAOjrD,KAAKksD,oBAAoB,sBAAuB,CAAEjB,WAAAA,IAG3DS,qBAAqBT,GAGnB,OAFAjrD,KAAKs+B,gBACAutB,KAAAA,cAAcnU,QACZ13C,KAAKksD,oBAAoB,sBAAuB,CAAEjB,WAAAA,IAK3D5sB,kBACM,IAACr+B,KAAKotD,gBAID,OAHF/1C,KAAAA,iBAAiB8vB,OACjB9O,KAAAA,YAAYgG,kBACZ+uB,KAAAA,iBAAkB,EAChBptD,KAAKuvC,SAIhBjR,gBACM,GAAAt+B,KAAKotD,gBAIA,OAHF/0B,KAAAA,YAAYiG,gBACZjnB,KAAAA,iBAAiB+vB,SACjBgmB,KAAAA,iBAAkB,EAChBptD,KAAKuvC,SAIhB8d,gBAAgBzD,GACd,QAAI5pD,KAAKstD,iBAAiB1D,MAGhB,QAAC2D,EAAAvtD,KAAKypD,QAAQG,UAAd,IAAA2D,WAAAC,EAACD,EAA0B1tD,oBAA1B2tD,EAAgCroD,KAAKnF,OADzC,IAAAutD,EAAAC,EAKTL,aAAavD,GACX,OAAI5pD,KAAKstD,iBAAiB1D,GACjB5pD,KAAKksD,oBAAoB,gBAAiB,CAAEtC,WAAAA,IAEnD,QAAA6D,EAAOztD,KAAKypD,QAAQG,UAApB,IAAA6D,GAAO,QAAPC,EAAOD,EAA0BtyC,eAA1B,IAAAuyC,OAAP,EAAOA,EAAmCvoD,KAAKnF,MAD1C,IAAAytD,EAAAC,EAKTJ,iBAAiB1D,GACf,MAAO,OAAO/pD,KAAK+pD,GAGrB+D,oBACQ58C,MAAAA,EAAS,GACf,IAAK,MAAM64C,KAAc5pD,KAAKypD,QAC5B14C,EAAO64C,GAAc5pD,KAAKqtD,gBAAgBzD,GAE5C,OAAO74C,EAGTq7C,uBACE,MAAMwB,EAAiB5tD,KAAK2tD,oBACxB,IAACr4C,GAAgBs4C,EAAgB5tD,KAAK4tD,gBAGxC,OAFKA,KAAAA,eAAiBA,EACtB5tD,KAAK+rD,kBAAkB1B,cAAcrqD,KAAK4tD,gBACnC5tD,KAAKksD,oBAAoB,iBAAkB,CAAEzC,QAASzpD,KAAK4tD,iBAMtEf,mBACE,IAAI3pB,EAAWljC,KAAKq4B,YAAYiB,cAa5B,GAXJzpB,MAAMC,KAAK9P,KAAKisD,OAAOnoB,SAASz7B,SAASkP,IACjC,MAAAvT,SAAEA,EAAFs0B,cAAYA,GAAkB4K,EACpCA,EAAW3rB,EAAOpS,KAAKnF,KAAKisD,OAAQ/oB,IAAa,GAC5CA,EAASl/B,WACZk/B,EAASl/B,SAAWA,GAEjBk/B,EAAS5K,gBACZ4K,EAAS5K,cAAgBA,MAvdNtmB,EA2dAkxB,EA3dGjxB,EA2dOjS,KAAKq4B,YAAYiB,eA3dlBvjB,GAAe/D,EAAEsmB,cAAermB,EAAEqmB,iBAAkBtmB,EAAEhO,SAASwL,UAAUyC,EAAEjO,UA4dzG,OAAOhE,KAAKq4B,YAAYkB,aAAa2J,GA5djB,IAAClxB,EAAGC,EAke5B47C,qBACE,MACM/pD,EVna4B,SAAS6sC,EAAcn0B,GAC3D,MAAMsxC,EAAapd,GAAYl0B,GAC/B,GAAIsxC,EACKA,OAAAA,EAAWnd,GAElB,MAAM,IAAI1iC,MAA+BuO,yBAAAA,OAAAA,IU8Z3BuxC,CADE/tD,KAAK8rD,sBAAsBnE,yBACG,aAC9C,OAAO3nD,KAAK6rD,cAAcmC,qBAAqBlqD,GAGjDooD,oBAAoB+B,EAAShmD,GAC3B,OAAQgmD,GACN,IAAK,kBACEC,KAAAA,gCAAiC,EACtC,MACF,IAAK,SACCluD,KAAKkuD,iCACFA,KAAAA,gCAAiC,EACjChC,KAAAA,oBAAoB,WAE3B,MACF,IAAK,SACL,IAAK,iBACL,IAAK,kBACL,IAAK,oBACHlsD,KAAK6tD,qBAIF,OAAA7tD,KAAK6rD,cAAcsC,OAAOF,EAAShmD,GAG5Cm0B,iBAAiB3wB,GAGR,OAFPzL,KAAKisD,OAAOzpB,gBAAgB,qBAC5BxiC,KAAKq4B,YAAY+D,iBAAiB3wB,GAC3BzL,KAAKuvC,SAGd0d,0BAA0Bt5C,GACxB,MAAMsb,EAAcvb,GAAeC,GAC7B4d,EAAgBvxB,KAAKqX,iBAAiBwjB,mBAC5C,GAAI5L,IAAgBtZ,GAAiB4b,GACnC,OAAOvxB,KAAKisD,OAAOzpB,gBAAgB,aAAc,CAAEE,QAAS1iC,KAAKouD,iBAAkBzrB,gBAAgB,IAIvGqqB,wBACE,OAAOhtD,KAAKisD,OAAOzpB,gBAAgB,SAAU,CAC3CE,QAAS1iC,KAAKouD,eAAepuD,KAAKg5B,mBAClC2J,gBAAgB,IAIpByrB,iBAA2B,IAAA,IAAAh8C,EAAA7I,UAAAC,OAATk5B,EAAS,IAAA7yB,MAAAuC,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAATqwB,EAASrwB,GAAA9I,UAAA8I,GACzB,MAAO,CAAErS,KAAKquD,qBAAsBruD,KAAKsuD,oBAAqBz+C,MAAMC,KAAK4yB,IAG3E2rB,qBACE,MAAM98B,EAAgBvxB,KAAKqX,iBAAiBwjB,mBAC5C,OAAIllB,GAAiB4b,GACZA,EAAc,GAAGrf,MAEjBqf,EAIX+8B,iBACE,OAAItjD,EAAOmC,aAAe,EACjBhK,KAAKC,OAAM,IAAImrD,MAAOC,UAAYxjD,EAAOmC,cAEzC,EAIXs/C,YAAY,IAAAgC,EACH,OAAAzuD,KAAK6rD,iBAAL,QAAA4C,EAAuBzuD,KAAK6rD,cAAc6C,qBAA1C,IAAAD,OAAA,EAAuBA,EAAkCroD,eAKlE0mD,qBACE,OAAO9sD,KAAKysD,cAAgBzsD,KAAK66B,mBAG/B4uB,cACK,OAAAzpD,KAAK8O,YAAY26C,SAjjBPmC,EAAAA,GACF,UAAA,CACf1pD,KAAM,CACJrC,OACE,OAAOG,KAAKisD,OAAO9oB,WAErBhoB,UACE,OAAOnb,KAAKisD,OAAO/pD,SAGvBH,KAAM,CACJlC,OACE,OAAOG,KAAKisD,OAAO7oB,WAErBjoB,UACE,OAAOnb,KAAKisD,OAAOlqD,SAGvBH,KAAM,CACJ/B,OACE,OAAOG,KAAKisD,OAAO3nB,qBAAqB,UAG5Cza,qBAAsB,CACpBhqB,OACE,OAAOG,KAAKisD,OAAOruB,2BAErBziB,UACE,OAAOnb,KAAKisD,OAAOpiC,wBAA0B7pB,KAAKuvC,WAGtD3lB,qBAAsB,CACpB/pB,OACE,OAAOG,KAAKisD,OAAOvuB,2BAErBviB,UACE,OAAOnb,KAAKisD,OAAOriC,wBAA0B5pB,KAAKuvC,WAGtDnuC,YAAa,CACXvB,KAAI,KACK,EAETsb,UACSnQ,OAAAA,EAAOkB,MAAMG,UAAUrM,KAAKisD,OAAOlxB,iBAygBlD6wB,GAAiBv+C,YAAY,0CAC7Bu+C,GAAiBv+C,YAAY,0CCxkB7B0G,GAA4B,eAA5B,6QAqBe,MAAM46C,WAA2B/d,YAI9Cge,oBACyB,KAAnB5uD,KAAKuyB,YACPvyB,KAAKuyB,UAAYvnB,EAAOiC,QAAQC,mBAKtC5C,OAAOukD,eAAeC,OAAO,eAAgBH,ICrB7C,IAAIjiD,GAAK,EAIT,MAQMqiD,GAAe,SAASjvD,GAC5B,IAAIA,EAAQ+c,aAAa,mBAIlBmyC,OADPlvD,EAAQiI,aAAa,kBAAmB,IpECX,SAAS1D,GAAWsD,IAAAA,yDAAU,GAE3D,OADAA,EAAQhD,MAAQ,EACTP,EAAYC,EAAWsD,GoEFvBqnD,CAAgB,QAAS,CAC9B1qD,UAAWxE,EACX0E,aAAY,IACHyqD,GAAyBnvD,MAKhCmvD,GAA2B,SAASnvD,GAEjCovD,OADPC,GAAsBrvD,GACfovD,GAA6BpvD,IAGhCqvD,GAAwB,SAASrvD,GAAS,IAAAsvD,EAAAC,EAC1C,WAAAD,GAAAC,EAAArrD,UAASsrD,oCAATF,EAAiCjqD,KAAAkqD,EAAA,wBAE5BjrD,OADPJ,SAASurD,YAAY,wBAAwB,GAAO,GAC7CnrD,EAAY,kBAAmB,CAAEE,UAAWxE,EAAS4E,gBAAgB,KAI1EwqD,GAA+B,SAASpvD,GAAS,IAAA0vD,EAAAC,EACjD,WAAAD,GAAAC,EAAAzrD,UAASsrD,oCAATE,EAAiCrqD,KAAAsqD,EAAA,6BAA8B,CAC3D,MAAA1wD,QAAEA,GAAYiM,EAAOlC,gBAAgBhK,QACvC,GAAA,CAAE,MAAO,KAAMsK,SAASrK,GACnBiF,OAAAA,SAASurD,YAAY,6BAA6B,EAAOxwD,KAqChE2wD,GACA1kD,EAAOO,QAAQzK,qBACV,CACLyzB,QAAS,SACT3Y,MAAO,QAGF,CACL2Y,QAAS,eACT3Y,MAAO,OAKb7H,GAA4B,cAAD,2TAAArQ,O3E3GO,yB2E2GP,uDAAAA,O3E3GO,yB2E2I7BkH,6HAAAA,O3E3I6B,yB2EiJnB8kD,2KAAAA,OAAAA,GAAmBn7B,QAtCP,6BAAA7wB,OAuCdgsD,GAAmB9zC,MAvChC,kVAuDe,MAAM+zC,WAA0B/e,YAIzCxD,aACF,OAAIptC,KAAK6c,aAAa,WACb7c,KAAK6K,aAAa,YAEzB7K,KAAK+H,aAAa,YAAa2E,IACxB1M,KAAKotC,QAIZwiB,aACIA,MAAAA,EAAS,GACX5vD,KAAK0M,IAAM1M,KAAK0uD,eAClBkB,EAAO7mD,QAAQ8G,MAAMC,KAAK9P,KAAK0uD,cAAc17B,iBAAnB,cAAAtvB,OAAkD1D,KAAK0M,GAAvD,QAAkE,KAG9F,MAAMmjD,EAAQ3qD,EAA2BlF,KAAM,CAAEuE,iBAAkB,UAOnE,OANIsrD,GACE,CAAE7vD,KAAM,MAAOoJ,SAASymD,EAAMhT,UAChC+S,EAAO7mD,KAAK8mD,GAITD,EAGL5D,qBACgC,IAAA8D,EAAlC,GAAI9vD,KAAK6c,aAAa,WACb,OAAP,QAAOizC,EAAA9vD,KAAK0uD,qBAAZ,IAAAoB,OAAA,EAAOA,EAAoBjjD,eAAe7M,KAAK6K,aAAa,YACvD,GAAI7K,KAAKD,WAAY,CAC1B,MAAMgwD,EAAS,gBAAArsD,OAAmB1D,KAAKotC,QACvCptC,KAAK+H,aAAa,UAAWgoD,GAC7B,MAAMjwD,EAAU2H,EAAY,eAAgB,CAAEiF,GAAIqjD,IAElD,OADA/vD,KAAKD,WAAWsU,aAAavU,EAASE,MAC/BF,GAMP6S,WAAO,IAAAq9C,EACT,OAAO,QAAPA,EAAOhwD,KAAKiwD,oBAAL,IAAAD,OAAA,EAAAA,EAAmBr9C,KAGxBs9C,mBAC8B,IAAAC,EAAhC,GAAIlwD,KAAK6c,aAAa,SACb,OAAP,QAAOqzC,EAAAlwD,KAAK0uD,qBAAZ,IAAAwB,OAAA,EAAOA,EAAoBrjD,eAAe7M,KAAK6K,aAAa,UACvD,GAAI7K,KAAKD,WAAY,CAC1B,MAAMowD,EAAO,cAAAzsD,OAAiB1D,KAAKotC,QACnCptC,KAAK+H,aAAa,QAASooD,GAC3B,MAAMrwD,EAAU2H,EAAY,QAAS,CAAE8E,KAAM,SAAUG,GAAIyjD,IAE3D,OADAnwD,KAAKD,WAAWsU,aAAavU,EAASE,KAAKowD,oBACpCtwD,GAMPmsD,aAAS,IAAAoE,EACX,OAAO,QAAPA,EAAOrwD,KAAKswD,wBAAL,IAAAD,OAAA,EAAAA,EAAuBpE,OAG5BpiD,WAAO,IAAA0mD,EACT,OAAO,QAAPA,EAAOvwD,KAAKiwD,oBAAL,IAAAM,OAAA,EAAAA,EAAmB1mD,KAGxB/F,YAAQ,IAAA0sD,EACV,OAAO,QAAPA,EAAOxwD,KAAKiwD,oBAAL,IAAAO,OAAA,EAAAA,EAAmB1sD,MAGxBA,UAAM2sD,GAAc,IAAAC,EACjBD,KAAAA,aAAeA,EACpB,QAAAC,EAAA1wD,KAAKisD,cAAL,IAAAyE,GAAAA,EAAa1sB,SAAShkC,KAAKywD,cAK7BtC,OAAOF,EAAShmD,GACV,GAAAjI,KAAKswD,iBACAhrD,OAAAA,EAAqB2oD,QAAAA,OAAAA,GAAW,CAAE3pD,UAAWtE,KAAMnB,WAAYoJ,IAI1E+lD,qBAAqBlqD,GACf9D,KAAKiwD,eACPjwD,KAAKiwD,aAAansD,MAAQA,GAM9B8qD,oBACO5uD,KAAK6c,aAAa,wBACrBkyC,GAAa/uD,MAnMU,SAASF,GACpC,IAAIA,EAAQ+c,aAAa,QAGlB/c,EAAQiI,aAAa,OAAQ,WAgMhC4oD,CAAqB3wD,MA7LH,SAASF,GAC/B,GAAIA,EAAQ+c,aAAa,eAAiB/c,EAAQ+c,aAAa,mBAC7D,OAGI/F,MAAAA,EAAS,WACb,MAAM85C,EAAQ/gD,MAAMC,KAAKhQ,EAAQ8vD,QAAQp/C,KAAKq/C,IACxC,IAACA,EAAMgB,SAAS/wD,GAAU,OAAO+vD,EAAMrnD,eAC1C+O,QAAO/X,GAAQA,IAEZA,EAAOoxD,EAAM3/C,KAAK,KACxB,OAAIzR,EACKM,EAAQiI,aAAa,aAAcvI,GAEnCM,EAAQkpB,gBAAgB,eAGnClS,IACO1S,EAAY,QAAS,CAAEE,UAAWxE,EAAS0E,aAAcsS,IA4K5Dg6C,CAAgB9wD,MAEXA,KAAKswD,mBACRhrD,EAAa,yBAA0B,CAAEhB,UAAWtE,OACpDA,KAAKswD,iBAAmB,IAAI1E,GAAiB,CAC3CC,cAAe7rD,KACf+D,KAAM/D,KAAKywD,aAAezwD,KAAK8D,QAEjCgU,uBAAsB,IAAMxS,EAAa,kBAAmB,CAAEhB,UAAWtE,UAEtEswD,KAAAA,iBAAiBl5C,2BACtBpX,KAAK+wD,wBACL/wD,KAAKgxD,wBA7PO,SAASlxD,GACzB,IAAKkE,SAASuQ,cAAc,WACtBzU,EAAQ+c,aAAa,cAAgB7Y,SAASuQ,cAAc,iBAAmBzU,EAC1EA,EAAQ43C,QA2PfuZ,CAAUjxD,OAIdkxD,uBAAuB,IAAAC,EAGd,eAFFb,EAAAA,KAAAA,iCAAkBh5C,6BACvBtX,KAAKoxD,0BACEpxD,KAAKqxD,0BAKdN,wBAESzmD,OADFgnD,KAAAA,cAAgBtxD,KAAKuxD,aAAax6C,KAAK/W,MACrCsK,OAAOjF,iBAAiB,QAASrF,KAAKsxD,eAAe,GAG9DF,0BACS9mD,OAAAA,OAAOlF,oBAAoB,QAASpF,KAAKsxD,eAAe,GAGjEN,wBAES1mD,OADFknD,KAAAA,cAAgBxxD,KAAKyxD,aAAa16C,KAAK/W,MACrCsK,OAAOjF,iBAAiB,QAASrF,KAAKwxD,eAAe,GAG9DH,0BACS/mD,OAAAA,OAAOlF,oBAAoB,QAASpF,KAAKwxD,eAAe,GAGjED,aAAaxsD,GACPA,IAAAA,EAAMqwC,kBACNrwC,EAAME,SAAWjF,KAAK2S,KACnB,OAAA3S,KAAK6X,QAGd45C,aAAa1sD,GACPA,GAAAA,EAAMqwC,iBAAkB,OAC5B,GAAIp1C,KAAK6wD,SAAS9rD,EAAME,QAAS,OAEjC,MAAM4qD,EAAQ3qD,EAA2BH,EAAME,OAAQ,CAAEV,iBAAkB,UACvE,OAACsrD,GAEAhgD,MAAMC,KAAK9P,KAAK4vD,QAAQxmD,SAASymD,GAE/B7vD,KAAK03C,aAJR,EAON7/B,QACO/T,KAAAA,MAAQ9D,KAAKywD,cAItBnmD,OAAOukD,eAAeC,OAAO,cAAea"}