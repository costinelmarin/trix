{"version":3,"file":"trix.umd.min.js","sources":["../src/trix/config/attachments.js","../src/trix/config/block_attributes.js","../src/trix/config/browser.js","../src/trix/config/lang.js","../src/trix/config/file_size_formatting.js","../src/trix/constants.js","../src/trix/core/helpers/extend.js","../src/trix/core/helpers/dom.js","../src/trix/config/key_names.js","../src/trix/config/text_attributes.js","../src/trix/config/undo_interval.js","../src/trix/config.js","../src/trix/config/css.js","../src/trix/config/input.js","../src/trix/config/toolbar.js","../src/trix/core/basic_object.js","../src/trix/core/utilities/utf16_string.js","../src/trix/core/object.js","../src/trix/core/helpers/arrays.js","../src/trix/core/helpers/bidi.js","../src/trix/core/helpers/config.js","../src/trix/core/helpers/custom_elements.js","../src/trix/core/helpers/events.js","../src/trix/core/helpers/functions.js","../src/trix/core/helpers/objects.js","../src/trix/core/helpers/ranges.js","../src/trix/observers/selection_change_observer.js","../src/trix/core/helpers/strings.js","../src/trix/core/collections/hash.js","../src/trix/core/utilities/operation.js","../src/trix/operations/image_preload_operation.js","../src/trix/models/attachment.js","../src/trix/models/managed_attachment.js","../src/trix/models/attachment_manager.js","../src/trix/models/piece.js","../src/trix/models/attachment_piece.js","../src/trix/models/string_piece.js","../src/trix/models/splittable_list.js","../src/trix/models/text.js","../src/trix/models/block.js","../src/trix/core/collections/object_map.js","../src/trix/models/document.js","../src/trix/models/html_sanitizer.js","../src/trix/models/html_parser.js","../src/trix/models/line_break_insertion.js","../src/trix/models/composition.js","../src/trix/models/undo_manager.js","../src/trix/filters/attachment_gallery_filter.js","../src/trix/models/editor.js","../src/trix/models/location_mapper.js","../src/trix/models/point_mapper.js","../src/trix/models/selection_manager.js","../src/trix/models.js","../src/trix/global.js","../src/trix/core/collections/object_group.js","../src/trix/core/collections/element_store.js","../src/trix/views/object_view.js","../src/trix/views/attachment_view.js","../src/trix/views/previewable_attachment_view.js","../src/trix/views/piece_view.js","../src/trix/views/text_view.js","../src/trix/views/block_view.js","../src/trix/views/document_view.js","../src/trix/core/serialization.js","../src/trix/observers/mutation_observer.js","../src/trix/controllers/controller.js","../src/trix/operations/file_verification_operation.js","../src/trix/controllers/input_controller.js","../src/trix/controllers/level_0_input_controller.js","../src/trix/controllers/level_2_input_controller.js","../src/trix/controllers/attachment_editor_controller.js","../src/trix/controllers/composition_controller.js","../src/trix/controllers/toolbar_controller.js","../src/trix/controllers/editor_controller.js","../src/trix/elements/trix_toolbar_element.js","../src/trix/elements/trix_editor_element.js"],"sourcesContent":["export const attachmentSelector = \"[data-trix-attachment]\"\n\nconst attachments = {\n  preview: {\n    presentation: \"gallery\",\n    caption: {\n      name: true,\n      size: true,\n    },\n  },\n  file: {\n    caption: {\n      size: true,\n    },\n  },\n}\nexport default attachments\n","const attributes = {\n  default: {\n    tagName: \"div\",\n    parse: false,\n  },\n  quote: {\n    tagName: \"blockquote\",\n    nestable: true,\n  },\n  heading1: {\n    tagName: \"h1\",\n    terminal: true,\n    breakOnReturn: true,\n    group: false,\n  },\n  code: {\n    tagName: \"pre\",\n    terminal: true,\n    text: {\n      plaintext: true,\n    },\n  },\n  bulletList: {\n    tagName: \"ul\",\n    parse: false,\n  },\n  bullet: {\n    tagName: \"li\",\n    listAttribute: \"bulletList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return (\n        tagName(element.parentNode) === attributes[this.listAttribute].tagName\n      );\n    },\n  },\n  numberList: {\n    tagName: \"ol\",\n    parse: false,\n  },\n  number: {\n    tagName: \"li\",\n    listAttribute: \"numberList\",\n    group: false,\n    nestable: true,\n    test(element) {\n      return (\n        tagName(element.parentNode) === attributes[this.listAttribute].tagName\n      );\n    },\n  },\n  attachmentGallery: {\n    tagName: \"div\",\n    exclusive: true,\n    terminal: true,\n    parse: false,\n    group: false,\n  },\n  alignLeft: {\n    tagName: \"align-left\",\n    nestable: false,\n    exclusive: true,\n  },\n  alignCenter: {\n    tagName: \"align-center\",\n    nestable: false,\n    exclusive: true,\n  },\n  alignRight: {\n    tagName: \"align-right\",\n    nestable: false,\n    exclusive: true,\n  },\n};\n\nconst tagName = (element) => element?.tagName?.toLowerCase();\n\nexport default attributes;\n","export default {\n  // Android emits composition events when moving the cursor through existing text\n  // Introduced in Chrome 65: https://bugs.chromium.org/p/chromium/issues/detail?id=764439#c9\n  composesExistingText: /Android.*Chrome/.test(navigator.userAgent),\n  // IE 11 activates resizing handles on editable elements that have \"layout\"\n  forcesObjectResizing: /Trident.*rv:11/.test(navigator.userAgent),\n  // https://www.w3.org/TR/input-events-1/ + https://www.w3.org/TR/input-events-2/\n  supportsInputEvents: (function() {\n    if (typeof InputEvent === \"undefined\") {\n      return false\n    }\n    for (const property of [ \"data\", \"getTargetRanges\", \"inputType\" ]) {\n      if (!(property in InputEvent.prototype)) {\n        return false\n      }\n    }\n    return true\n  })(),\n}\n","export default {\n  attachFiles: \"Attach Files\",\n  bold: \"Bold\",\n  bullets: \"Bullets\",\n  byte: \"Byte\",\n  bytes: \"Bytes\",\n  captionPlaceholder: \"Add a caption…\",\n  code: \"Code\",\n  heading1: \"Heading\",\n  indent: \"Increase Level\",\n  italic: \"Italic\",\n  link: \"Link\",\n  numbers: \"Numbers\",\n  outdent: \"Decrease Level\",\n  quote: \"Quote\",\n  redo: \"Redo\",\n  remove: \"Remove\",\n  strike: \"Strikethrough\",\n  undo: \"Undo\",\n  unlink: \"Unlink\",\n  url: \"URL\",\n  urlPlaceholder: \"Enter a URL…\",\n  GB: \"GB\",\n  KB: \"KB\",\n  MB: \"MB\",\n  PB: \"PB\",\n  TB: \"TB\",\n}\n","/* eslint-disable\n    no-case-declarations,\n*/\nimport lang from \"trix/config/lang\"\n\nconst sizes = [ lang.bytes, lang.KB, lang.MB, lang.GB, lang.TB, lang.PB ]\n\nexport default {\n  prefix: \"IEC\",\n  precision: 2,\n\n  formatter(number) {\n    switch (number) {\n      case 0:\n        return `0 ${lang.bytes}`\n      case 1:\n        return `1 ${lang.byte}`\n      default:\n        let base\n\n        if (this.prefix === \"SI\") {\n          base = 1000\n        } else if (this.prefix === \"IEC\") {\n          base = 1024\n        }\n\n        const exp = Math.floor(Math.log(number) / Math.log(base))\n        const humanSize = number / Math.pow(base, exp)\n        const string = humanSize.toFixed(this.precision)\n        const withoutInsignificantZeros = string.replace(/0*$/, \"\").replace(/\\.$/, \"\")\n        return `${withoutInsignificantZeros} ${sizes[exp]}`\n    }\n  },\n}\n","export const ZERO_WIDTH_SPACE = \"\\uFEFF\"\nexport const NON_BREAKING_SPACE = \"\\u00A0\"\nexport const OBJECT_REPLACEMENT_CHARACTER = \"\\uFFFC\"\n","export const extend = function(properties) {\n  for (const key in properties) {\n    const value = properties[key]\n    this[key] = value\n  }\n  return this\n}\n","import blockAttributes from \"trix/config/block_attributes\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { extend } from \"./extend\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nconst html = document.documentElement\nconst match = html.matches\n\nexport const handleEvent = function(eventName, { onElement, matchingSelector, withCallback, inPhase, preventDefault, times } = {}) {\n  const element = onElement ? onElement : html\n  const selector = matchingSelector\n  const useCapture = inPhase === \"capturing\"\n\n  const handler = function(event) {\n    if (times != null && --times === 0) {\n      handler.destroy()\n    }\n    const target = findClosestElementFromNode(event.target, { matchingSelector: selector })\n    if (target != null) {\n      withCallback?.call(target, event, target)\n      if (preventDefault) {\n        event.preventDefault()\n      }\n    }\n  }\n\n  handler.destroy = () => element.removeEventListener(eventName, handler, useCapture)\n\n  element.addEventListener(eventName, handler, useCapture)\n  return handler\n}\n\nexport const handleEventOnce = function(eventName, options = {}) {\n  options.times = 1\n  return handleEvent(eventName, options)\n}\n\nexport const triggerEvent = function(eventName, { onElement, bubbles, cancelable, attributes } = {}) {\n  const element = onElement != null ? onElement : html\n  bubbles = bubbles !== false\n  cancelable = cancelable !== false\n\n  const event = document.createEvent(\"Events\")\n  event.initEvent(eventName, bubbles, cancelable)\n  if (attributes != null) {\n    extend.call(event, attributes)\n  }\n  return element.dispatchEvent(event)\n}\n\nexport const elementMatchesSelector = function(element, selector) {\n  if (element?.nodeType === 1) {\n    return match.call(element, selector)\n  }\n}\n\nexport const findClosestElementFromNode = function(node, { matchingSelector, untilNode } = {}) {\n  while (node && node.nodeType !== Node.ELEMENT_NODE) {\n    node = node.parentNode\n  }\n  if (node == null) {\n    return\n  }\n\n  if (matchingSelector != null) {\n    if (node.closest && untilNode == null) {\n      return node.closest(matchingSelector)\n    } else {\n      while (node && node !== untilNode) {\n        if (elementMatchesSelector(node, matchingSelector)) {\n          return node\n        }\n        node = node.parentNode\n      }\n    }\n  } else {\n    return node\n  }\n}\n\nexport const findInnerElement = function(element) {\n  while (element?.firstElementChild) {\n    element = element.firstElementChild\n  }\n  return element\n}\n\nexport const innerElementIsActive = (element) =>\n  document.activeElement !== element && elementContainsNode(element, document.activeElement)\n\nexport const elementContainsNode = function(element, node) {\n  if (!element || !node) {\n    return\n  }\n  while (node) {\n    if (node === element) {\n      return true\n    }\n    node = node.parentNode\n  }\n}\n\nexport const findNodeFromContainerAndOffset = function(container, offset) {\n  if (!container) {\n    return\n  }\n  if (container.nodeType === Node.TEXT_NODE) {\n    return container\n  } else if (offset === 0) {\n    return container.firstChild != null ? container.firstChild : container\n  } else {\n    return container.childNodes.item(offset - 1)\n  }\n}\n\nexport const findElementFromContainerAndOffset = function(container, offset) {\n  const node = findNodeFromContainerAndOffset(container, offset)\n  return findClosestElementFromNode(node)\n}\n\nexport const findChildIndexOfNode = function(node) {\n  if (!node?.parentNode) {\n    return\n  }\n  let childIndex = 0\n  node = node.previousSibling\n  while (node) {\n    childIndex++\n    node = node.previousSibling\n  }\n  return childIndex\n}\n\nexport const removeNode = (node) => node?.parentNode?.removeChild(node)\n\nexport const walkTree = function(tree, { onlyNodesOfType, usingFilter, expandEntityReferences } = {}) {\n  const whatToShow = (() => {\n    switch (onlyNodesOfType) {\n      case \"element\":\n        return NodeFilter.SHOW_ELEMENT\n      case \"text\":\n        return NodeFilter.SHOW_TEXT\n      case \"comment\":\n        return NodeFilter.SHOW_COMMENT\n      default:\n        return NodeFilter.SHOW_ALL\n    }\n  })()\n\n  return document.createTreeWalker(\n    tree,\n    whatToShow,\n    usingFilter != null ? usingFilter : null,\n    expandEntityReferences === true\n  )\n}\n\nexport const tagName = (element) => element?.tagName?.toLowerCase()\n\nexport const makeElement = function(tag, options = {}) {\n  let key, value\n  if (typeof tag === \"object\") {\n    options = tag\n    tag = options.tagName\n  } else {\n    options = { attributes: options }\n  }\n\n  const element = document.createElement(tag)\n\n  if (options.editable != null) {\n    if (options.attributes == null) {\n      options.attributes = {}\n    }\n    options.attributes.contenteditable = options.editable\n  }\n\n  if (options.attributes) {\n    for (key in options.attributes) {\n      value = options.attributes[key]\n      element.setAttribute(key, value)\n    }\n  }\n\n  if (options.style) {\n    for (key in options.style) {\n      value = options.style[key]\n      element.style[key] = value\n    }\n  }\n\n  if (options.data) {\n    for (key in options.data) {\n      value = options.data[key]\n      element.dataset[key] = value\n    }\n  }\n\n  if (options.className) {\n    options.className.split(\" \").forEach((className) => {\n      element.classList.add(className)\n    })\n  }\n\n  if (options.textContent) {\n    element.textContent = options.textContent\n  }\n\n  if (options.childNodes) {\n    [].concat(options.childNodes).forEach((childNode) => {\n      element.appendChild(childNode)\n    })\n  }\n\n  return element\n}\n\nlet blockTagNames = undefined\n\nexport const getBlockTagNames = function() {\n  if (blockTagNames != null) {\n    return blockTagNames\n  }\n\n  blockTagNames = []\n  for (const key in blockAttributes) {\n    const attributes = blockAttributes[key]\n    if (attributes.tagName) {\n      blockTagNames.push(attributes.tagName)\n    }\n  }\n\n  return blockTagNames\n}\n\nexport const nodeIsBlockContainer = (node) => nodeIsBlockStartComment(node?.firstChild)\n\nexport const nodeProbablyIsBlockContainer = function(node) {\n  return getBlockTagNames().includes(tagName(node)) && !getBlockTagNames().includes(tagName(node.firstChild))\n}\n\nexport const nodeIsBlockStart = function(node, { strict } = { strict: true }) {\n  if (strict) {\n    return nodeIsBlockStartComment(node)\n  } else {\n    return (\n      nodeIsBlockStartComment(node) || !nodeIsBlockStartComment(node.firstChild) && nodeProbablyIsBlockContainer(node)\n    )\n  }\n}\n\nexport const nodeIsBlockStartComment = (node) => nodeIsCommentNode(node) && node?.data === \"block\"\n\nexport const nodeIsCommentNode = (node) => node?.nodeType === Node.COMMENT_NODE\n\nexport const nodeIsCursorTarget = function(node, { name } = {}) {\n  if (!node) {\n    return\n  }\n  if (nodeIsTextNode(node)) {\n    if (node.data === ZERO_WIDTH_SPACE) {\n      if (name) {\n        return node.parentNode.dataset.trixCursorTarget === name\n      } else {\n        return true\n      }\n    }\n  } else {\n    return nodeIsCursorTarget(node.firstChild)\n  }\n}\n\nexport const nodeIsAttachmentElement = (node) => elementMatchesSelector(node, attachmentSelector)\n\nexport const nodeIsEmptyTextNode = (node) => nodeIsTextNode(node) && node?.data === \"\"\n\nexport const nodeIsTextNode = (node) => node?.nodeType === Node.TEXT_NODE\n","export default {\n  8: \"backspace\",\n  9: \"tab\",\n  13: \"return\",\n  27: \"escape\",\n  37: \"left\",\n  39: \"right\",\n  46: \"delete\",\n  68: \"d\",\n  72: \"h\",\n  79: \"o\",\n}\n","import { attachmentSelector } from \"trix/config/attachments\"\n\nexport default {\n  bold: {\n    tagName: \"strong\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontWeight === \"bold\" || style.fontWeight >= 600\n    },\n  },\n  italic: {\n    tagName: \"em\",\n    inheritable: true,\n    parser(element) {\n      const style = window.getComputedStyle(element)\n      return style.fontStyle === \"italic\"\n    },\n  },\n  href: {\n    groupTagName: \"a\",\n    parser(element) {\n      const matchingSelector = `a:not(${attachmentSelector})`\n      const link = element.closest(matchingSelector)\n      if (link) {\n        return link.getAttribute(\"href\")\n      }\n    },\n  },\n  strike: {\n    tagName: \"del\",\n    inheritable: true,\n  },\n  frozen: {\n    style: { backgroundColor: \"highlight\" },\n  },\n}\n","const undoInterval = 5000\nexport default undoInterval\n","import attachments from \"trix/config/attachments\"\nimport blockAttributes from \"trix/config/block_attributes\"\nimport browser from \"trix/config/browser\"\nimport css from \"trix/config/css\"\nimport fileSize from \"trix/config/file_size_formatting\"\nimport input from \"trix/config/input\"\nimport keyNames from \"trix/config/key_names\"\nimport lang from \"trix/config/lang\"\nimport textAttributes from \"trix/config/text_attributes\"\nimport toolbar from \"trix/config/toolbar\"\nimport undoInterval from \"trix/config/undo_interval\"\n\nconst config = {\n  attachments,\n  blockAttributes,\n  browser,\n  css,\n  fileSize,\n  input,\n  keyNames,\n  lang,\n  textAttributes,\n  toolbar,\n  undoInterval,\n}\n\nexport default config\n","export default {\n  attachment: \"attachment\",\n  attachmentCaption: \"attachment__caption\",\n  attachmentCaptionEditor: \"attachment__caption-editor\",\n  attachmentMetadata: \"attachment__metadata\",\n  attachmentMetadataContainer: \"attachment__metadata-container\",\n  attachmentName: \"attachment__name\",\n  attachmentProgress: \"attachment__progress\",\n  attachmentSize: \"attachment__size\",\n  attachmentToolbar: \"attachment__toolbar\",\n  attachmentGallery: \"attachment-gallery\",\n}\n","import browser from \"trix/config/browser\"\nimport { makeElement, removeNode } from \"trix/core/helpers/dom\"\n\nconst input = {\n  level2Enabled: true,\n\n  getLevel() {\n    if (this.level2Enabled && browser.supportsInputEvents) {\n      return 2\n    } else {\n      return 0\n    }\n  },\n  pickFiles(callback) {\n    const input = makeElement(\"input\", { type: \"file\", multiple: true, hidden: true, id: this.fileInputId })\n\n    input.addEventListener(\"change\", () => {\n      callback(input.files)\n      removeNode(input)\n    })\n\n    removeNode(document.getElementById(this.fileInputId))\n    document.body.appendChild(input)\n    input.click()\n  }\n}\n\nexport default input\n","import lang from \"trix/config/lang\"\n\nexport default {\n  getDefaultHTML() {\n    return `<div class=\"trix-button-row\">\n      <span class=\"trix-button-group trix-button-group--text-tools\" data-trix-button-group=\"text-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bold\" data-trix-attribute=\"bold\" data-trix-key=\"b\" title=\"${lang.bold}\" tabindex=\"-1\">${lang.bold}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-italic\" data-trix-attribute=\"italic\" data-trix-key=\"i\" title=\"${lang.italic}\" tabindex=\"-1\">${lang.italic}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-strike\" data-trix-attribute=\"strike\" title=\"${lang.strike}\" tabindex=\"-1\">${lang.strike}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-link\" data-trix-attribute=\"href\" data-trix-action=\"link\" data-trix-key=\"k\" title=\"${lang.link}\" tabindex=\"-1\">${lang.link}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--block-tools\" data-trix-button-group=\"block-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-heading-1\" data-trix-attribute=\"heading1\" title=\"${lang.heading1}\" tabindex=\"-1\">${lang.heading1}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-quote\" data-trix-attribute=\"quote\" title=\"${lang.quote}\" tabindex=\"-1\">${lang.quote}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-code\" data-trix-attribute=\"code\" title=\"${lang.code}\" tabindex=\"-1\">${lang.code}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-bullet-list\" data-trix-attribute=\"bullet\" title=\"${lang.bullets}\" tabindex=\"-1\">${lang.bullets}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-number-list\" data-trix-attribute=\"number\" title=\"${lang.numbers}\" tabindex=\"-1\">${lang.numbers}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-decrease-nesting-level\" data-trix-action=\"decreaseNestingLevel\" title=\"${lang.outdent}\" tabindex=\"-1\">${lang.outdent}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-increase-nesting-level\" data-trix-action=\"increaseNestingLevel\" title=\"${lang.indent}\" tabindex=\"-1\">${lang.indent}</button>\n      </span>\n\n      <span class=\"trix-button-group trix-button-group--file-tools\" data-trix-button-group=\"file-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-attach\" data-trix-action=\"attachFiles\" title=\"${lang.attachFiles}\" tabindex=\"-1\">${lang.attachFiles}</button>\n      </span>\n\n      <span class=\"trix-button-group-spacer\"></span>\n\n      <span class=\"trix-button-group trix-button-group--history-tools\" data-trix-button-group=\"history-tools\">\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-undo\" data-trix-action=\"undo\" data-trix-key=\"z\" title=\"${lang.undo}\" tabindex=\"-1\">${lang.undo}</button>\n        <button type=\"button\" class=\"trix-button trix-button--icon trix-button--icon-redo\" data-trix-action=\"redo\" data-trix-key=\"shift+z\" title=\"${lang.redo}\" tabindex=\"-1\">${lang.redo}</button>\n      </span>\n    </div>\n\n    <div class=\"trix-dialogs\" data-trix-dialogs>\n      <div class=\"trix-dialog trix-dialog--link\" data-trix-dialog=\"href\" data-trix-dialog-attribute=\"href\">\n        <div class=\"trix-dialog__link-fields\">\n          <input type=\"url\" name=\"href\" class=\"trix-input trix-input--dialog\" placeholder=\"${lang.urlPlaceholder}\" aria-label=\"${lang.url}\" required data-trix-input>\n          <div class=\"trix-button-group\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.link}\" data-trix-method=\"setAttribute\">\n            <input type=\"button\" class=\"trix-button trix-button--dialog\" value=\"${lang.unlink}\" data-trix-method=\"removeAttribute\">\n          </div>\n        </div>\n      </div>\n    </div>`\n  },\n}\n","export default class BasicObject {\n  static proxyMethod(expression) {\n    const { name, toMethod, toProperty, optional } = parseProxyMethodExpression(expression)\n\n    this.prototype[name] = function() {\n      let subject\n      let object\n\n      if (toMethod) {\n        if (optional) {\n          object = this[toMethod]?.()\n        } else {\n          object = this[toMethod]()\n        }\n      } else if (toProperty) {\n        object = this[toProperty]\n      }\n\n      if (optional) {\n        subject = object?.[name]\n        if (subject) {\n          return apply.call(subject, object, arguments)\n        }\n      } else {\n        subject = object[name]\n        return apply.call(subject, object, arguments)\n      }\n    }\n  }\n}\n\nconst parseProxyMethodExpression = function(expression) {\n  const match = expression.match(proxyMethodExpressionPattern)\n  if (!match) {\n    throw new Error(`can't parse @proxyMethod expression: ${expression}`)\n  }\n\n  const args = { name: match[4] }\n\n  if (match[2] != null) {\n    args.toMethod = match[1]\n  } else {\n    args.toProperty = match[1]\n  }\n\n  if (match[3] != null) {\n    args.optional = true\n  }\n\n  return args\n}\n\nconst { apply } = Function.prototype\n\nconst proxyMethodExpressionPattern = new RegExp(\"\\\n^\\\n(.+?)\\\n(\\\\(\\\\))?\\\n(\\\\?)?\\\n\\\\.\\\n(.+?)\\\n$\\\n\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UTF16String extends BasicObject {\n  static box(value = \"\") {\n    if (value instanceof this) {\n      return value\n    } else {\n      return this.fromUCS2String(value?.toString())\n    }\n  }\n\n  static fromUCS2String(ucs2String) {\n    return new this(ucs2String, ucs2decode(ucs2String))\n  }\n\n  static fromCodepoints(codepoints) {\n    return new this(ucs2encode(codepoints), codepoints)\n  }\n\n  constructor(ucs2String, codepoints) {\n    super(...arguments)\n    this.ucs2String = ucs2String\n    this.codepoints = codepoints\n    this.length = this.codepoints.length\n    this.ucs2Length = this.ucs2String.length\n  }\n\n  offsetToUCS2Offset(offset) {\n    return ucs2encode(this.codepoints.slice(0, Math.max(0, offset))).length\n  }\n\n  offsetFromUCS2Offset(ucs2Offset) {\n    return ucs2decode(this.ucs2String.slice(0, Math.max(0, ucs2Offset))).length\n  }\n\n  slice() {\n    return this.constructor.fromCodepoints(this.codepoints.slice(...arguments))\n  }\n\n  charAt(offset) {\n    return this.slice(offset, offset + 1)\n  }\n\n  isEqualTo(value) {\n    return this.constructor.box(value).ucs2String === this.ucs2String\n  }\n\n  toJSON() {\n    return this.ucs2String\n  }\n\n  getCacheKey() {\n    return this.ucs2String\n  }\n\n  toString() {\n    return this.ucs2String\n  }\n}\n\nconst hasArrayFrom = Array.from?.(\"\\ud83d\\udc7c\").length === 1\nconst hasStringCodePointAt = \" \".codePointAt?.(0) != null\nconst hasStringFromCodePoint = String.fromCodePoint?.(32, 128124) === \" \\ud83d\\udc7c\"\n\n// UCS-2 conversion helpers ported from Mathias Bynens' Punycode.js:\n// https://github.com/bestiejs/punycode.js#punycodeucs2\n\nlet ucs2decode, ucs2encode\n\n// Creates an array containing the numeric code points of each Unicode\n// character in the string. While JavaScript uses UCS-2 internally,\n// this function will convert a pair of surrogate halves (each of which\n// UCS-2 exposes as separate characters) into a single code point,\n// matching UTF-16.\nif (hasArrayFrom && hasStringCodePointAt) {\n  ucs2decode = (string) => Array.from(string).map((char) => char.codePointAt(0))\n} else {\n  ucs2decode = function(string) {\n    const output = []\n    let counter = 0\n    const { length } = string\n\n    while (counter < length) {\n      let value = string.charCodeAt(counter++)\n      if (0xd800 <= value && value <= 0xdbff && counter < length) {\n        // high surrogate, and there is a next character\n        const extra = string.charCodeAt(counter++)\n        if ((extra & 0xfc00) === 0xdc00) {\n          // low surrogate\n          value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000\n        } else {\n          // unmatched surrogate; only append this code unit, in case the\n          // next code unit is the high surrogate of a surrogate pair\n          counter--\n        }\n      }\n      output.push(value)\n    }\n\n    return output\n  }\n}\n\n// Creates a string based on an array of numeric code points.\nif (hasStringFromCodePoint) {\n  ucs2encode = (array) => String.fromCodePoint(...Array.from(array || []))\n} else {\n  ucs2encode = function(array) {\n    const characters = (() => {\n      const result = []\n\n      Array.from(array).forEach((value) => {\n        let output = \"\"\n        if (value > 0xffff) {\n          value -= 0x10000\n          output += String.fromCharCode(value >>> 10 & 0x3ff | 0xd800)\n          value = 0xdc00 | value & 0x3ff\n        }\n        result.push(output + String.fromCharCode(value))\n      })\n\n      return result\n    })()\n\n    return characters.join(\"\")\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nlet id = 0\n\nexport default class TrixObject extends BasicObject {\n  static fromJSONString(jsonString) {\n    return this.fromJSON(JSON.parse(jsonString))\n  }\n\n  constructor() {\n    super(...arguments)\n    this.id = ++id\n  }\n\n  hasSameConstructorAs(object) {\n    return this.constructor === object?.constructor\n  }\n\n  isEqualTo(object) {\n    return this === object\n  }\n\n  inspect() {\n    const parts = []\n    const contents = this.contentsForInspection() || {}\n\n    for (const key in contents) {\n      const value = contents[key]\n      parts.push(`${key}=${value}`)\n    }\n\n    return `#<${this.constructor.name}:${this.id}${parts.length ? ` ${parts.join(\", \")}` : \"\"}>`\n  }\n\n  contentsForInspection() {}\n\n  toJSONString() {\n    return JSON.stringify(this)\n  }\n\n  toUTF16String() {\n    return UTF16String.box(this)\n  }\n\n  getCacheKey() {\n    return this.id.toString()\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nexport const arraysAreEqual = function(a = [], b = []) {\n  if (a.length !== b.length) {\n    return false\n  }\n  for (let index = 0; index < a.length; index++) {\n    const value = a[index]\n    if (value !== b[index]) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const arrayStartsWith = (a = [], b = []) => arraysAreEqual(a.slice(0, b.length), b)\n\nexport const spliceArray = function(array, ...args) {\n  const result = array.slice(0)\n  result.splice(...args)\n  return result\n}\n\nexport const summarizeArrayChange = function(oldArray = [], newArray = []) {\n  const added = []\n  const removed = []\n\n  const existingValues = new Set()\n\n  oldArray.forEach((value) => {\n    existingValues.add(value)\n  })\n\n  const currentValues = new Set()\n\n  newArray.forEach((value) => {\n    currentValues.add(value)\n    if (!existingValues.has(value)) {\n      added.push(value)\n    }\n  })\n\n  oldArray.forEach((value) => {\n    if (!currentValues.has(value)) {\n      removed.push(value)\n    }\n  })\n\n  return { added, removed }\n}\n","import { makeElement } from \"trix/core/helpers/dom\"\n\n// https://github.com/mathiasbynens/unicode-2.1.8/blob/master/Bidi_Class/Right_To_Left/regex.js\nconst RTL_PATTERN =\n  /[\\u05BE\\u05C0\\u05C3\\u05D0-\\u05EA\\u05F0-\\u05F4\\u061B\\u061F\\u0621-\\u063A\\u0640-\\u064A\\u066D\\u0671-\\u06B7\\u06BA-\\u06BE\\u06C0-\\u06CE\\u06D0-\\u06D5\\u06E5\\u06E6\\u200F\\u202B\\u202E\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE72\\uFE74\\uFE76-\\uFEFC]/\n\nexport const getDirection = (function() {\n  const input = makeElement(\"input\", { dir: \"auto\", name: \"x\", dirName: \"x.dir\" })\n  const form = makeElement(\"form\")\n  form.appendChild(input)\n\n  const supportsDirName = (function() {\n    try {\n      return new FormData(form).has(input.dirName)\n    } catch (error) {\n      return false\n    }\n  })()\n\n  const supportsDirSelector = (function() {\n    try {\n      return input.matches(\":dir(ltr),:dir(rtl)\")\n    } catch (error) {\n      return false\n    }\n  })()\n\n  if (supportsDirName) {\n    return function(string) {\n      input.value = string\n      return new FormData(form).get(input.dirName)\n    }\n  } else if (supportsDirSelector) {\n    return function(string) {\n      input.value = string\n      if (input.matches(\":dir(rtl)\")) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  } else {\n    return function(string) {\n      const char = string.trim().charAt(0)\n      if (RTL_PATTERN.test(char)) {\n        return \"rtl\"\n      } else {\n        return \"ltr\"\n      }\n    }\n  }\n})()\n","import config from \"trix/config\"\n\nlet allAttributeNames = null\nlet blockAttributeNames = null\nlet textAttributeNames = null\nlet listAttributeNames = null\n\nexport const getAllAttributeNames = () => {\n  if (!allAttributeNames) {\n    allAttributeNames = getTextAttributeNames().concat(getBlockAttributeNames())\n  }\n  return allAttributeNames\n}\n\nexport const getBlockConfig = (attributeName) => config.blockAttributes[attributeName]\n\nexport const getBlockAttributeNames = () => {\n  if (!blockAttributeNames) {\n    blockAttributeNames = Object.keys(config.blockAttributes)\n  }\n  return blockAttributeNames\n}\n\nexport const getTextConfig = (attributeName) => config.textAttributes[attributeName]\n\nexport const getTextAttributeNames = () => {\n  if (!textAttributeNames) {\n    textAttributeNames = Object.keys(config.textAttributes)\n  }\n  return textAttributeNames\n}\n\nexport const getListAttributeNames = () => {\n  if (!listAttributeNames) {\n    listAttributeNames = []\n    for (const key in config.blockAttributes) {\n      const { listAttribute } = config.blockAttributes[key]\n      if (listAttribute != null) {\n        listAttributeNames.push(listAttribute)\n      }\n    }\n  }\n  return listAttributeNames\n}\n","/* eslint-disable\n*/\nexport const installDefaultCSSForTagName = function(tagName, defaultCSS) {\n  const styleElement = insertStyleElementForTagName(tagName)\n  styleElement.textContent = defaultCSS.replace(/%t/g, tagName)\n}\n\nconst insertStyleElementForTagName = function(tagName) {\n  const element = document.createElement(\"style\")\n  element.setAttribute(\"type\", \"text/css\")\n  element.setAttribute(\"data-tag-name\", tagName.toLowerCase())\n  const nonce = getCSPNonce()\n  if (nonce) {\n    element.setAttribute(\"nonce\", nonce)\n  }\n  document.head.insertBefore(element, document.head.firstChild)\n  return element\n}\n\nconst getCSPNonce = function() {\n  const element = getMetaElement(\"trix-csp-nonce\") || getMetaElement(\"csp-nonce\")\n  if (element) {\n    return element.getAttribute(\"content\")\n  }\n}\n\nconst getMetaElement = (name) => document.head.querySelector(`meta[name=${name}]`)\n","const testTransferData = { \"application/x-trix-feature-detection\": \"test\" }\n\nexport const dataTransferIsPlainText = function(dataTransfer) {\n  const text = dataTransfer.getData(\"text/plain\")\n  const html = dataTransfer.getData(\"text/html\")\n\n  if (text && html) {\n    const { body } = new DOMParser().parseFromString(html, \"text/html\")\n    if (body.textContent === text) {\n      return !body.querySelector(\"*\")\n    }\n  } else {\n    return text?.length\n  }\n}\n\nexport const dataTransferIsWritable = function(dataTransfer) {\n  if (!dataTransfer?.setData) return false\n\n  for (const key in testTransferData) {\n    const value = testTransferData[key]\n\n    try {\n      dataTransfer.setData(key, value)\n      if (!dataTransfer.getData(key) === value) return false\n    } catch (error) {\n      return false\n    }\n  }\n  return true\n}\n\nexport const keyEventIsKeyboardCommand = (function() {\n  if (/Mac|^iP/.test(navigator.platform)) {\n    return (event) => event.metaKey\n  } else {\n    return (event) => event.ctrlKey\n  }\n})()\n","export const defer = (fn) => setTimeout(fn, 1)\n","/* eslint-disable\n    id-length,\n*/\nexport const copyObject = function(object = {}) {\n  const result = {}\n  for (const key in object) {\n    const value = object[key]\n    result[key] = value\n  }\n  return result\n}\n\nexport const objectsAreEqual = function(a = {}, b = {}) {\n  if (Object.keys(a).length !== Object.keys(b).length) {\n    return false\n  }\n  for (const key in a) {\n    const value = a[key]\n    if (value !== b[key]) {\n      return false\n    }\n  }\n  return true\n}\n","import { copyObject, objectsAreEqual } from \"trix/core/helpers/objects\"\n\nexport const normalizeRange = function(range) {\n  if (range == null) return\n\n  if (!Array.isArray(range)) {\n    range = [ range, range ]\n  }\n  return [ copyValue(range[0]), copyValue(range[1] != null ? range[1] : range[0]) ]\n}\n\nexport const rangeIsCollapsed = function(range) {\n  if (range == null) return\n\n  const [ start, end ] = normalizeRange(range)\n  return rangeValuesAreEqual(start, end)\n}\n\nexport const rangesAreEqual = function(leftRange, rightRange) {\n  if (leftRange == null || rightRange == null) return\n\n  const [ leftStart, leftEnd ] = normalizeRange(leftRange)\n  const [ rightStart, rightEnd ] = normalizeRange(rightRange)\n  return rangeValuesAreEqual(leftStart, rightStart) && rangeValuesAreEqual(leftEnd, rightEnd)\n}\n\nconst copyValue = function(value) {\n  if (typeof value === \"number\") {\n    return value\n  } else {\n    return copyObject(value)\n  }\n}\n\nconst rangeValuesAreEqual = function(left, right) {\n  if (typeof left === \"number\") {\n    return left === right\n  } else {\n    return objectsAreEqual(left, right)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class SelectionChangeObserver extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.update = this.update.bind(this)\n    this.run = this.run.bind(this)\n    this.selectionManagers = []\n  }\n\n  start() {\n    if (!this.started) {\n      this.started = true\n      if (\"onselectionchange\" in document) {\n        return document.addEventListener(\"selectionchange\", this.update, true)\n      } else {\n        return this.run()\n      }\n    }\n  }\n\n  stop() {\n    if (this.started) {\n      this.started = false\n      return document.removeEventListener(\"selectionchange\", this.update, true)\n    }\n  }\n\n  registerSelectionManager(selectionManager) {\n    if (!this.selectionManagers.includes(selectionManager)) {\n      this.selectionManagers.push(selectionManager)\n      return this.start()\n    }\n  }\n\n  unregisterSelectionManager(selectionManager) {\n    this.selectionManagers = this.selectionManagers.filter((s) => s !== selectionManager)\n    if (this.selectionManagers.length === 0) {\n      return this.stop()\n    }\n  }\n\n  notifySelectionManagersOfSelectionChange() {\n    return this.selectionManagers.map((selectionManager) => selectionManager.selectionDidChange())\n  }\n\n  update() {\n    const domRange = getDOMRange()\n    if (!domRangesAreEqual(domRange, this.domRange)) {\n      this.domRange = domRange\n      return this.notifySelectionManagersOfSelectionChange()\n    }\n  }\n\n  reset() {\n    this.domRange = null\n    return this.update()\n  }\n\n  // Private\n\n  run() {\n    if (this.started) {\n      this.update()\n      return requestAnimationFrame(this.run)\n    }\n  }\n}\n\nconst domRangesAreEqual = (left, right) =>\n  left?.startContainer === right?.startContainer &&\n  left?.startOffset === right?.startOffset &&\n  left?.endContainer === right?.endContainer &&\n  left?.endOffset === right?.endOffset\n\nexport const selectionChangeObserver = new SelectionChangeObserver()\n\nexport const getDOMSelection = function() {\n  const selection = window.getSelection()\n  if (selection.rangeCount > 0) {\n    return selection\n  }\n}\n\nexport const getDOMRange = function() {\n  const domRange = getDOMSelection()?.getRangeAt(0)\n  if (domRange) {\n    if (!domRangeIsPrivate(domRange)) {\n      return domRange\n    }\n  }\n}\n\nexport const setDOMRange = function(domRange) {\n  const selection = window.getSelection()\n  selection.removeAllRanges()\n  selection.addRange(domRange)\n  return selectionChangeObserver.update()\n}\n\n// In Firefox, clicking certain <input> elements changes the selection to a\n// private element used to draw its UI. Attempting to access properties of those\n// elements throws an error.\n// https://bugzilla.mozilla.org/show_bug.cgi?id=208427\nconst domRangeIsPrivate = (domRange) => nodeIsPrivate(domRange.startContainer) || nodeIsPrivate(domRange.endContainer)\n\nconst nodeIsPrivate = (node) => !Object.getPrototypeOf(node)\n","/* eslint-disable\n    id-length,\n    no-useless-escape,\n*/\nimport { NON_BREAKING_SPACE, ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\n\nexport const normalizeSpaces = (string) =>\n  string.replace(new RegExp(`${ZERO_WIDTH_SPACE}`, \"g\"), \"\").replace(new RegExp(`${NON_BREAKING_SPACE}`, \"g\"), \" \")\n\nexport const normalizeNewlines = (string) => string.replace(/\\r\\n/g, \"\\n\")\n\nexport const breakableWhitespacePattern = new RegExp(`[^\\\\S${NON_BREAKING_SPACE}]`)\n\nexport const squishBreakableWhitespace = (string) =>\n  string\n    // Replace all breakable whitespace characters with a space\n    .replace(new RegExp(`${breakableWhitespacePattern.source}`, \"g\"), \" \")\n    // Replace two or more spaces with a single space\n    .replace(/\\ {2,}/g, \" \")\n\nexport const summarizeStringChange = function(oldString, newString) {\n  let added, removed\n  oldString = UTF16String.box(oldString)\n  newString = UTF16String.box(newString)\n\n  if (newString.length < oldString.length) {\n    [ removed, added ] = utf16StringDifferences(oldString, newString)\n  } else {\n    [ added, removed ] = utf16StringDifferences(newString, oldString)\n  }\n\n  return { added, removed }\n}\n\nconst utf16StringDifferences = function(a, b) {\n  if (a.isEqualTo(b)) {\n    return [ \"\", \"\" ]\n  }\n\n  const diffA = utf16StringDifference(a, b)\n  const { length } = diffA.utf16String\n\n  let diffB\n\n  if (length) {\n    const { offset } = diffA\n    const codepoints = a.codepoints.slice(0, offset).concat(a.codepoints.slice(offset + length))\n    diffB = utf16StringDifference(b, UTF16String.fromCodepoints(codepoints))\n  } else {\n    diffB = utf16StringDifference(b, a)\n  }\n\n  return [ diffA.utf16String.toString(), diffB.utf16String.toString() ]\n}\n\nconst utf16StringDifference = function(a, b) {\n  let leftIndex = 0\n  let rightIndexA = a.length\n  let rightIndexB = b.length\n\n  while (leftIndex < rightIndexA && a.charAt(leftIndex).isEqualTo(b.charAt(leftIndex))) {\n    leftIndex++\n  }\n\n  while (rightIndexA > leftIndex + 1 && a.charAt(rightIndexA - 1).isEqualTo(b.charAt(rightIndexB - 1))) {\n    rightIndexA--\n    rightIndexB--\n  }\n\n  return {\n    utf16String: a.slice(leftIndex, rightIndexA),\n    offset: leftIndex,\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport { arraysAreEqual } from \"trix/core/helpers\"\n\nexport default class Hash extends TrixObject {\n  static fromCommonAttributesOfObjects(objects = []) {\n    if (!objects.length) {\n      return new this()\n    }\n    let hash = box(objects[0])\n    let keys = hash.getKeys()\n\n    objects.slice(1).forEach((object) => {\n      keys = hash.getKeysCommonToHash(box(object))\n      hash = hash.slice(keys)\n    })\n\n    return hash\n  }\n\n  static box(values) {\n    return box(values)\n  }\n\n  constructor(values = {}) {\n    super(...arguments)\n    this.values = copy(values)\n  }\n\n  add(key, value) {\n    return this.merge(object(key, value))\n  }\n\n  remove(key) {\n    return new Hash(copy(this.values, key))\n  }\n\n  get(key) {\n    return this.values[key]\n  }\n\n  has(key) {\n    return key in this.values\n  }\n\n  merge(values) {\n    return new Hash(merge(this.values, unbox(values)))\n  }\n\n  slice(keys) {\n    const values = {}\n\n    keys.forEach((key) => {\n      if (this.has(key)) {\n        values[key] = this.values[key]\n      }\n    })\n\n    return new Hash(values)\n  }\n\n  getKeys() {\n    return Object.keys(this.values)\n  }\n\n  getKeysCommonToHash(hash) {\n    hash = box(hash)\n    return this.getKeys().filter((key) => this.values[key] === hash.values[key])\n  }\n\n  isEqualTo(values) {\n    return arraysAreEqual(this.toArray(), box(values).toArray())\n  }\n\n  isEmpty() {\n    return this.getKeys().length === 0\n  }\n\n  toArray() {\n    if (!this.array) {\n      const result = []\n      for (const key in this.values) {\n        const value = this.values[key]\n        result.push(result.push(key, value))\n      }\n      this.array = result.slice(0)\n    }\n\n    return this.array\n  }\n\n  toObject() {\n    return copy(this.values)\n  }\n\n  toJSON() {\n    return this.toObject()\n  }\n\n  contentsForInspection() {\n    return { values: JSON.stringify(this.values) }\n  }\n}\n\nconst object = function(key, value) {\n  const result = {}\n  result[key] = value\n  return result\n}\n\nconst merge = function(object, values) {\n  const result = copy(object)\n  for (const key in values) {\n    const value = values[key]\n    result[key] = value\n  }\n  return result\n}\n\nconst copy = function(object, keyToRemove) {\n  const result = {}\n  const sortedKeys = Object.keys(object).sort()\n\n  sortedKeys.forEach((key) => {\n    if (key !== keyToRemove) {\n      result[key] = object[key]\n    }\n  })\n\n  return result\n}\n\nconst box = function(object) {\n  if (object instanceof Hash) {\n    return object\n  } else {\n    return new Hash(object)\n  }\n}\n\nconst unbox = function(object) {\n  if (object instanceof Hash) {\n    return object.values\n  } else {\n    return object\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class Operation extends BasicObject {\n  isPerforming() {\n    return this.performing === true\n  }\n\n  hasPerformed() {\n    return this.performed === true\n  }\n\n  hasSucceeded() {\n    return this.performed && this.succeeded\n  }\n\n  hasFailed() {\n    return this.performed && !this.succeeded\n  }\n\n  getPromise() {\n    if (!this.promise) {\n      this.promise = new Promise((resolve, reject) => {\n        this.performing = true\n        return this.perform((succeeded, result) => {\n          this.succeeded = succeeded\n          this.performing = false\n          this.performed = true\n\n          if (this.succeeded) {\n            resolve(result)\n          } else {\n            reject(result)\n          }\n        })\n      })\n    }\n\n    return this.promise\n  }\n\n  perform(callback) {\n    return callback(false)\n  }\n\n  release() {\n    this.promise?.cancel?.()\n    this.promise = null\n    this.performing = null\n    this.performed = null\n    this.succeeded = null\n  }\n}\n\nOperation.proxyMethod(\"getPromise().then\")\nOperation.proxyMethod(\"getPromise().catch\")\n","import Operation from \"trix/core/utilities/operation\"\n\nexport default class ImagePreloadOperation extends Operation {\n  constructor(url) {\n    super(...arguments)\n    this.url = url\n  }\n\n  perform(callback) {\n    const image = new Image()\n\n    image.onload = () => {\n      image.width = this.width = image.naturalWidth\n      image.height = this.height = image.naturalHeight\n      return callback(true, image)\n    }\n\n    image.onerror = () => callback(false)\n\n    image.src = this.url\n  }\n}\n","import config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\nimport ImagePreloadOperation from \"trix/operations/image_preload_operation\"\n\nexport default class Attachment extends TrixObject {\n  static previewablePattern = /^image(\\/(gif|png|jpe?g)|$)/\n\n  static attachmentForFile(file) {\n    const attributes = this.attributesForFile(file)\n    const attachment = new this(attributes)\n    attachment.setFile(file)\n    return attachment\n  }\n\n  static attributesForFile(file) {\n    return new Hash({\n      filename: file.name,\n      filesize: file.size,\n      contentType: file.type,\n    })\n  }\n\n  static fromJSON(attachmentJSON) {\n    return new this(attachmentJSON)\n  }\n\n  constructor(attributes = {}) {\n    super(attributes)\n    this.releaseFile = this.releaseFile.bind(this)\n    this.attributes = Hash.box(attributes)\n    this.didChangeAttributes()\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  setAttributes(attributes = {}) {\n    const newAttributes = this.attributes.merge(attributes)\n    if (!this.attributes.isEqualTo(newAttributes)) {\n      this.attributes = newAttributes\n      this.didChangeAttributes()\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangeAttributes?.(this)\n    }\n  }\n\n  didChangeAttributes() {\n    if (this.isPreviewable()) {\n      return this.preloadURL()\n    }\n  }\n\n  isPending() {\n    return this.file != null && !(this.getURL() || this.getHref())\n  }\n\n  isPreviewable() {\n    if (this.attributes.has(\"previewable\")) {\n      return this.attributes.get(\"previewable\")\n    } else {\n      return Attachment.previewablePattern.test(this.getContentType())\n    }\n  }\n\n  getType() {\n    if (this.hasContent()) {\n      return \"content\"\n    } else if (this.isPreviewable()) {\n      return \"preview\"\n    } else {\n      return \"file\"\n    }\n  }\n\n  getURL() {\n    return this.attributes.get(\"url\")\n  }\n\n  getHref() {\n    return this.attributes.get(\"href\")\n  }\n\n  getFilename() {\n    return this.attributes.get(\"filename\") || \"\"\n  }\n\n  getFilesize() {\n    return this.attributes.get(\"filesize\")\n  }\n\n  getFormattedFilesize() {\n    const filesize = this.attributes.get(\"filesize\")\n    if (typeof filesize === \"number\") {\n      return config.fileSize.formatter(filesize)\n    } else {\n      return \"\"\n    }\n  }\n\n  getExtension() {\n    return this.getFilename()\n      .match(/\\.(\\w+)$/)?.[1]\n      .toLowerCase()\n  }\n\n  getContentType() {\n    return this.attributes.get(\"contentType\")\n  }\n\n  hasContent() {\n    return this.attributes.has(\"content\")\n  }\n\n  getContent() {\n    return this.attributes.get(\"content\")\n  }\n\n  getWidth() {\n    return this.attributes.get(\"width\")\n  }\n\n  getHeight() {\n    return this.attributes.get(\"height\")\n  }\n\n  getFile() {\n    return this.file\n  }\n\n  setFile(file) {\n    this.file = file\n    if (this.isPreviewable()) {\n      return this.preloadFile()\n    }\n  }\n\n  releaseFile() {\n    this.releasePreloadedFile()\n    this.file = null\n  }\n\n  getUploadProgress() {\n    return this.uploadProgress != null ? this.uploadProgress : 0\n  }\n\n  setUploadProgress(value) {\n    if (this.uploadProgress !== value) {\n      this.uploadProgress = value\n      return this.uploadProgressDelegate?.attachmentDidChangeUploadProgress?.(this)\n    }\n  }\n\n  toJSON() {\n    return this.getAttributes()\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attributes.getCacheKey(), this.getPreviewURL() ].join(\"/\")\n  }\n\n  // Previewable\n\n  getPreviewURL() {\n    return this.previewURL || this.preloadingURL\n  }\n\n  setPreviewURL(url) {\n    if (url !== this.getPreviewURL()) {\n      this.previewURL = url\n      this.previewDelegate?.attachmentDidChangeAttributes?.(this)\n      return this.delegate?.attachmentDidChangePreviewURL?.(this)\n    }\n  }\n\n  preloadURL() {\n    return this.preload(this.getURL(), this.releaseFile)\n  }\n\n  preloadFile() {\n    if (this.file) {\n      this.fileObjectURL = URL.createObjectURL(this.file)\n      return this.preload(this.fileObjectURL)\n    }\n  }\n\n  releasePreloadedFile() {\n    if (this.fileObjectURL) {\n      URL.revokeObjectURL(this.fileObjectURL)\n      this.fileObjectURL = null\n    }\n  }\n\n  preload(url, callback) {\n    if (url && url !== this.getPreviewURL()) {\n      this.preloadingURL = url\n      const operation = new ImagePreloadOperation(url)\n      return operation\n        .then(({ width, height }) => {\n          if (!this.getWidth() || !this.getHeight()) {\n            this.setAttributes({ width, height })\n          }\n          this.preloadingURL = null\n          this.setPreviewURL(url)\n          return callback?.()\n        })\n        .catch(() => {\n          this.preloadingURL = null\n          return callback?.()\n        })\n    }\n  }\n}\n","import \"trix/models/attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class ManagedAttachment extends BasicObject {\n  constructor(attachmentManager, attachment) {\n    super(...arguments)\n    this.attachmentManager = attachmentManager\n    this.attachment = attachment\n    this.id = this.attachment.id\n    this.file = this.attachment.file\n  }\n\n  remove() {\n    return this.attachmentManager.requestRemovalOfAttachment(this.attachment)\n  }\n}\n\nManagedAttachment.proxyMethod(\"attachment.getAttribute\")\nManagedAttachment.proxyMethod(\"attachment.hasAttribute\")\nManagedAttachment.proxyMethod(\"attachment.setAttribute\")\nManagedAttachment.proxyMethod(\"attachment.getAttributes\")\nManagedAttachment.proxyMethod(\"attachment.setAttributes\")\nManagedAttachment.proxyMethod(\"attachment.isPending\")\nManagedAttachment.proxyMethod(\"attachment.isPreviewable\")\nManagedAttachment.proxyMethod(\"attachment.getURL\")\nManagedAttachment.proxyMethod(\"attachment.getHref\")\nManagedAttachment.proxyMethod(\"attachment.getFilename\")\nManagedAttachment.proxyMethod(\"attachment.getFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getFormattedFilesize\")\nManagedAttachment.proxyMethod(\"attachment.getExtension\")\nManagedAttachment.proxyMethod(\"attachment.getContentType\")\nManagedAttachment.proxyMethod(\"attachment.getFile\")\nManagedAttachment.proxyMethod(\"attachment.setFile\")\nManagedAttachment.proxyMethod(\"attachment.releaseFile\")\nManagedAttachment.proxyMethod(\"attachment.getUploadProgress\")\nManagedAttachment.proxyMethod(\"attachment.setUploadProgress\")\n\n","import ManagedAttachment from \"trix/models/managed_attachment\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class AttachmentManager extends BasicObject {\n  constructor(attachments = []) {\n    super(...arguments)\n    this.managedAttachments = {}\n    Array.from(attachments).forEach((attachment) => {\n      this.manageAttachment(attachment)\n    })\n  }\n\n  getAttachments() {\n    const result = []\n    for (const id in this.managedAttachments) {\n      const attachment = this.managedAttachments[id]\n      result.push(attachment)\n    }\n    return result\n  }\n\n  manageAttachment(attachment) {\n    if (!this.managedAttachments[attachment.id]) {\n      this.managedAttachments[attachment.id] = new ManagedAttachment(this, attachment)\n    }\n    return this.managedAttachments[attachment.id]\n  }\n\n  attachmentIsManaged(attachment) {\n    return attachment.id in this.managedAttachments\n  }\n\n  requestRemovalOfAttachment(attachment) {\n    if (this.attachmentIsManaged(attachment)) {\n      return this.delegate?.attachmentManagerDidRequestRemovalOfAttachment?.(attachment)\n    }\n  }\n\n  unmanageAttachment(attachment) {\n    const managedAttachment = this.managedAttachments[attachment.id]\n    delete this.managedAttachments[attachment.id]\n    return managedAttachment\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Piece extends TrixObject {\n  static types = {}\n\n  static registerType(type, constructor) {\n    constructor.type = type\n    this.types[type] = constructor\n  }\n\n  static fromJSON(pieceJSON) {\n    const constructor = this.types[pieceJSON.type]\n    if (constructor) {\n      return constructor.fromJSON(pieceJSON)\n    }\n  }\n\n  constructor(value, attributes = {}) {\n    super(...arguments)\n    this.attributes = Hash.box(attributes)\n  }\n\n  copyWithAttributes(attributes) {\n    return new this.constructor(this.getValue(), attributes)\n  }\n\n  copyWithAdditionalAttributes(attributes) {\n    return this.copyWithAttributes(this.attributes.merge(attributes))\n  }\n\n  copyWithoutAttribute(attribute) {\n    return this.copyWithAttributes(this.attributes.remove(attribute))\n  }\n\n  copy() {\n    return this.copyWithAttributes(this.attributes)\n  }\n\n  getAttribute(attribute) {\n    return this.attributes.get(attribute)\n  }\n\n  getAttributesHash() {\n    return this.attributes\n  }\n\n  getAttributes() {\n    return this.attributes.toObject()\n  }\n\n  hasAttribute(attribute) {\n    return this.attributes.has(attribute)\n  }\n\n  hasSameStringValueAsPiece(piece) {\n    return piece && this.toString() === piece.toString()\n  }\n\n  hasSameAttributesAsPiece(piece) {\n    return piece && (this.attributes === piece.attributes || this.attributes.isEqualTo(piece.attributes))\n  }\n\n  isBlockBreak() {\n    return false\n  }\n\n  isEqualTo(piece) {\n    return (\n      super.isEqualTo(...arguments) ||\n      this.hasSameConstructorAs(piece) &&\n        this.hasSameStringValueAsPiece(piece) &&\n        this.hasSameAttributesAsPiece(piece)\n    )\n  }\n\n  isEmpty() {\n    return this.length === 0\n  }\n\n  isSerializable() {\n    return true\n  }\n\n  toJSON() {\n    return {\n      type: this.constructor.type,\n      attributes: this.getAttributes(),\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      type: this.constructor.type,\n      attributes: this.attributes.inspect(),\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped() {\n    return this.hasAttribute(\"href\")\n  }\n\n  canBeGroupedWith(piece) {\n    return this.getAttribute(\"href\") === piece.getAttribute(\"href\")\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.length\n  }\n\n  canBeConsolidatedWith(piece) {\n    return false\n  }\n}\n","import { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport Attachment from \"trix/models/attachment\"\nimport Piece from \"trix/models/piece\"\n\nexport default class AttachmentPiece extends Piece {\n  static permittedAttributes = [ \"caption\", \"presentation\" ]\n\n  static fromJSON(pieceJSON) {\n    return new this(Attachment.fromJSON(pieceJSON.attachment), pieceJSON.attributes)\n  }\n\n  constructor(attachment) {\n    super(...arguments)\n    this.attachment = attachment\n    this.length = 1\n    this.ensureAttachmentExclusivelyHasAttribute(\"href\")\n    if (!this.attachment.hasContent()) {\n      this.removeProhibitedAttributes()\n    }\n  }\n\n  ensureAttachmentExclusivelyHasAttribute(attribute) {\n    if (this.hasAttribute(attribute)) {\n      if (!this.attachment.hasAttribute(attribute)) {\n        this.attachment.setAttributes(this.attributes.slice(attribute))\n      }\n      this.attributes = this.attributes.remove(attribute)\n    }\n  }\n\n  removeProhibitedAttributes() {\n    const attributes = this.attributes.slice(AttachmentPiece.permittedAttributes)\n    if (!attributes.isEqualTo(this.attributes)) {\n      this.attributes = attributes\n    }\n  }\n\n  getValue() {\n    return this.attachment\n  }\n\n  isSerializable() {\n    return !this.attachment.isPending()\n  }\n\n  getCaption() {\n    return this.attributes.get(\"caption\") || \"\"\n  }\n\n  isEqualTo(piece) {\n    return super.isEqualTo(piece) && this.attachment.id === piece?.attachment?.id\n  }\n\n  toString() {\n    return OBJECT_REPLACEMENT_CHARACTER\n  }\n\n  toJSON() {\n    const json = super.toJSON(...arguments)\n    json.attachment = this.attachment\n    return json\n  }\n\n  getCacheKey() {\n    return [ super.getCacheKey(...arguments), this.attachment.getCacheKey() ].join(\"/\")\n  }\n\n  toConsole() {\n    return JSON.stringify(this.toString())\n  }\n}\n\nPiece.registerType(\"attachment\", AttachmentPiece)\n","import Piece from \"trix/models/piece\"\n\nimport { normalizeNewlines } from \"trix/core/helpers\"\n\nexport default class StringPiece extends Piece {\n  static fromJSON(pieceJSON) {\n    return new this(pieceJSON.string, pieceJSON.attributes)\n  }\n\n  constructor(string) {\n    super(...arguments)\n    this.string = normalizeNewlines(string)\n    this.length = this.string.length\n  }\n\n  getValue() {\n    return this.string\n  }\n\n  toString() {\n    return this.string.toString()\n  }\n\n  isBlockBreak() {\n    return this.toString() === \"\\n\" && this.getAttribute(\"blockBreak\") === true\n  }\n\n  toJSON() {\n    const result = super.toJSON(...arguments)\n    result.string = this.string\n    return result\n  }\n\n  // Splittable\n\n  canBeConsolidatedWith(piece) {\n    return piece && this.hasSameConstructorAs(piece) && this.hasSameAttributesAsPiece(piece)\n  }\n\n  consolidateWith(piece) {\n    return new this.constructor(this.toString() + piece.toString(), this.attributes)\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.length) {\n      left = this\n      right = null\n    } else {\n      left = new this.constructor(this.string.slice(0, offset), this.attributes)\n      right = new this.constructor(this.string.slice(offset), this.attributes)\n    }\n    return [ left, right ]\n  }\n\n  toConsole() {\n    let { string } = this\n    if (string.length > 15) {\n      string = string.slice(0, 14) + \"…\"\n    }\n    return JSON.stringify(string.toString())\n  }\n}\n\nPiece.registerType(\"string\", StringPiece)\n","/* eslint-disable\n    prefer-const,\n*/\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { spliceArray } from \"trix/core/helpers\"\n\nexport default class SplittableList extends TrixObject {\n  static box(objects) {\n    if (objects instanceof this) {\n      return objects\n    } else {\n      return new this(objects)\n    }\n  }\n\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = objects.slice(0)\n    this.length = this.objects.length\n  }\n\n  indexOf(object) {\n    return this.objects.indexOf(object)\n  }\n\n  splice(...args) {\n    return new this.constructor(spliceArray(this.objects, ...args))\n  }\n\n  eachObject(callback) {\n    return this.objects.map((object, index) => callback(object, index))\n  }\n\n  insertObjectAtIndex(object, index) {\n    return this.splice(index, 0, object)\n  }\n\n  insertSplittableListAtIndex(splittableList, index) {\n    return this.splice(index, 0, ...splittableList.objects)\n  }\n\n  insertSplittableListAtPosition(splittableList, position) {\n    const [ objects, index ] = this.splitObjectAtPosition(position)\n    return new this.constructor(objects).insertSplittableListAtIndex(splittableList, index)\n  }\n\n  editObjectAtIndex(index, callback) {\n    return this.replaceObjectAtIndex(callback(this.objects[index]), index)\n  }\n\n  replaceObjectAtIndex(object, index) {\n    return this.splice(index, 1, object)\n  }\n\n  removeObjectAtIndex(index) {\n    return this.splice(index, 1)\n  }\n\n  getObjectAtIndex(index) {\n    return this.objects[index]\n  }\n\n  getSplittableListInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects.slice(leftIndex, rightIndex + 1))\n  }\n\n  selectSplittableList(test) {\n    const objects = this.objects.filter((object) => test(object))\n    return new this.constructor(objects)\n  }\n\n  removeObjectsInRange(range) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    return new this.constructor(objects).splice(leftIndex, rightIndex - leftIndex + 1)\n  }\n\n  transformObjectsInRange(range, transform) {\n    const [ objects, leftIndex, rightIndex ] = this.splitObjectsAtRange(range)\n    const transformedObjects = objects.map((object, index) =>\n      leftIndex <= index && index <= rightIndex ? transform(object) : object\n    )\n    return new this.constructor(transformedObjects)\n  }\n\n  splitObjectsAtRange(range) {\n    let rightOuterIndex\n    let [ objects, leftInnerIndex, offset ] = this.splitObjectAtPosition(startOfRange(range))\n    ;[ objects, rightOuterIndex ] = new this.constructor(objects).splitObjectAtPosition(endOfRange(range) + offset)\n\n    return [ objects, leftInnerIndex, rightOuterIndex - 1 ]\n  }\n\n  getObjectAtPosition(position) {\n    const { index } = this.findIndexAndOffsetAtPosition(position)\n    return this.objects[index]\n  }\n\n  splitObjectAtPosition(position) {\n    let splitIndex, splitOffset\n    const { index, offset } = this.findIndexAndOffsetAtPosition(position)\n    const objects = this.objects.slice(0)\n    if (index != null) {\n      if (offset === 0) {\n        splitIndex = index\n        splitOffset = 0\n      } else {\n        const object = this.getObjectAtIndex(index)\n        const [ leftObject, rightObject ] = object.splitAtOffset(offset)\n        objects.splice(index, 1, leftObject, rightObject)\n        splitIndex = index + 1\n        splitOffset = leftObject.getLength() - offset\n      }\n    } else {\n      splitIndex = objects.length\n      splitOffset = 0\n    }\n\n    return [ objects, splitIndex, splitOffset ]\n  }\n\n  consolidate() {\n    const objects = []\n    let pendingObject = this.objects[0]\n\n    this.objects.slice(1).forEach((object) => {\n      if (pendingObject.canBeConsolidatedWith?.(object)) {\n        pendingObject = pendingObject.consolidateWith(object)\n      } else {\n        objects.push(pendingObject)\n        pendingObject = object\n      }\n    })\n\n    if (pendingObject) {\n      objects.push(pendingObject)\n    }\n\n    return new this.constructor(objects)\n  }\n\n  consolidateFromIndexToIndex(startIndex, endIndex) {\n    const objects = this.objects.slice(0)\n    const objectsInRange = objects.slice(startIndex, endIndex + 1)\n    const consolidatedInRange = new this.constructor(objectsInRange).consolidate().toArray()\n    return this.splice(startIndex, objectsInRange.length, ...consolidatedInRange)\n  }\n\n  findIndexAndOffsetAtPosition(position) {\n    let index\n    let currentPosition = 0\n    for (index = 0; index < this.objects.length; index++) {\n      const object = this.objects[index]\n      const nextPosition = currentPosition + object.getLength()\n      if (currentPosition <= position && position < nextPosition) {\n        return { index, offset: position - currentPosition }\n      }\n      currentPosition = nextPosition\n    }\n    return { index: null, offset: null }\n  }\n\n  findPositionAtIndexAndOffset(index, offset) {\n    let position = 0\n    for (let currentIndex = 0; currentIndex < this.objects.length; currentIndex++) {\n      const object = this.objects[currentIndex]\n      if (currentIndex < index) {\n        position += object.getLength()\n      } else if (currentIndex === index) {\n        position += offset\n        break\n      }\n    }\n    return position\n  }\n\n  getEndPosition() {\n    if (this.endPosition == null) {\n      this.endPosition = 0\n      this.objects.forEach((object) => this.endPosition += object.getLength())\n    }\n\n    return this.endPosition\n  }\n\n  toString() {\n    return this.objects.join(\"\")\n  }\n\n  toArray() {\n    return this.objects.slice(0)\n  }\n\n  toJSON() {\n    return this.toArray()\n  }\n\n  isEqualTo(splittableList) {\n    return super.isEqualTo(...arguments) || objectArraysAreEqual(this.objects, splittableList?.objects)\n  }\n\n  contentsForInspection() {\n    return {\n      objects: `[${this.objects.map((object) => object.inspect()).join(\", \")}]`,\n    }\n  }\n}\n\nconst objectArraysAreEqual = function(left, right = []) {\n  if (left.length !== right.length) {\n    return false\n  }\n  let result = true\n  for (let index = 0; index < left.length; index++) {\n    const object = left[index]\n    if (result && !object.isEqualTo(right[index])) {\n      result = false\n    }\n  }\n  return result\n}\n\nconst startOfRange = (range) => range[0]\n\nconst endOfRange = (range) => range[1]\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport { getDirection } from \"trix/core/helpers\"\n\nimport Piece from \"trix/models/piece\"\nimport AttachmentPiece from \"trix/models/attachment_piece\"\nimport StringPiece from \"trix/models/string_piece\"\nimport SplittableList from \"trix/models/splittable_list\"\n\nimport Hash from \"trix/core/collections/hash\"\n\nexport default class Text extends TrixObject {\n  static textForAttachmentWithAttributes(attachment, attributes) {\n    const piece = new AttachmentPiece(attachment, attributes)\n    return new this([ piece ])\n  }\n\n  static textForStringWithAttributes(string, attributes) {\n    const piece = new StringPiece(string, attributes)\n    return new this([ piece ])\n  }\n\n  static fromJSON(textJSON) {\n    const pieces = Array.from(textJSON).map((pieceJSON) => Piece.fromJSON(pieceJSON))\n    return new this(pieces)\n  }\n\n  constructor(pieces = []) {\n    super(...arguments)\n    const notEmpty = pieces.filter((piece) => !piece.isEmpty())\n    this.pieceList = new SplittableList(notEmpty)\n  }\n\n  copy() {\n    return this.copyWithPieceList(this.pieceList)\n  }\n\n  copyWithPieceList(pieceList) {\n    return new this.constructor(pieceList.consolidate().toArray())\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const pieces = this.getPieces().map((piece) => objectMap.find(piece) || piece)\n    return new this.constructor(pieces)\n  }\n\n  appendText(text) {\n    return this.insertTextAtPosition(text, this.getLength())\n  }\n\n  insertTextAtPosition(text, position) {\n    return this.copyWithPieceList(this.pieceList.insertSplittableListAtPosition(text.pieceList, position))\n  }\n\n  removeTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.removeObjectsInRange(range))\n  }\n\n  replaceTextAtRange(text, range) {\n    return this.removeTextAtRange(range).insertTextAtPosition(text, range[0])\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    if (range[0] <= position && position <= range[1]) return\n    const text = this.getTextAtRange(range)\n    const length = text.getLength()\n    if (range[0] < position) {\n      position -= length\n    }\n    return this.removeTextAtRange(range).insertTextAtPosition(text, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    const attributes = {}\n    attributes[attribute] = value\n    return this.addAttributesAtRange(attributes, range)\n  }\n\n  addAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAdditionalAttributes(attributes))\n    )\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithoutAttribute(attribute))\n    )\n  }\n\n  setAttributesAtRange(attributes, range) {\n    return this.copyWithPieceList(\n      this.pieceList.transformObjectsInRange(range, (piece) => piece.copyWithAttributes(attributes))\n    )\n  }\n\n  getAttributesAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)?.getAttributes() || {}\n  }\n\n  getCommonAttributes() {\n    const objects = Array.from(this.pieceList.toArray()).map((piece) => piece.getAttributes())\n    return Hash.fromCommonAttributesOfObjects(objects).toObject()\n  }\n\n  getCommonAttributesAtRange(range) {\n    return this.getTextAtRange(range).getCommonAttributes() || {}\n  }\n\n  getExpandedRangeForAttributeAtOffset(attributeName, offset) {\n    let right\n    let left = right = offset\n    const length = this.getLength()\n\n    while (left > 0 && this.getCommonAttributesAtRange([ left - 1, right ])[attributeName]) {\n      left--\n    }\n    while (right < length && this.getCommonAttributesAtRange([ offset, right + 1 ])[attributeName]) {\n      right++\n    }\n\n    return [ left, right ]\n  }\n\n  getTextAtRange(range) {\n    return this.copyWithPieceList(this.pieceList.getSplittableListInRange(range))\n  }\n\n  getStringAtRange(range) {\n    return this.pieceList.getSplittableListInRange(range).toString()\n  }\n\n  getStringAtPosition(position) {\n    return this.getStringAtRange([ position, position + 1 ])\n  }\n\n  startsWithString(string) {\n    return this.getStringAtRange([ 0, string.length ]) === string\n  }\n\n  endsWithString(string) {\n    const length = this.getLength()\n    return this.getStringAtRange([ length - string.length, length ]) === string\n  }\n\n  getAttachmentPieces() {\n    return this.pieceList.toArray().filter((piece) => !!piece.attachment)\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getAttachmentAndPositionById(attachmentId) {\n    let position = 0\n    for (const piece of this.pieceList.toArray()) {\n      if (piece.attachment?.id === attachmentId) {\n        return { attachment: piece.attachment, position }\n      }\n      position += piece.length\n    }\n    return { attachment: null, position: null }\n  }\n\n  getAttachmentById(attachmentId) {\n    const { attachment } = this.getAttachmentAndPositionById(attachmentId)\n    return attachment\n  }\n\n  getRangeOfAttachment(attachment) {\n    const attachmentAndPosition = this.getAttachmentAndPositionById(attachment.id)\n    const position = attachmentAndPosition.position\n    attachment = attachmentAndPosition.attachment\n    if (attachment) {\n      return [ position, position + 1 ]\n    }\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    if (range) {\n      return this.addAttributesAtRange(attributes, range)\n    } else {\n      return this\n    }\n  }\n\n  getLength() {\n    return this.pieceList.getEndPosition()\n  }\n\n  isEmpty() {\n    return this.getLength() === 0\n  }\n\n  isEqualTo(text) {\n    return super.isEqualTo(text) || text?.pieceList?.isEqualTo(this.pieceList)\n  }\n\n  isBlockBreak() {\n    return this.getLength() === 1 && this.pieceList.getObjectAtIndex(0).isBlockBreak()\n  }\n\n  eachPiece(callback) {\n    return this.pieceList.eachObject(callback)\n  }\n\n  getPieces() {\n    return this.pieceList.toArray()\n  }\n\n  getPieceAtPosition(position) {\n    return this.pieceList.getObjectAtPosition(position)\n  }\n\n  contentsForInspection() {\n    return { pieceList: this.pieceList.inspect() }\n  }\n\n  toSerializableText() {\n    const pieceList = this.pieceList.selectSplittableList((piece) => piece.isSerializable())\n    return this.copyWithPieceList(pieceList)\n  }\n\n  toString() {\n    return this.pieceList.toString()\n  }\n\n  toJSON() {\n    return this.pieceList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.pieceList.toArray().map((piece) => JSON.parse(piece.toConsole())))\n  }\n\n  // BIDI\n\n  getDirection() {\n    return getDirection(this.toString())\n  }\n\n  isRTL() {\n    return this.getDirection() === \"rtl\"\n  }\n}\n","import TrixObject from \"trix/core/object\" // Don't override window.Object\nimport Text from \"trix/models/text\"\n\nimport {\n  arraysAreEqual,\n  getBlockConfig,\n  getListAttributeNames,\n  spliceArray,\n} from \"trix/core/helpers\"\n\nexport default class Block extends TrixObject {\n  static fromJSON(blockJSON) {\n    const text = Text.fromJSON(blockJSON.text)\n    return new this(text, blockJSON.attributes)\n  }\n\n  constructor(text, attributes) {\n    super(...arguments)\n    this.text = applyBlockBreakToText(text || new Text())\n    this.attributes = attributes || []\n  }\n\n  isEmpty() {\n    return this.text.isBlockBreak()\n  }\n\n  isEqualTo(block) {\n    if (super.isEqualTo(block)) return true\n\n    return this.text.isEqualTo(block?.text) && arraysAreEqual(this.attributes, block?.attributes)\n  }\n\n  copyWithText(text) {\n    return new Block(text, this.attributes)\n  }\n\n  copyWithoutText() {\n    return this.copyWithText(null)\n  }\n\n  copyWithAttributes(attributes) {\n    return new Block(this.text, attributes)\n  }\n\n  copyWithoutAttributes() {\n    return this.copyWithAttributes(null)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const mappedText = objectMap.find(this.text)\n    if (mappedText) {\n      return this.copyWithText(mappedText)\n    } else {\n      return this.copyWithText(this.text.copyUsingObjectMap(objectMap))\n    }\n  }\n\n  addAttribute(attribute) {\n    const attributes = this.attributes.concat(expandAttribute(attribute))\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeAttribute(attribute) {\n    const { listAttribute } = getBlockConfig(attribute)\n    const attributes = removeLastValue(removeLastValue(this.attributes, attribute), listAttribute)\n    return this.copyWithAttributes(attributes)\n  }\n\n  removeLastAttribute() {\n    return this.removeAttribute(this.getLastAttribute())\n  }\n\n  getLastAttribute() {\n    return getLastElement(this.attributes)\n  }\n\n  getAttributes() {\n    return this.attributes.slice(0)\n  }\n\n  getAttributeLevel() {\n    return this.attributes.length\n  }\n\n  getAttributeAtLevel(level) {\n    return this.attributes[level - 1]\n  }\n\n  hasAttribute(attributeName) {\n    return this.attributes.includes(attributeName)\n  }\n\n  hasAttributes() {\n    return this.getAttributeLevel() > 0\n  }\n\n  getLastNestableAttribute() {\n    return getLastElement(this.getNestableAttributes())\n  }\n\n  getNestableAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).nestable)\n  }\n\n  getNestingLevel() {\n    return this.getNestableAttributes().length\n  }\n\n  decreaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      return this.removeAttribute(attribute)\n    } else {\n      return this\n    }\n  }\n\n  increaseNestingLevel() {\n    const attribute = this.getLastNestableAttribute()\n    if (attribute) {\n      const index = this.attributes.lastIndexOf(attribute)\n      const attributes = spliceArray(this.attributes, index + 1, 0, ...expandAttribute(attribute))\n      return this.copyWithAttributes(attributes)\n    } else {\n      return this\n    }\n  }\n\n  getListItemAttributes() {\n    return this.attributes.filter((attribute) => getBlockConfig(attribute).listAttribute)\n  }\n\n  isListItem() {\n    return getBlockConfig(this.getLastAttribute())?.listAttribute\n  }\n\n  isTerminalBlock() {\n    return getBlockConfig(this.getLastAttribute())?.terminal\n  }\n\n  breaksOnReturn() {\n    return getBlockConfig(this.getLastAttribute())?.breakOnReturn\n  }\n\n  findLineBreakInDirectionFromPosition(direction, position) {\n    const string = this.toString()\n    let result\n    switch (direction) {\n      case \"forward\":\n        result = string.indexOf(\"\\n\", position)\n        break\n      case \"backward\":\n        result = string.slice(0, position).lastIndexOf(\"\\n\")\n    }\n\n    if (result !== -1) {\n      return result\n    }\n  }\n\n  contentsForInspection() {\n    return {\n      text: this.text.inspect(),\n      attributes: this.attributes,\n    }\n  }\n\n  toString() {\n    return this.text.toString()\n  }\n\n  toJSON() {\n    return {\n      text: this.text,\n      attributes: this.attributes,\n    }\n  }\n\n  // BIDI\n\n  getDirection() {\n    return this.text.getDirection()\n  }\n\n  isRTL() {\n    return this.text.isRTL()\n  }\n\n  // Splittable\n\n  getLength() {\n    return this.text.getLength()\n  }\n\n  canBeConsolidatedWith(block) {\n    return !this.hasAttributes() && !block.hasAttributes() && this.getDirection() === block.getDirection()\n  }\n\n  consolidateWith(block) {\n    const newlineText = Text.textForStringWithAttributes(\"\\n\")\n    const text = this.getTextWithoutBlockBreak().appendText(newlineText)\n    return this.copyWithText(text.appendText(block.text))\n  }\n\n  splitAtOffset(offset) {\n    let left, right\n    if (offset === 0) {\n      left = null\n      right = this\n    } else if (offset === this.getLength()) {\n      left = this\n      right = null\n    } else {\n      left = this.copyWithText(this.text.getTextAtRange([ 0, offset ]))\n      right = this.copyWithText(this.text.getTextAtRange([ offset, this.getLength() ]))\n    }\n    return [ left, right ]\n  }\n\n  getBlockBreakPosition() {\n    return this.text.getLength() - 1\n  }\n\n  getTextWithoutBlockBreak() {\n    if (textEndsInBlockBreak(this.text)) {\n      return this.text.getTextAtRange([ 0, this.getBlockBreakPosition() ])\n    } else {\n      return this.text.copy()\n    }\n  }\n\n  // Grouping\n\n  canBeGrouped(depth) {\n    return this.attributes[depth]\n  }\n\n  canBeGroupedWith(otherBlock, depth) {\n    const otherAttributes = otherBlock.getAttributes()\n    const otherAttribute = otherAttributes[depth]\n    const attribute = this.attributes[depth]\n\n    return (\n      attribute === otherAttribute &&\n      !(getBlockConfig(attribute).group === false && !getListAttributeNames().includes(otherAttributes[depth + 1])) &&\n      (this.getDirection() === otherBlock.getDirection() || otherBlock.isEmpty())\n    )\n  }\n}\n\n// Block breaks\n\nconst applyBlockBreakToText = function(text) {\n  text = unmarkExistingInnerBlockBreaksInText(text)\n  text = addBlockBreakToText(text)\n  return text\n}\n\nconst unmarkExistingInnerBlockBreaksInText = function(text) {\n  let modified = false\n  const pieces = text.getPieces()\n\n  let innerPieces = pieces.slice(0, pieces.length - 1)\n  const lastPiece = pieces[pieces.length - 1]\n\n  if (!lastPiece) return text\n\n  innerPieces = innerPieces.map((piece) => {\n    if (piece.isBlockBreak()) {\n      modified = true\n      return unmarkBlockBreakPiece(piece)\n    } else {\n      return piece\n    }\n  })\n\n  if (modified) {\n    return new Text([ ...innerPieces, lastPiece ])\n  } else {\n    return text\n  }\n}\n\nconst blockBreakText = Text.textForStringWithAttributes(\"\\n\", { blockBreak: true })\n\nconst addBlockBreakToText = function(text) {\n  if (textEndsInBlockBreak(text)) {\n    return text\n  } else {\n    return text.appendText(blockBreakText)\n  }\n}\n\nconst textEndsInBlockBreak = function(text) {\n  const length = text.getLength()\n  if (length === 0) {\n    return false\n  }\n  const endText = text.getTextAtRange([ length - 1, length ])\n  return endText.isBlockBreak()\n}\n\nconst unmarkBlockBreakPiece = (piece) => piece.copyWithoutAttribute(\"blockBreak\")\n\n// Attributes\n\nconst expandAttribute = function(attribute) {\n  const { listAttribute } = getBlockConfig(attribute)\n  if (listAttribute) {\n    return [ listAttribute, attribute ]\n  } else {\n    return [ attribute ]\n  }\n}\n\n// Array helpers\n\nconst getLastElement = (array) => array.slice(-1)[0]\n\nconst removeLastValue = function(array, value) {\n  const index = array.lastIndexOf(value)\n  if (index === -1) {\n    return array\n  } else {\n    return spliceArray(array, index, 1)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class ObjectMap extends BasicObject {\n  constructor(objects = []) {\n    super(...arguments)\n    this.objects = {}\n\n    Array.from(objects).forEach((object) => {\n      const hash = JSON.stringify(object)\n      if (this.objects[hash] == null) {\n        this.objects[hash] = object\n      }\n    })\n  }\n\n  find(object) {\n    const hash = JSON.stringify(object)\n    return this.objects[hash]\n  }\n}\n","import config from \"trix/config\"\nimport TrixObject from \"trix/core/object\" // Don't override window.Object\n\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport SplittableList from \"trix/models/splittable_list\"\nimport Hash from \"trix/core/collections/hash\"\nimport ObjectMap from \"trix/core/collections/object_map\"\n\nimport { arraysAreEqual, getBlockConfig, normalizeRange, rangeIsCollapsed } from \"trix/core/helpers\"\n\nexport default class Document extends TrixObject {\n  static fromJSON(documentJSON) {\n    const blocks = Array.from(documentJSON).map((blockJSON) => Block.fromJSON(blockJSON))\n    return new this(blocks)\n  }\n\n  static fromString(string, textAttributes) {\n    const text = Text.textForStringWithAttributes(string, textAttributes)\n    return new this([ new Block(text) ])\n  }\n\n  constructor(blocks = []) {\n    super(...arguments)\n    if (blocks.length === 0) {\n      blocks = [ new Block() ]\n    }\n    this.blockList = SplittableList.box(blocks)\n  }\n\n  isEmpty() {\n    const block = this.getBlockAtIndex(0)\n    return this.blockList.length === 1 && block.isEmpty() && !block.hasAttributes()\n  }\n\n  copy(options = {}) {\n    const blocks = options.consolidateBlocks ? this.blockList.consolidate().toArray() : this.blockList.toArray()\n\n    return new this.constructor(blocks)\n  }\n\n  copyUsingObjectsFromDocument(sourceDocument) {\n    const objectMap = new ObjectMap(sourceDocument.getObjects())\n    return this.copyUsingObjectMap(objectMap)\n  }\n\n  copyUsingObjectMap(objectMap) {\n    const blocks = this.getBlocks().map((block) => {\n      const mappedBlock = objectMap.find(block)\n      return mappedBlock || block.copyUsingObjectMap(objectMap)\n    })\n    return new this.constructor(blocks)\n  }\n\n  copyWithBaseBlockAttributes(blockAttributes = []) {\n    const blocks = this.getBlocks().map((block) => {\n      const attributes = blockAttributes.concat(block.getAttributes())\n      return block.copyWithAttributes(attributes)\n    })\n\n    return new this.constructor(blocks)\n  }\n\n  replaceBlock(oldBlock, newBlock) {\n    const index = this.blockList.indexOf(oldBlock)\n    if (index === -1) {\n      return this\n    }\n    return new this.constructor(this.blockList.replaceObjectAtIndex(newBlock, index))\n  }\n\n  insertDocumentAtRange(document, range) {\n    const { blockList } = document\n    range = normalizeRange(range)\n    let [ position ] = range\n    const { index, offset } = this.locationFromPosition(position)\n\n    let result = this\n    const block = this.getBlockAtPosition(position)\n\n    if (rangeIsCollapsed(range) && block.isEmpty() && !block.hasAttributes()) {\n      result = new this.constructor(result.blockList.removeObjectAtIndex(index))\n    } else if (block.getBlockBreakPosition() === offset) {\n      position++\n    }\n\n    result = result.removeTextAtRange(range)\n    return new this.constructor(result.blockList.insertSplittableListAtPosition(blockList, position))\n  }\n\n  mergeDocumentAtRange(document, range) {\n    let formattedDocument, result\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const blockAttributes = this.getBlockAtIndex(startLocation.index).getAttributes()\n    const baseBlockAttributes = document.getBaseBlockAttributes()\n    const trailingBlockAttributes = blockAttributes.slice(-baseBlockAttributes.length)\n\n    if (arraysAreEqual(baseBlockAttributes, trailingBlockAttributes)) {\n      const leadingBlockAttributes = blockAttributes.slice(0, -baseBlockAttributes.length)\n      formattedDocument = document.copyWithBaseBlockAttributes(leadingBlockAttributes)\n    } else {\n      formattedDocument = document.copy({ consolidateBlocks: true }).copyWithBaseBlockAttributes(blockAttributes)\n    }\n\n    const blockCount = formattedDocument.getBlockCount()\n    const firstBlock = formattedDocument.getBlockAtIndex(0)\n\n    if (arraysAreEqual(blockAttributes, firstBlock.getAttributes())) {\n      const firstText = firstBlock.getTextWithoutBlockBreak()\n      result = this.insertTextAtRange(firstText, range)\n\n      if (blockCount > 1) {\n        formattedDocument = new this.constructor(formattedDocument.getBlocks().slice(1))\n        const position = startPosition + firstText.getLength()\n        result = result.insertDocumentAtRange(formattedDocument, position)\n      }\n    } else {\n      result = this.insertDocumentAtRange(formattedDocument, range)\n    }\n\n    return result\n  }\n\n  insertTextAtRange(text, range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { index, offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    return new this.constructor(\n      document.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(block.text.insertTextAtPosition(text, offset))\n      )\n    )\n  }\n\n  removeTextAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ leftPosition, rightPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this\n    }\n    const [ leftLocation, rightLocation ] = Array.from(this.locationRangeFromRange(range))\n\n    const leftIndex = leftLocation.index\n    const leftOffset = leftLocation.offset\n    const leftBlock = this.getBlockAtIndex(leftIndex)\n\n    const rightIndex = rightLocation.index\n    const rightOffset = rightLocation.offset\n    const rightBlock = this.getBlockAtIndex(rightIndex)\n\n    const removeRightNewline =\n      rightPosition - leftPosition === 1 &&\n      leftBlock.getBlockBreakPosition() === leftOffset &&\n      rightBlock.getBlockBreakPosition() !== rightOffset &&\n      rightBlock.text.getStringAtPosition(rightOffset) === \"\\n\"\n\n    if (removeRightNewline) {\n      blocks = this.blockList.editObjectAtIndex(rightIndex, (block) =>\n        block.copyWithText(block.text.removeTextAtRange([ rightOffset, rightOffset + 1 ]))\n      )\n    } else {\n      let block\n      const leftText = leftBlock.text.getTextAtRange([ 0, leftOffset ])\n      const rightText = rightBlock.text.getTextAtRange([ rightOffset, rightBlock.getLength() ])\n      const text = leftText.appendText(rightText)\n\n      const removingLeftBlock = leftIndex !== rightIndex && leftOffset === 0\n      const useRightBlock = removingLeftBlock && leftBlock.getAttributeLevel() >= rightBlock.getAttributeLevel()\n\n      if (useRightBlock) {\n        block = rightBlock.copyWithText(text)\n      } else {\n        block = leftBlock.copyWithText(text)\n      }\n\n      const affectedBlockCount = rightIndex + 1 - leftIndex\n      blocks = this.blockList.splice(leftIndex, affectedBlockCount, block)\n    }\n\n    return new this.constructor(blocks)\n  }\n\n  moveTextFromRangeToPosition(range, position) {\n    let text\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    if (startPosition <= position && position <= endPosition) {\n      return this\n    }\n\n    let document = this.getDocumentAtRange(range)\n    let result = this.removeTextAtRange(range)\n\n    const movingRightward = startPosition < position\n    if (movingRightward) {\n      position -= document.getLength()\n    }\n\n    const [ firstBlock, ...blocks ] = document.getBlocks()\n    if (blocks.length === 0) {\n      text = firstBlock.getTextWithoutBlockBreak()\n      if (movingRightward) {\n        position += 1\n      }\n    } else {\n      text = firstBlock.text\n    }\n\n    result = result.insertTextAtRange(text, position)\n    if (blocks.length === 0) {\n      return result\n    }\n\n    document = new this.constructor(blocks)\n    position += text.getLength()\n\n    return result.insertDocumentAtRange(document, position)\n  }\n\n  addAttributeAtRange(attribute, value, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(\n      range,\n      (block, textRange, index) =>\n        blockList = blockList.editObjectAtIndex(index, function() {\n          if (getBlockConfig(attribute)) {\n            return block.addAttribute(attribute, value)\n          } else {\n            if (textRange[0] === textRange[1]) {\n              return block\n            } else {\n              return block.copyWithText(block.text.addAttributeAtRange(attribute, value, textRange))\n            }\n          }\n        })\n    )\n    return new this.constructor(blockList)\n  }\n\n  addAttribute(attribute, value) {\n    let { blockList } = this\n    this.eachBlock(\n      (block, index) => blockList = blockList.editObjectAtIndex(index, () => block.addAttribute(attribute, value))\n    )\n    return new this.constructor(blockList)\n  }\n\n  removeAttributeAtRange(attribute, range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (getBlockConfig(attribute)) {\n        blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(attribute))\n      } else if (textRange[0] !== textRange[1]) {\n        blockList = blockList.editObjectAtIndex(index, () =>\n          block.copyWithText(block.text.removeAttributeAtRange(attribute, textRange))\n        )\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    const [ startPosition ] = Array.from(range)\n    const { index } = this.locationFromPosition(startPosition)\n    const text = this.getTextAtIndex(index)\n\n    return new this.constructor(\n      this.blockList.editObjectAtIndex(index, (block) =>\n        block.copyWithText(text.updateAttributesForAttachment(attributes, attachment))\n      )\n    )\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.removeAttributeAtRange(attribute, range)\n  }\n\n  insertBlockBreakAtRange(range) {\n    let blocks\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    const { offset } = this.locationFromPosition(startPosition)\n\n    const document = this.removeTextAtRange(range)\n    if (offset === 0) {\n      blocks = [ new Block() ]\n    }\n    return new this.constructor(\n      document.blockList.insertSplittableListAtPosition(new SplittableList(blocks), startPosition)\n    )\n  }\n\n  applyBlockAttributeAtRange(attributeName, value, range) {\n    const expanded = this.expandRangeToLineBreaksAndSplitBlocks(range)\n    let document = expanded.document\n    range = expanded.range\n    const blockConfig = getBlockConfig(attributeName)\n\n    if (blockConfig.listAttribute) {\n      document = document.removeLastListAttributeAtRange(range, { exceptAttributeName: attributeName })\n      const converted = document.convertLineBreaksToBlockBreaksInRange(range)\n      document = converted.document\n      range = converted.range\n    } else if (blockConfig.exclusive) {\n      document = document.removeBlockAttributesAtRange(range)\n    } else if (blockConfig.terminal) {\n      document = document.removeLastTerminalAttributeAtRange(range)\n    } else {\n      document = document.consolidateBlocksAtRange(range)\n    }\n\n    return document.addAttributeAtRange(attributeName, value, range)\n  }\n\n  removeLastListAttributeAtRange(range, options = {}) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).listAttribute) {\n        return\n      }\n      if (lastAttributeName === options.exceptAttributeName) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeLastTerminalAttributeAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      const lastAttributeName = block.getLastAttribute()\n      if (!lastAttributeName) {\n        return\n      }\n      if (!getBlockConfig(lastAttributeName).terminal) {\n        return\n      }\n      blockList = blockList.editObjectAtIndex(index, () => block.removeAttribute(lastAttributeName))\n    })\n    return new this.constructor(blockList)\n  }\n\n  removeBlockAttributesAtRange(range) {\n    let { blockList } = this\n    this.eachBlockAtRange(range, function(block, textRange, index) {\n      if (block.hasAttributes()) {\n        blockList = blockList.editObjectAtIndex(index, () => block.copyWithoutAttributes())\n      }\n    })\n    return new this.constructor(blockList)\n  }\n\n  expandRangeToLineBreaksAndSplitBlocks(range) {\n    let position\n    range = normalizeRange(range)\n    let [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    let document = this\n\n    const startBlock = document.getBlockAtIndex(startLocation.index)\n    startLocation.offset = startBlock.findLineBreakInDirectionFromPosition(\"backward\", startLocation.offset)\n    if (startLocation.offset != null) {\n      position = document.positionFromLocation(startLocation)\n      document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      endLocation.index += 1\n      endLocation.offset -= document.getBlockAtIndex(startLocation.index).getLength()\n      startLocation.index += 1\n    }\n    startLocation.offset = 0\n\n    if (endLocation.offset === 0 && endLocation.index > startLocation.index) {\n      endLocation.index -= 1\n      endLocation.offset = document.getBlockAtIndex(endLocation.index).getBlockBreakPosition()\n    } else {\n      const endBlock = document.getBlockAtIndex(endLocation.index)\n      if (endBlock.text.getStringAtRange([ endLocation.offset - 1, endLocation.offset ]) === \"\\n\") {\n        endLocation.offset -= 1\n      } else {\n        endLocation.offset = endBlock.findLineBreakInDirectionFromPosition(\"forward\", endLocation.offset)\n      }\n      if (endLocation.offset !== endBlock.getBlockBreakPosition()) {\n        position = document.positionFromLocation(endLocation)\n        document = document.insertBlockBreakAtRange([ position, position + 1 ])\n      }\n    }\n\n    startPosition = document.positionFromLocation(startLocation)\n    endPosition = document.positionFromLocation(endLocation)\n    range = normalizeRange([ startPosition, endPosition ])\n\n    return { document, range }\n  }\n\n  convertLineBreaksToBlockBreaksInRange(range) {\n    range = normalizeRange(range)\n    let [ position ] = range\n    const string = this.getStringAtRange(range).slice(0, -1)\n    let document = this\n\n    string.replace(/.*?\\n/g, function(match) {\n      position += match.length\n      document = document.insertBlockBreakAtRange([ position - 1, position ])\n    })\n\n    return { document, range }\n  }\n\n  consolidateBlocksAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startIndex = this.locationFromPosition(startPosition).index\n    const endIndex = this.locationFromPosition(endPosition).index\n    return new this.constructor(this.blockList.consolidateFromIndexToIndex(startIndex, endIndex))\n  }\n\n  getDocumentAtRange(range) {\n    range = normalizeRange(range)\n    const blocks = this.blockList.getSplittableListInRange(range).toArray()\n    return new this.constructor(blocks)\n  }\n\n  getStringAtRange(range) {\n    let endIndex\n    const array = range = normalizeRange(range),\n      endPosition = array[array.length - 1]\n    if (endPosition !== this.getLength()) {\n      endIndex = -1\n    }\n    return this.getDocumentAtRange(range).toString().slice(0, endIndex)\n  }\n\n  getBlockAtIndex(index) {\n    return this.blockList.getObjectAtIndex(index)\n  }\n\n  getBlockAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getBlockAtIndex(index)\n  }\n\n  getTextAtIndex(index) {\n    return this.getBlockAtIndex(index)?.text\n  }\n\n  getTextAtPosition(position) {\n    const { index } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index)\n  }\n\n  getPieceAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getPieceAtPosition(offset)\n  }\n\n  getCharacterAtPosition(position) {\n    const { index, offset } = this.locationFromPosition(position)\n    return this.getTextAtIndex(index).getStringAtRange([ offset, offset + 1 ])\n  }\n\n  getLength() {\n    return this.blockList.getEndPosition()\n  }\n\n  getBlocks() {\n    return this.blockList.toArray()\n  }\n\n  getBlockCount() {\n    return this.blockList.length\n  }\n\n  getEditCount() {\n    return this.editCount\n  }\n\n  eachBlock(callback) {\n    return this.blockList.eachObject(callback)\n  }\n\n  eachBlockAtRange(range, callback) {\n    let block, textRange\n    range = normalizeRange(range)\n    const [ startPosition, endPosition ] = range\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n\n    if (startLocation.index === endLocation.index) {\n      block = this.getBlockAtIndex(startLocation.index)\n      textRange = [ startLocation.offset, endLocation.offset ]\n      return callback(block, textRange, startLocation.index)\n    } else {\n      for (let index = startLocation.index; index <= endLocation.index; index++) {\n        block = this.getBlockAtIndex(index)\n        if (block) {\n          switch (index) {\n            case startLocation.index:\n              textRange = [ startLocation.offset, block.text.getLength() ]\n              break\n            case endLocation.index:\n              textRange = [ 0, endLocation.offset ]\n              break\n            default:\n              textRange = [ 0, block.text.getLength() ]\n          }\n          callback(block, textRange, index)\n        }\n      }\n    }\n  }\n\n  getCommonAttributesAtRange(range) {\n    range = normalizeRange(range)\n    const [ startPosition ] = range\n    if (rangeIsCollapsed(range)) {\n      return this.getCommonAttributesAtPosition(startPosition)\n    } else {\n      const textAttributes = []\n      const blockAttributes = []\n\n      this.eachBlockAtRange(range, function(block, textRange) {\n        if (textRange[0] !== textRange[1]) {\n          textAttributes.push(block.text.getCommonAttributesAtRange(textRange))\n          return blockAttributes.push(attributesForBlock(block))\n        }\n      })\n\n      return Hash.fromCommonAttributesOfObjects(textAttributes)\n        .merge(Hash.fromCommonAttributesOfObjects(blockAttributes))\n        .toObject()\n    }\n  }\n\n  getCommonAttributesAtPosition(position) {\n    let key, value\n    const { index, offset } = this.locationFromPosition(position)\n    const block = this.getBlockAtIndex(index)\n    if (!block) {\n      return {}\n    }\n\n    const commonAttributes = attributesForBlock(block)\n    const attributes = block.text.getAttributesAtPosition(offset)\n    const attributesLeft = block.text.getAttributesAtPosition(offset - 1)\n    const inheritableAttributes = Object.keys(config.textAttributes).filter((key) => {\n      return config.textAttributes[key].inheritable\n    })\n\n    for (key in attributesLeft) {\n      value = attributesLeft[key]\n      if (value === attributes[key] || inheritableAttributes.includes(key)) {\n        commonAttributes[key] = value\n      }\n    }\n\n    return commonAttributes\n  }\n\n  getRangeOfCommonAttributeAtPosition(attributeName, position) {\n    const { index, offset } = this.locationFromPosition(position)\n    const text = this.getTextAtIndex(index)\n    const [ startOffset, endOffset ] = Array.from(text.getExpandedRangeForAttributeAtOffset(attributeName, offset))\n\n    const start = this.positionFromLocation({ index, offset: startOffset })\n    const end = this.positionFromLocation({ index, offset: endOffset })\n    return normalizeRange([ start, end ])\n  }\n\n  getBaseBlockAttributes() {\n    let baseBlockAttributes = this.getBlockAtIndex(0).getAttributes()\n\n    for (let blockIndex = 1; blockIndex < this.getBlockCount(); blockIndex++) {\n      const blockAttributes = this.getBlockAtIndex(blockIndex).getAttributes()\n      const lastAttributeIndex = Math.min(baseBlockAttributes.length, blockAttributes.length)\n\n      baseBlockAttributes = (() => {\n        const result = []\n        for (let index = 0; index < lastAttributeIndex; index++) {\n          if (blockAttributes[index] !== baseBlockAttributes[index]) {\n            break\n          }\n          result.push(blockAttributes[index])\n        }\n        return result\n      })()\n    }\n\n    return baseBlockAttributes\n  }\n\n  getAttachmentById(attachmentId) {\n    for (const attachment of this.getAttachments()) {\n      if (attachment.id === attachmentId) {\n        return attachment\n      }\n    }\n  }\n\n  getAttachmentPieces() {\n    let attachmentPieces = []\n    this.blockList.eachObject(({ text }) => attachmentPieces = attachmentPieces.concat(text.getAttachmentPieces()))\n    return attachmentPieces\n  }\n\n  getAttachments() {\n    return this.getAttachmentPieces().map((piece) => piece.attachment)\n  }\n\n  getRangeOfAttachment(attachment) {\n    let position = 0\n    const iterable = this.blockList.toArray()\n    for (let index = 0; index < iterable.length; index++) {\n      const { text } = iterable[index]\n      const textRange = text.getRangeOfAttachment(attachment)\n      if (textRange) {\n        return normalizeRange([ position + textRange[0], position + textRange[1] ])\n      }\n      position += text.getLength()\n    }\n  }\n\n  getLocationRangeOfAttachment(attachment) {\n    const range = this.getRangeOfAttachment(attachment)\n    return this.locationRangeFromRange(range)\n  }\n\n  getAttachmentPieceForAttachment(attachment) {\n    for (const piece of this.getAttachmentPieces()) {\n      if (piece.attachment === attachment) {\n        return piece\n      }\n    }\n  }\n\n  findRangesForBlockAttribute(attributeName) {\n    let position = 0\n    const ranges = []\n\n    this.getBlocks().forEach((block) => {\n      const length = block.getLength()\n      if (block.hasAttribute(attributeName)) {\n        ranges.push([ position, position + length ])\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  findRangesForTextAttribute(attributeName, { withValue } = {}) {\n    let position = 0\n    let range = []\n    const ranges = []\n\n    const match = function(piece) {\n      if (withValue) {\n        return piece.getAttribute(attributeName) === withValue\n      } else {\n        return piece.hasAttribute(attributeName)\n      }\n    }\n\n    this.getPieces().forEach((piece) => {\n      const length = piece.getLength()\n      if (match(piece)) {\n        if (range[1] === position) {\n          range[1] = position + length\n        } else {\n          ranges.push(range = [ position, position + length ])\n        }\n      }\n      position += length\n    })\n\n    return ranges\n  }\n\n  locationFromPosition(position) {\n    const location = this.blockList.findIndexAndOffsetAtPosition(Math.max(0, position))\n    if (location.index != null) {\n      return location\n    } else {\n      const blocks = this.getBlocks()\n      return { index: blocks.length - 1, offset: blocks[blocks.length - 1].getLength() }\n    }\n  }\n\n  positionFromLocation(location) {\n    return this.blockList.findPositionAtIndexAndOffset(location.index, location.offset)\n  }\n\n  locationRangeFromPosition(position) {\n    return normalizeRange(this.locationFromPosition(position))\n  }\n\n  locationRangeFromRange(range) {\n    range = normalizeRange(range)\n    if (!range) return\n\n    const [ startPosition, endPosition ] = Array.from(range)\n    const startLocation = this.locationFromPosition(startPosition)\n    const endLocation = this.locationFromPosition(endPosition)\n    return normalizeRange([ startLocation, endLocation ])\n  }\n\n  rangeFromLocationRange(locationRange) {\n    let rightPosition\n    locationRange = normalizeRange(locationRange)\n    const leftPosition = this.positionFromLocation(locationRange[0])\n    if (!rangeIsCollapsed(locationRange)) {\n      rightPosition = this.positionFromLocation(locationRange[1])\n    }\n    return normalizeRange([ leftPosition, rightPosition ])\n  }\n\n  isEqualTo(document) {\n    return this.blockList.isEqualTo(document?.blockList)\n  }\n\n  getTexts() {\n    return this.getBlocks().map((block) => block.text)\n  }\n\n  getPieces() {\n    const pieces = []\n\n    Array.from(this.getTexts()).forEach((text) => {\n      pieces.push(...Array.from(text.getPieces() || []))\n    })\n\n    return pieces\n  }\n\n  getObjects() {\n    return this.getBlocks().concat(this.getTexts()).concat(this.getPieces())\n  }\n\n  toSerializableDocument() {\n    const blocks = []\n    this.blockList.eachObject((block) => blocks.push(block.copyWithText(block.text.toSerializableText())))\n    return new this.constructor(blocks)\n  }\n\n  toString() {\n    return this.blockList.toString()\n  }\n\n  toJSON() {\n    return this.blockList.toJSON()\n  }\n\n  toConsole() {\n    return JSON.stringify(this.blockList.toArray()).map((block) => JSON.parse(block.text.toConsole()))\n  }\n}\n\nconst attributesForBlock = function(block) {\n  const attributes = {}\n  const attributeName = block.getLastAttribute()\n  if (attributeName) {\n    attributes[attributeName] = true\n  }\n  return attributes\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { nodeIsAttachmentElement, removeNode, tagName, walkTree } from \"trix/core/helpers\"\n\nconst DEFAULT_ALLOWED_ATTRIBUTES = \"style href src width height class\".split(\" \")\nconst DEFAULT_FORBIDDEN_PROTOCOLS = \"javascript:\".split(\" \")\nconst DEFAULT_FORBIDDEN_ELEMENTS = \"script iframe\".split(\" \")\n\nexport default class HTMLSanitizer extends BasicObject {\n  static sanitize(html, options) {\n    const sanitizer = new this(html, options)\n    sanitizer.sanitize()\n    return sanitizer\n  }\n\n  constructor(html, { allowedAttributes, forbiddenProtocols, forbiddenElements } = {}) {\n    super(...arguments)\n    this.allowedAttributes = allowedAttributes || DEFAULT_ALLOWED_ATTRIBUTES\n    this.forbiddenProtocols = forbiddenProtocols || DEFAULT_FORBIDDEN_PROTOCOLS\n    this.forbiddenElements = forbiddenElements || DEFAULT_FORBIDDEN_ELEMENTS\n    this.body = createBodyElementForHTML(html)\n  }\n\n  sanitize() {\n    this.sanitizeElements()\n    return this.normalizeListElementNesting()\n  }\n\n  getHTML() {\n    return this.body.innerHTML\n  }\n\n  getBody() {\n    return this.body\n  }\n\n  // Private\n\n  sanitizeElements() {\n    const walker = walkTree(this.body)\n    const nodesToRemove = []\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      switch (node.nodeType) {\n        case Node.ELEMENT_NODE:\n          if (this.elementIsRemovable(node)) {\n            nodesToRemove.push(node)\n          } else {\n            this.sanitizeElement(node)\n          }\n          break\n        case Node.COMMENT_NODE:\n          nodesToRemove.push(node)\n          break\n      }\n    }\n\n    nodesToRemove.forEach((node) => removeNode(node))\n\n    return this.body\n  }\n\n  sanitizeElement(element) {\n    if (element.hasAttribute(\"href\")) {\n      if (this.forbiddenProtocols.includes(element.protocol)) {\n        element.removeAttribute(\"href\")\n      }\n    }\n\n    Array.from(element.attributes).forEach(({ name }) => {\n      if (!this.allowedAttributes.includes(name) && name.indexOf(\"data-trix\") !== 0) {\n        element.removeAttribute(name)\n      }\n    })\n\n    return element\n  }\n\n  normalizeListElementNesting() {\n    Array.from(this.body.querySelectorAll(\"ul,ol\")).forEach((listElement) => {\n      const previousElement = listElement.previousElementSibling\n      if (previousElement) {\n        if (tagName(previousElement) === \"li\") {\n          previousElement.appendChild(listElement)\n        }\n      }\n    })\n\n    return this.body\n  }\n\n  elementIsRemovable(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    return this.elementIsForbidden(element) || this.elementIsntSerializable(element)\n  }\n\n  elementIsForbidden(element) {\n    return this.forbiddenElements.includes(tagName(element))\n  }\n\n  elementIsntSerializable(element) {\n    return element.getAttribute(\"data-trix-serialize\") === \"false\" && !nodeIsAttachmentElement(element)\n  }\n}\n\nconst createBodyElementForHTML = function(html = \"\") {\n  // Remove everything after </html>\n  html = html.replace(/<\\/html[^>]*>[^]*$/i, \"</html>\")\n  const doc = document.implementation.createHTMLDocument(\"\")\n  doc.documentElement.innerHTML = html\n\n  Array.from(doc.head.querySelectorAll(\"style\")).forEach((element) => {\n    doc.body.appendChild(element)\n  })\n\n  return doc.body\n}\n","/* eslint-disable\n    no-case-declarations,\n    no-irregular-whitespace,\n*/\nimport config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\nimport Document from \"trix/models/document\"\nimport HTMLSanitizer from \"trix/models/html_sanitizer\"\n\nimport {\n  arraysAreEqual,\n  breakableWhitespacePattern,\n  elementContainsNode,\n  findClosestElementFromNode,\n  getBlockTagNames,\n  makeElement,\n  nodeIsAttachmentElement,\n  normalizeSpaces,\n  removeNode,\n  squishBreakableWhitespace,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nconst pieceForString = (string, attributes = {}) => {\n  const type = \"string\"\n  string = normalizeSpaces(string)\n  return { string, attributes, type }\n}\n\nconst pieceForAttachment = (attachment, attributes = {}) => {\n  const type = \"attachment\"\n  return { attachment, attributes, type }\n}\n\nconst blockForAttributes = (attributes = {}) => {\n  const text = []\n  return { text, attributes }\n}\n\nconst parseTrixDataAttribute = (element, name) => {\n  try {\n    return JSON.parse(element.getAttribute(`data-trix-${name}`))\n  } catch (error) {\n    return {}\n  }\n}\n\nconst getImageDimensions = (element) => {\n  const width = element.getAttribute(\"width\")\n  const height = element.getAttribute(\"height\")\n  const dimensions = {}\n  if (width) {\n    dimensions.width = parseInt(width, 10)\n  }\n  if (height) {\n    dimensions.height = parseInt(height, 10)\n  }\n  return dimensions\n}\n\nexport default class HTMLParser extends BasicObject {\n  static parse(html, options) {\n    const parser = new this(html, options)\n    parser.parse()\n    return parser\n  }\n\n  constructor(html, { referenceElement } = {}) {\n    super(...arguments)\n    this.html = html\n    this.referenceElement = referenceElement\n    this.blocks = []\n    this.blockElements = []\n    this.processedElements = []\n  }\n\n  getDocument() {\n    return Document.fromJSON(this.blocks)\n  }\n\n  // HTML parsing\n\n  parse() {\n    try {\n      this.createHiddenContainer()\n      const html = HTMLSanitizer.sanitize(this.html).getHTML()\n      this.containerElement.innerHTML = html\n      const walker = walkTree(this.containerElement, { usingFilter: nodeFilter })\n      while (walker.nextNode()) {\n        this.processNode(walker.currentNode)\n      }\n      return this.translateBlockElementMarginsToNewlines()\n    } finally {\n      this.removeHiddenContainer()\n    }\n  }\n\n  createHiddenContainer() {\n    if (this.referenceElement) {\n      this.containerElement = this.referenceElement.cloneNode(false)\n      this.containerElement.removeAttribute(\"id\")\n      this.containerElement.setAttribute(\"data-trix-internal\", \"\")\n      this.containerElement.style.display = \"none\"\n      return this.referenceElement.parentNode.insertBefore(this.containerElement, this.referenceElement.nextSibling)\n    } else {\n      this.containerElement = makeElement({ tagName: \"div\", style: { display: \"none\" } })\n      return document.body.appendChild(this.containerElement)\n    }\n  }\n\n  removeHiddenContainer() {\n    return removeNode(this.containerElement)\n  }\n\n  processNode(node) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        if (!this.isInsignificantTextNode(node)) {\n          this.appendBlockForTextNode(node)\n          return this.processTextNode(node)\n        }\n        break\n      case Node.ELEMENT_NODE:\n        this.appendBlockForElement(node)\n        return this.processElement(node)\n    }\n  }\n\n  appendBlockForTextNode(node) {\n    const element = node.parentNode\n    if (element === this.currentBlockElement && this.isBlockElement(node.previousSibling)) {\n      return this.appendStringWithAttributes(\"\\n\")\n    } else if (element === this.containerElement || this.isBlockElement(element)) {\n      const attributes = this.getBlockAttributes(element)\n      if (!arraysAreEqual(attributes, this.currentBlock?.attributes)) {\n        this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n        this.currentBlockElement = element\n      }\n    }\n  }\n\n  appendBlockForElement(element) {\n    const elementIsBlockElement = this.isBlockElement(element)\n    const currentBlockContainsElement = elementContainsNode(this.currentBlockElement, element)\n\n    if (elementIsBlockElement && !this.isBlockElement(element.firstChild)) {\n      if (!this.isInsignificantTextNode(element.firstChild) || !this.isBlockElement(element.firstElementChild)) {\n        const attributes = this.getBlockAttributes(element)\n        if (element.firstChild) {\n          if (!(currentBlockContainsElement && arraysAreEqual(attributes, this.currentBlock.attributes))) {\n            this.currentBlock = this.appendBlockForAttributesWithElement(attributes, element)\n            this.currentBlockElement = element\n          } else {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n        }\n      }\n    } else if (this.currentBlockElement && !currentBlockContainsElement && !elementIsBlockElement) {\n      const parentBlockElement = this.findParentBlockElement(element)\n      if (parentBlockElement) {\n        return this.appendBlockForElement(parentBlockElement)\n      } else {\n        this.currentBlock = this.appendEmptyBlock()\n        this.currentBlockElement = null\n      }\n    }\n  }\n\n  findParentBlockElement(element) {\n    let { parentElement } = element\n    while (parentElement && parentElement !== this.containerElement) {\n      if (this.isBlockElement(parentElement) && this.blockElements.includes(parentElement)) {\n        return parentElement\n      } else {\n        parentElement = parentElement.parentElement\n      }\n    }\n    return null\n  }\n\n  processTextNode(node) {\n    let string = node.data\n    if (!elementCanDisplayPreformattedText(node.parentNode)) {\n      string = squishBreakableWhitespace(string)\n      if (stringEndsWithWhitespace(node.previousSibling?.textContent)) {\n        string = leftTrimBreakableWhitespace(string)\n      }\n    }\n    return this.appendStringWithAttributes(string, this.getTextAttributes(node.parentNode))\n  }\n\n  processElement(element) {\n    let attributes\n    if (nodeIsAttachmentElement(element)) {\n      attributes = parseTrixDataAttribute(element, \"attachment\")\n      if (Object.keys(attributes).length) {\n        const textAttributes = this.getTextAttributes(element)\n        this.appendAttachmentWithAttributes(attributes, textAttributes)\n        // We have everything we need so avoid processing inner nodes\n        element.innerHTML = \"\"\n      }\n      return this.processedElements.push(element)\n    } else {\n      switch (tagName(element)) {\n        case \"br\":\n          if (!this.isExtraBR(element) && !this.isBlockElement(element.nextSibling)) {\n            this.appendStringWithAttributes(\"\\n\", this.getTextAttributes(element))\n          }\n          return this.processedElements.push(element)\n        case \"img\":\n          attributes = { url: element.getAttribute(\"src\"), contentType: \"image\" }\n          const object = getImageDimensions(element)\n          for (const key in object) {\n            const value = object[key]\n            attributes[key] = value\n          }\n          this.appendAttachmentWithAttributes(attributes, this.getTextAttributes(element))\n          return this.processedElements.push(element)\n        case \"tr\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\"\\n\")\n          }\n          break\n        case \"td\":\n          if (element.parentNode.firstChild !== element) {\n            return this.appendStringWithAttributes(\" | \")\n          }\n          break\n      }\n    }\n  }\n\n  // Document construction\n\n  appendBlockForAttributesWithElement(attributes, element) {\n    this.blockElements.push(element)\n    const block = blockForAttributes(attributes)\n    this.blocks.push(block)\n    return block\n  }\n\n  appendEmptyBlock() {\n    return this.appendBlockForAttributesWithElement([], null)\n  }\n\n  appendStringWithAttributes(string, attributes) {\n    return this.appendPiece(pieceForString(string, attributes))\n  }\n\n  appendAttachmentWithAttributes(attachment, attributes) {\n    return this.appendPiece(pieceForAttachment(attachment, attributes))\n  }\n\n  appendPiece(piece) {\n    if (this.blocks.length === 0) {\n      this.appendEmptyBlock()\n    }\n    return this.blocks[this.blocks.length - 1].text.push(piece)\n  }\n\n  appendStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[text.length - 1]\n\n    if (piece?.type === \"string\") {\n      piece.string += string\n    } else {\n      return text.push(pieceForString(string))\n    }\n  }\n\n  prependStringToTextAtIndex(string, index) {\n    const { text } = this.blocks[index]\n    const piece = text[0]\n\n    if (piece?.type === \"string\") {\n      piece.string = string + piece.string\n    } else {\n      return text.unshift(pieceForString(string))\n    }\n  }\n\n  // Attribute parsing\n\n  getTextAttributes(element) {\n    let value\n    const attributes = {}\n    for (const attribute in config.textAttributes) {\n      const configAttr = config.textAttributes[attribute]\n      if (\n        configAttr.tagName &&\n        findClosestElementFromNode(element, {\n          matchingSelector: configAttr.tagName,\n          untilNode: this.containerElement,\n        })\n      ) {\n        attributes[attribute] = true\n      } else if (configAttr.parser) {\n        value = configAttr.parser(element)\n        if (value) {\n          let attributeInheritedFromBlock = false\n          for (const blockElement of this.findBlockElementAncestors(element)) {\n            if (configAttr.parser(blockElement) === value) {\n              attributeInheritedFromBlock = true\n              break\n            }\n          }\n          if (!attributeInheritedFromBlock) {\n            attributes[attribute] = value\n          }\n        }\n      } else if (configAttr.styleProperty) {\n        value = element.style[configAttr.styleProperty]\n        if (value) {\n          attributes[attribute] = value\n        }\n      }\n    }\n\n    if (nodeIsAttachmentElement(element)) {\n      const object = parseTrixDataAttribute(element, \"attributes\")\n      for (const key in object) {\n        value = object[key]\n        attributes[key] = value\n      }\n    }\n\n    return attributes\n  }\n\n  getBlockAttributes(element) {\n    const attributes = []\n    while (element && element !== this.containerElement) {\n      for (const attribute in config.blockAttributes) {\n        const attrConfig = config.blockAttributes[attribute]\n        if (attrConfig.parse !== false) {\n          if (tagName(element) === attrConfig.tagName) {\n            if (attrConfig.test?.(element) || !attrConfig.test) {\n              attributes.push(attribute)\n              if (attrConfig.listAttribute) {\n                attributes.push(attrConfig.listAttribute)\n              }\n            }\n          }\n        }\n      }\n      element = element.parentNode\n    }\n    return attributes.reverse()\n  }\n\n  findBlockElementAncestors(element) {\n    const ancestors = []\n    while (element && element !== this.containerElement) {\n      const tag = tagName(element)\n      if (getBlockTagNames().includes(tag)) {\n        ancestors.push(element)\n      }\n      element = element.parentNode\n    }\n    return ancestors\n  }\n\n  // Element inspection\n\n  isBlockElement(element) {\n    if (element?.nodeType !== Node.ELEMENT_NODE) return\n    if (nodeIsAttachmentElement(element)) return\n    if (findClosestElementFromNode(element, { matchingSelector: \"td\", untilNode: this.containerElement })) return\n\n    return getBlockTagNames().includes(tagName(element)) ||\n      window.getComputedStyle(element).display === \"block\"\n  }\n\n  isInsignificantTextNode(node) {\n    if (node?.nodeType !== Node.TEXT_NODE) return\n    if (!stringIsAllBreakableWhitespace(node.data)) return\n    const { parentNode, previousSibling, nextSibling } = node\n    if (nodeEndsWithNonWhitespace(parentNode.previousSibling) && !this.isBlockElement(parentNode.previousSibling)) return\n    if (elementCanDisplayPreformattedText(parentNode)) return\n    return !previousSibling || this.isBlockElement(previousSibling) || !nextSibling || this.isBlockElement(nextSibling)\n  }\n\n  isExtraBR(element) {\n    return tagName(element) === \"br\" && this.isBlockElement(element.parentNode) && element.parentNode.lastChild === element\n  }\n\n  // Margin translation\n\n  translateBlockElementMarginsToNewlines() {\n    const defaultMargin = this.getMarginOfDefaultBlockElement()\n\n    for (let index = 0; index < this.blocks.length; index++) {\n      const margin = this.getMarginOfBlockElementAtIndex(index)\n      if (margin) {\n        if (margin.top > defaultMargin.top * 2) {\n          this.prependStringToTextAtIndex(\"\\n\", index)\n        }\n\n        if (margin.bottom > defaultMargin.bottom * 2) {\n          this.appendStringToTextAtIndex(\"\\n\", index)\n        }\n      }\n    }\n  }\n\n  getMarginOfBlockElementAtIndex(index) {\n    const element = this.blockElements[index]\n    if (element) {\n      if (element.textContent) {\n        if (!getBlockTagNames().includes(tagName(element)) && !this.processedElements.includes(element)) {\n          return getBlockElementMargin(element)\n        }\n      }\n    }\n  }\n\n  getMarginOfDefaultBlockElement() {\n    const element = makeElement(config.blockAttributes.default.tagName)\n    this.containerElement.appendChild(element)\n    return getBlockElementMargin(element)\n  }\n}\n\n// Helpers\n\nconst elementCanDisplayPreformattedText = function(element) {\n  const { whiteSpace } = window.getComputedStyle(element)\n  return [ \"pre\", \"pre-wrap\", \"pre-line\" ].includes(whiteSpace)\n}\n\nconst nodeEndsWithNonWhitespace = (node) => node && !stringEndsWithWhitespace(node.textContent)\n\nconst getBlockElementMargin = function(element) {\n  const style = window.getComputedStyle(element)\n  if (style.display === \"block\") {\n    return { top: parseInt(style.marginTop), bottom: parseInt(style.marginBottom) }\n  }\n}\n\nconst nodeFilter = function(node) {\n  if (tagName(node) === \"style\") {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\n// Whitespace\n\nconst leftTrimBreakableWhitespace = (string) => string.replace(new RegExp(`^${breakableWhitespacePattern.source}+`), \"\")\n\nconst stringIsAllBreakableWhitespace = (string) => new RegExp(`^${breakableWhitespacePattern.source}*$`).test(string)\n\nconst stringEndsWithWhitespace = (string) => /\\s$/.test(string)\n","export default class LineBreakInsertion {\n  constructor(composition) {\n    this.composition = composition\n    this.document = this.composition.document\n    const selectedRange = this.composition.getSelectedRange()\n    this.startPosition = selectedRange[0]\n    this.endPosition = selectedRange[1]\n\n    this.startLocation = this.document.locationFromPosition(this.startPosition)\n    this.endLocation = this.document.locationFromPosition(this.endPosition)\n\n    this.block = this.document.getBlockAtIndex(this.endLocation.index)\n    this.breaksOnReturn = this.block.breaksOnReturn()\n    this.previousCharacter = this.block.text.getStringAtPosition(this.endLocation.offset - 1)\n    this.nextCharacter = this.block.text.getStringAtPosition(this.endLocation.offset)\n  }\n\n  shouldInsertBlockBreak() {\n    if (this.block.hasAttributes() && this.block.isListItem() && !this.block.isEmpty()) {\n      return this.startLocation.offset !== 0\n    } else {\n      return this.breaksOnReturn && this.nextCharacter !== \"\\n\"\n    }\n  }\n\n  shouldBreakFormattedBlock() {\n    return (\n      this.block.hasAttributes() &&\n      !this.block.isListItem() &&\n      (this.breaksOnReturn && this.nextCharacter === \"\\n\" || this.previousCharacter === \"\\n\")\n    )\n  }\n\n  shouldDecreaseListLevel() {\n    return this.block.hasAttributes() && this.block.isListItem() && this.block.isEmpty()\n  }\n\n  shouldPrependListItem() {\n    return this.block.isListItem() && this.startLocation.offset === 0 && !this.block.isEmpty()\n  }\n\n  shouldRemoveLastBlockAttribute() {\n    return this.block.hasAttributes() && !this.block.isListItem() && this.block.isEmpty()\n  }\n}\n","import config from \"trix/config\"\nimport { OBJECT_REPLACEMENT_CHARACTER } from \"trix/constants\"\n\nimport BasicObject from \"trix/core/basic_object\"\nimport Text from \"trix/models/text\"\nimport Block from \"trix/models/block\"\nimport Attachment from \"trix/models/attachment\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\nimport LineBreakInsertion from \"trix/models/line_break_insertion\"\n\nimport {\n  arrayStartsWith,\n  extend,\n  getAllAttributeNames,\n  getBlockConfig,\n  getTextConfig,\n  normalizeRange,\n  objectsAreEqual,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  summarizeArrayChange,\n} from \"trix/core/helpers\"\n\nconst PLACEHOLDER = \" \"\n\nexport default class Composition extends BasicObject {\n  constructor() {\n    super(...arguments)\n    this.document = new Document()\n    this.attachments = []\n    this.currentAttributes = {}\n    this.revision = 0\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = document\n      this.refreshAttachments()\n      this.revision++\n      return this.delegate?.compositionDidChangeDocument?.(document)\n    }\n  }\n\n  // Snapshots\n\n  getSnapshot() {\n    return {\n      document: this.document,\n      selectedRange: this.getSelectedRange(),\n    }\n  }\n\n  loadSnapshot({ document, selectedRange }) {\n    this.delegate?.compositionWillLoadSnapshot?.()\n    this.setDocument(document != null ? document : new Document())\n    this.setSelection(selectedRange != null ? selectedRange : [ 0, 0 ])\n    return this.delegate?.compositionDidLoadSnapshot?.()\n  }\n\n  // Responder protocol\n\n  insertText(text, { updatePosition } = { updatePosition: true }) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertTextAtRange(text, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + text.getLength()\n\n    if (updatePosition) {\n      this.setSelection(endPosition)\n    }\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertBlock(block = new Block()) {\n    const document = new Document([ block ])\n    return this.insertDocument(document)\n  }\n\n  insertDocument(document = new Document()) {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength()\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertString(string, options) {\n    const attributes = this.getCurrentTextAttributes()\n    const text = Text.textForStringWithAttributes(string, attributes)\n    return this.insertText(text, options)\n  }\n\n  insertBlockBreak() {\n    const selectedRange = this.getSelectedRange()\n    this.setDocument(this.document.insertBlockBreakAtRange(selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  insertLineBreak() {\n    const insertion = new LineBreakInsertion(this)\n\n    if (insertion.shouldDecreaseListLevel()) {\n      this.decreaseListLevel()\n      return this.setSelection(insertion.startPosition)\n    } else if (insertion.shouldPrependListItem()) {\n      const document = new Document([ insertion.block.copyWithoutText() ])\n      return this.insertDocument(document)\n    } else if (insertion.shouldInsertBlockBreak()) {\n      return this.insertBlockBreak()\n    } else if (insertion.shouldRemoveLastBlockAttribute()) {\n      return this.removeLastBlockAttribute()\n    } else if (insertion.shouldBreakFormattedBlock()) {\n      return this.breakFormattedBlock(insertion)\n    } else {\n      return this.insertString(\"\\n\")\n    }\n  }\n\n  insertHTML(html) {\n    const document = HTMLParser.parse(html).getDocument()\n    const selectedRange = this.getSelectedRange()\n\n    this.setDocument(this.document.mergeDocumentAtRange(document, selectedRange))\n\n    const startPosition = selectedRange[0]\n    const endPosition = startPosition + document.getLength() - 1\n\n    this.setSelection(endPosition)\n    return this.notifyDelegateOfInsertionAtRange([ startPosition, endPosition ])\n  }\n\n  replaceHTML(html) {\n    const document = HTMLParser.parse(html).getDocument().copyUsingObjectsFromDocument(this.document)\n    const locationRange = this.getLocationRange({ strict: false })\n    const selectedRange = this.document.rangeFromLocationRange(locationRange)\n    this.setDocument(document)\n    return this.setSelection(selectedRange)\n  }\n\n  insertFile(file) {\n    return this.insertFiles([ file ])\n  }\n\n  insertFiles(files) {\n    const attachments = []\n\n    Array.from(files).forEach((file) => {\n      if (this.delegate?.compositionShouldAcceptFile(file)) {\n        const attachment = Attachment.attachmentForFile(file)\n        attachments.push(attachment)\n      }\n    })\n\n    return this.insertAttachments(attachments)\n  }\n\n  insertAttachment(attachment) {\n    return this.insertAttachments([ attachment ])\n  }\n\n  insertAttachments(attachments) {\n    let text = new Text()\n\n    Array.from(attachments).forEach((attachment) => {\n      const type = attachment.getType()\n      const presentation = config.attachments[type]?.presentation\n\n      const attributes = this.getCurrentTextAttributes()\n      if (presentation) {\n        attributes.presentation = presentation\n      }\n\n      const attachmentText = Text.textForAttachmentWithAttributes(attachment, attributes)\n      text = text.appendText(attachmentText)\n    })\n\n    return this.insertText(text)\n  }\n\n  shouldManageDeletingInDirection(direction) {\n    const locationRange = this.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      if (direction === \"backward\" && locationRange[0].offset === 0) {\n        return true\n      }\n      if (this.shouldManageMovingCursorInDirection(direction)) {\n        return true\n      }\n    } else {\n      if (locationRange[0].index !== locationRange[1].index) {\n        return true\n      }\n    }\n    return false\n  }\n\n  deleteInDirection(direction, { length } = {}) {\n    let attachment, deletingIntoPreviousBlock, selectionSpansBlocks\n    const locationRange = this.getLocationRange()\n    let range = this.getSelectedRange()\n    const selectionIsCollapsed = rangeIsCollapsed(range)\n\n    if (selectionIsCollapsed) {\n      deletingIntoPreviousBlock = direction === \"backward\" && locationRange[0].offset === 0\n    } else {\n      selectionSpansBlocks = locationRange[0].index !== locationRange[1].index\n    }\n\n    if (deletingIntoPreviousBlock) {\n      if (this.canDecreaseBlockAttributeLevel()) {\n        const block = this.getBlock()\n\n        if (block.isListItem()) {\n          this.decreaseListLevel()\n        } else {\n          this.decreaseBlockAttributeLevel()\n        }\n\n        this.setSelection(range[0])\n        if (block.isEmpty()) {\n          return false\n        }\n      }\n    }\n\n    if (selectionIsCollapsed) {\n      range = this.getExpandedRangeInDirection(direction, { length })\n      if (direction === \"backward\") {\n        attachment = this.getAttachmentAtRange(range)\n      }\n    }\n\n    if (attachment) {\n      this.editAttachment(attachment)\n      return false\n    } else {\n      this.setDocument(this.document.removeTextAtRange(range))\n      this.setSelection(range[0])\n      if (deletingIntoPreviousBlock || selectionSpansBlocks) {\n        return false\n      }\n    }\n  }\n\n  moveTextFromRange(range) {\n    const [ position ] = Array.from(this.getSelectedRange())\n    this.setDocument(this.document.moveTextFromRangeToPosition(range, position))\n    return this.setSelection(position)\n  }\n\n  removeAttachment(attachment) {\n    const range = this.document.getRangeOfAttachment(attachment)\n    if (range) {\n      this.stopEditingAttachment()\n      this.setDocument(this.document.removeTextAtRange(range))\n      return this.setSelection(range[0])\n    }\n  }\n\n  removeLastBlockAttribute() {\n    const [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    const block = this.document.getBlockAtPosition(endPosition)\n    this.removeCurrentAttribute(block.getLastAttribute())\n    return this.setSelection(startPosition)\n  }\n\n  insertPlaceholder() {\n    this.placeholderPosition = this.getPosition()\n    return this.insertString(PLACEHOLDER)\n  }\n\n  selectPlaceholder() {\n    if (this.placeholderPosition != null) {\n      this.setSelectedRange([ this.placeholderPosition, this.placeholderPosition + PLACEHOLDER.length ])\n      return this.getSelectedRange()\n    }\n  }\n\n  forgetPlaceholder() {\n    this.placeholderPosition = null\n  }\n\n  // Current attributes\n\n  hasCurrentAttribute(attributeName) {\n    const value = this.currentAttributes[attributeName]\n    return value != null && value !== false\n  }\n\n  toggleCurrentAttribute(attributeName) {\n    const value = !this.currentAttributes[attributeName]\n    if (value) {\n      return this.setCurrentAttribute(attributeName, value)\n    } else {\n      return this.removeCurrentAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      return this.canSetCurrentBlockAttribute(attributeName)\n    } else {\n      return this.canSetCurrentTextAttribute(attributeName)\n    }\n  }\n\n  canSetCurrentTextAttribute(attributeName) {\n    const document = this.getSelectedDocument()\n    if (!document) return\n    for (const attachment of Array.from(document.getAttachments())) {\n      if (!attachment.hasContent()) {\n        return false\n      }\n    }\n    return true\n  }\n\n  canSetCurrentBlockAttribute(attributeName) {\n    const block = this.getBlock()\n    if (!block) return\n    return !block.isTerminalBlock()\n  }\n\n  setCurrentAttribute(attributeName, value) {\n    if (getBlockConfig(attributeName)) {\n      return this.setBlockAttribute(attributeName, value)\n    } else {\n      this.setTextAttribute(attributeName, value)\n      this.currentAttributes[attributeName] = value\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  setTextAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n\n    const [ startPosition, endPosition ] = Array.from(selectedRange)\n    if (startPosition === endPosition) {\n      if (attributeName === \"href\") {\n        const text = Text.textForStringWithAttributes(value, { href: value })\n        return this.insertText(text)\n      }\n    } else {\n      return this.setDocument(this.document.addAttributeAtRange(attributeName, value, selectedRange))\n    }\n  }\n\n  setBlockAttribute(attributeName, value) {\n    const selectedRange = this.getSelectedRange()\n    if (this.canSetCurrentAttribute(attributeName)) {\n      this.setDocument(this.document.applyBlockAttributeAtRange(attributeName, value, selectedRange))\n      return this.setSelection(selectedRange)\n    }\n  }\n\n  removeCurrentAttribute(attributeName) {\n    if (getBlockConfig(attributeName)) {\n      this.removeBlockAttribute(attributeName)\n      return this.updateCurrentAttributes()\n    } else {\n      this.removeTextAttribute(attributeName)\n      delete this.currentAttributes[attributeName]\n      return this.notifyDelegateOfCurrentAttributesChange()\n    }\n  }\n\n  removeTextAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  removeBlockAttribute(attributeName) {\n    const selectedRange = this.getSelectedRange()\n    if (!selectedRange) return\n    return this.setDocument(this.document.removeAttributeAtRange(attributeName, selectedRange))\n  }\n\n  canDecreaseNestingLevel() {\n    return this.getBlock()?.getNestingLevel() > 0\n  }\n\n  canIncreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    if (getBlockConfig(block.getLastNestableAttribute())?.listAttribute) {\n      const previousBlock = this.getPreviousBlock()\n      if (previousBlock) {\n        return arrayStartsWith(previousBlock.getListItemAttributes(), block.getListItemAttributes())\n      }\n    } else {\n      return block.getNestingLevel() > 0\n    }\n  }\n\n  decreaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.decreaseNestingLevel()))\n  }\n\n  increaseNestingLevel() {\n    const block = this.getBlock()\n    if (!block) return\n    return this.setDocument(this.document.replaceBlock(block, block.increaseNestingLevel()))\n  }\n\n  canDecreaseBlockAttributeLevel() {\n    return this.getBlock()?.getAttributeLevel() > 0\n  }\n\n  decreaseBlockAttributeLevel() {\n    const attribute = this.getBlock()?.getLastAttribute()\n    if (attribute) {\n      return this.removeCurrentAttribute(attribute)\n    }\n  }\n\n  decreaseListLevel() {\n    let [ startPosition ] = Array.from(this.getSelectedRange())\n    const { index } = this.document.locationFromPosition(startPosition)\n    let endIndex = index\n    const attributeLevel = this.getBlock().getAttributeLevel()\n\n    let block = this.document.getBlockAtIndex(endIndex + 1)\n    while (block) {\n      if (!block.isListItem() || block.getAttributeLevel() <= attributeLevel) {\n        break\n      }\n      endIndex++\n      block = this.document.getBlockAtIndex(endIndex + 1)\n    }\n\n    startPosition = this.document.positionFromLocation({ index, offset: 0 })\n    const endPosition = this.document.positionFromLocation({ index: endIndex, offset: 0 })\n    return this.setDocument(this.document.removeLastListAttributeAtRange([ startPosition, endPosition ]))\n  }\n\n  updateCurrentAttributes() {\n    const selectedRange = this.getSelectedRange({ ignoreLock: true })\n    if (selectedRange) {\n      const currentAttributes = this.document.getCommonAttributesAtRange(selectedRange)\n\n      Array.from(getAllAttributeNames()).forEach((attributeName) => {\n        if (!currentAttributes[attributeName]) {\n          if (!this.canSetCurrentAttribute(attributeName)) {\n            currentAttributes[attributeName] = false\n          }\n        }\n      })\n\n      if (!objectsAreEqual(currentAttributes, this.currentAttributes)) {\n        this.currentAttributes = currentAttributes\n        return this.notifyDelegateOfCurrentAttributesChange()\n      }\n    }\n  }\n\n  getCurrentAttributes() {\n    return extend.call({}, this.currentAttributes)\n  }\n\n  getCurrentTextAttributes() {\n    const attributes = {}\n    for (const key in this.currentAttributes) {\n      const value = this.currentAttributes[key]\n      if (value !== false) {\n        if (getTextConfig(key)) {\n          attributes[key] = value\n        }\n      }\n    }\n    return attributes\n  }\n\n  // Selection freezing\n\n  freezeSelection() {\n    return this.setCurrentAttribute(\"frozen\", true)\n  }\n\n  thawSelection() {\n    return this.removeCurrentAttribute(\"frozen\")\n  }\n\n  hasFrozenSelection() {\n    return this.hasCurrentAttribute(\"frozen\")\n  }\n\n  setSelection(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.delegate?.compositionDidRequestChangingSelectionToLocationRange(locationRange)\n  }\n\n  getSelectedRange() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.rangeFromLocationRange(locationRange)\n    }\n  }\n\n  setSelectedRange(selectedRange) {\n    const locationRange = this.document.locationRangeFromRange(selectedRange)\n    return this.getSelectionManager().setLocationRange(locationRange)\n  }\n\n  getPosition() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.positionFromLocation(locationRange[0])\n    }\n  }\n\n  getLocationRange(options) {\n    if (this.targetLocationRange) {\n      return this.targetLocationRange\n    } else {\n      return this.getSelectionManager().getLocationRange(options) || normalizeRange({ index: 0, offset: 0 })\n    }\n  }\n\n  withTargetLocationRange(locationRange, fn) {\n    let result\n    this.targetLocationRange = locationRange\n    try {\n      result = fn()\n    } finally {\n      this.targetLocationRange = null\n    }\n    return result\n  }\n\n  withTargetRange(range, fn) {\n    const locationRange = this.document.locationRangeFromRange(range)\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  withTargetDOMRange(domRange, fn) {\n    const locationRange = this.createLocationRangeFromDOMRange(domRange, { strict: false })\n    return this.withTargetLocationRange(locationRange, fn)\n  }\n\n  getExpandedRangeInDirection(direction, { length } = {}) {\n    let [ startPosition, endPosition ] = Array.from(this.getSelectedRange())\n    if (direction === \"backward\") {\n      if (length) {\n        startPosition -= length\n      } else {\n        startPosition = this.translateUTF16PositionFromOffset(startPosition, -1)\n      }\n    } else {\n      if (length) {\n        endPosition += length\n      } else {\n        endPosition = this.translateUTF16PositionFromOffset(endPosition, 1)\n      }\n    }\n    return normalizeRange([ startPosition, endPosition ])\n  }\n\n  shouldManageMovingCursorInDirection(direction) {\n    if (this.editingAttachment) {\n      return true\n    }\n    const range = this.getExpandedRangeInDirection(direction)\n    return this.getAttachmentAtRange(range) != null\n  }\n\n  moveCursorInDirection(direction) {\n    let canEditAttachment, range\n    if (this.editingAttachment) {\n      range = this.document.getRangeOfAttachment(this.editingAttachment)\n    } else {\n      const selectedRange = this.getSelectedRange()\n      range = this.getExpandedRangeInDirection(direction)\n      canEditAttachment = !rangesAreEqual(selectedRange, range)\n    }\n\n    if (direction === \"backward\") {\n      this.setSelectedRange(range[0])\n    } else {\n      this.setSelectedRange(range[1])\n    }\n\n    if (canEditAttachment) {\n      const attachment = this.getAttachmentAtRange(range)\n      if (attachment) {\n        return this.editAttachment(attachment)\n      }\n    }\n  }\n\n  expandSelectionInDirection(direction, { length } = {}) {\n    const range = this.getExpandedRangeInDirection(direction, { length })\n    return this.setSelectedRange(range)\n  }\n\n  expandSelectionForEditing() {\n    if (this.hasCurrentAttribute(\"href\")) {\n      return this.expandSelectionAroundCommonAttribute(\"href\")\n    }\n  }\n\n  expandSelectionAroundCommonAttribute(attributeName) {\n    const position = this.getPosition()\n    const range = this.document.getRangeOfCommonAttributeAtPosition(attributeName, position)\n    return this.setSelectedRange(range)\n  }\n\n  selectionContainsAttachments() {\n    return this.getSelectedAttachments()?.length > 0\n  }\n\n  selectionIsInCursorTarget() {\n    return this.editingAttachment || this.positionIsCursorTarget(this.getPosition())\n  }\n\n  positionIsCursorTarget(position) {\n    const location = this.document.locationFromPosition(position)\n    if (location) {\n      return this.locationIsCursorTarget(location)\n    }\n  }\n\n  positionIsBlockBreak(position) {\n    return this.document.getPieceAtPosition(position)?.isBlockBreak()\n  }\n\n  getSelectedDocument() {\n    const selectedRange = this.getSelectedRange()\n    if (selectedRange) {\n      return this.document.getDocumentAtRange(selectedRange)\n    }\n  }\n\n  getSelectedAttachments() {\n    return this.getSelectedDocument()?.getAttachments()\n  }\n\n  // Attachments\n\n  getAttachments() {\n    return this.attachments.slice(0)\n  }\n\n  refreshAttachments() {\n    const attachments = this.document.getAttachments()\n    const { added, removed } = summarizeArrayChange(this.attachments, attachments)\n    this.attachments = attachments\n\n    Array.from(removed).forEach((attachment) => {\n      attachment.delegate = null\n      this.delegate?.compositionDidRemoveAttachment?.(attachment)\n    })\n\n    return (() => {\n      const result = []\n\n      Array.from(added).forEach((attachment) => {\n        attachment.delegate = this\n        result.push(this.delegate?.compositionDidAddAttachment?.(attachment))\n      })\n\n      return result\n    })()\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidEditAttachment?.(attachment)\n  }\n\n  attachmentDidChangePreviewURL(attachment) {\n    this.revision++\n    return this.delegate?.compositionDidChangeAttachmentPreviewURL?.(attachment)\n  }\n\n  // Attachment editing\n\n  editAttachment(attachment, options) {\n    if (attachment === this.editingAttachment) return\n    this.stopEditingAttachment()\n    this.editingAttachment = attachment\n    return this.delegate?.compositionDidStartEditingAttachment?.(this.editingAttachment, options)\n  }\n\n  stopEditingAttachment() {\n    if (!this.editingAttachment) return\n    this.delegate?.compositionDidStopEditingAttachment?.(this.editingAttachment)\n    this.editingAttachment = null\n  }\n\n  updateAttributesForAttachment(attributes, attachment) {\n    return this.setDocument(this.document.updateAttributesForAttachment(attributes, attachment))\n  }\n\n  removeAttributeForAttachment(attribute, attachment) {\n    return this.setDocument(this.document.removeAttributeForAttachment(attribute, attachment))\n  }\n\n  // Private\n\n  breakFormattedBlock(insertion) {\n    let { document } = insertion\n    const { block } = insertion\n    let position = insertion.startPosition\n    let range = [ position - 1, position ]\n\n    if (block.getBlockBreakPosition() === insertion.startLocation.offset) {\n      if (block.breaksOnReturn() && insertion.nextCharacter === \"\\n\") {\n        position += 1\n      } else {\n        document = document.removeTextAtRange(range)\n      }\n      range = [ position, position ]\n    } else if (insertion.nextCharacter === \"\\n\") {\n      if (insertion.previousCharacter === \"\\n\") {\n        range = [ position - 1, position + 1 ]\n      } else {\n        range = [ position, position + 1 ]\n        position += 1\n      }\n    } else if (insertion.startLocation.offset - 1 !== 0) {\n      position += 1\n    }\n\n    const newDocument = new Document([ block.removeLastAttribute().copyWithoutText() ])\n    this.setDocument(document.insertDocumentAtRange(newDocument, range))\n    return this.setSelection(position)\n  }\n\n  getPreviousBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      const { index } = locationRange[0]\n      if (index > 0) {\n        return this.document.getBlockAtIndex(index - 1)\n      }\n    }\n  }\n\n  getBlock() {\n    const locationRange = this.getLocationRange()\n    if (locationRange) {\n      return this.document.getBlockAtIndex(locationRange[0].index)\n    }\n  }\n\n  getAttachmentAtRange(range) {\n    const document = this.document.getDocumentAtRange(range)\n    if (document.toString() === `${OBJECT_REPLACEMENT_CHARACTER}\\n`) {\n      return document.getAttachments()[0]\n    }\n  }\n\n  notifyDelegateOfCurrentAttributesChange() {\n    return this.delegate?.compositionDidChangeCurrentAttributes?.(this.currentAttributes)\n  }\n\n  notifyDelegateOfInsertionAtRange(range) {\n    return this.delegate?.compositionDidPerformInsertionAtRange?.(range)\n  }\n\n  translateUTF16PositionFromOffset(position, offset) {\n    const utf16string = this.document.toUTF16String()\n    const utf16position = utf16string.offsetFromUCS2Offset(position)\n    return utf16string.offsetToUCS2Offset(utf16position + offset)\n  }\n}\n\nComposition.proxyMethod(\"getSelectionManager().getPointRange\")\nComposition.proxyMethod(\"getSelectionManager().setLocationRangeFromPointRange\")\nComposition.proxyMethod(\"getSelectionManager().createLocationRangeFromDOMRange\")\nComposition.proxyMethod(\"getSelectionManager().locationIsCursorTarget\")\nComposition.proxyMethod(\"getSelectionManager().selectionIsExpanded\")\nComposition.proxyMethod(\"delegate?.getSelectionManager\")\n","import BasicObject from \"trix/core/basic_object\"\n\nexport default class UndoManager extends BasicObject {\n  constructor(composition) {\n    super(...arguments)\n    this.composition = composition\n    this.undoEntries = []\n    this.redoEntries = []\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    const previousEntry = this.undoEntries.slice(-1)[0]\n\n    if (!consolidatable || !entryHasDescriptionAndContext(previousEntry, description, context)) {\n      const undoEntry = this.createEntry({ description, context })\n      this.undoEntries.push(undoEntry)\n      this.redoEntries = []\n    }\n  }\n\n  undo() {\n    const undoEntry = this.undoEntries.pop()\n    if (undoEntry) {\n      const redoEntry = this.createEntry(undoEntry)\n      this.redoEntries.push(redoEntry)\n      return this.composition.loadSnapshot(undoEntry.snapshot)\n    }\n  }\n\n  redo() {\n    const redoEntry = this.redoEntries.pop()\n    if (redoEntry) {\n      const undoEntry = this.createEntry(redoEntry)\n      this.undoEntries.push(undoEntry)\n      return this.composition.loadSnapshot(redoEntry.snapshot)\n    }\n  }\n\n  canUndo() {\n    return this.undoEntries.length > 0\n  }\n\n  canRedo() {\n    return this.redoEntries.length > 0\n  }\n\n  // Private\n\n  createEntry({ description, context } = {}) {\n    return {\n      description: description?.toString(),\n      context: JSON.stringify(context),\n      snapshot: this.composition.getSnapshot(),\n    }\n  }\n}\n\nconst entryHasDescriptionAndContext = (entry, description, context) =>\n  entry?.description === description?.toString() && entry?.context === JSON.stringify(context)\n","export const attachmentGalleryFilter = function(snapshot) {\n  const filter = new Filter(snapshot)\n  filter.perform()\n  return filter.getSnapshot()\n}\n\nconst BLOCK_ATTRIBUTE_NAME = \"attachmentGallery\"\nconst TEXT_ATTRIBUTE_NAME = \"presentation\"\nconst TEXT_ATTRIBUTE_VALUE = \"gallery\"\n\nclass Filter {\n  constructor(snapshot) {\n    this.document = snapshot.document\n    this.selectedRange = snapshot.selectedRange\n  }\n\n  perform() {\n    this.removeBlockAttribute()\n    return this.applyBlockAttribute()\n  }\n\n  getSnapshot() {\n    return { document: this.document, selectedRange: this.selectedRange }\n  }\n\n  // Private\n\n  removeBlockAttribute() {\n    return this.findRangesOfBlocks().map((range) => this.document = this.document.removeAttributeAtRange(BLOCK_ATTRIBUTE_NAME, range))\n  }\n\n  applyBlockAttribute() {\n    let offset = 0\n\n    this.findRangesOfPieces().forEach((range) => {\n      if (range[1] - range[0] > 1) {\n        range[0] += offset\n        range[1] += offset\n\n        if (this.document.getCharacterAtPosition(range[1]) !== \"\\n\") {\n          this.document = this.document.insertBlockBreakAtRange(range[1])\n          if (range[1] < this.selectedRange[1]) {\n            this.moveSelectedRangeForward()\n          }\n          range[1]++\n          offset++\n        }\n\n        if (range[0] !== 0) {\n          if (this.document.getCharacterAtPosition(range[0] - 1) !== \"\\n\") {\n            this.document = this.document.insertBlockBreakAtRange(range[0])\n            if (range[0] < this.selectedRange[0]) {\n              this.moveSelectedRangeForward()\n            }\n            range[0]++\n            offset++\n          }\n        }\n\n        this.document = this.document.applyBlockAttributeAtRange(BLOCK_ATTRIBUTE_NAME, true, range)\n      }\n    })\n  }\n\n  findRangesOfBlocks() {\n    return this.document.findRangesForBlockAttribute(BLOCK_ATTRIBUTE_NAME)\n  }\n\n  findRangesOfPieces() {\n    return this.document.findRangesForTextAttribute(TEXT_ATTRIBUTE_NAME, { withValue: TEXT_ATTRIBUTE_VALUE })\n  }\n\n  moveSelectedRangeForward() {\n    this.selectedRange[0] += 1\n    this.selectedRange[1] += 1\n  }\n}\n","import Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nimport UndoManager from \"trix/models/undo_manager\"\nimport { attachmentGalleryFilter } from \"trix/filters/attachment_gallery_filter\"\nconst DEFAULT_FILTERS = [ attachmentGalleryFilter ]\n\nexport default class Editor {\n  constructor(composition, selectionManager, element) {\n    this.insertFiles = this.insertFiles.bind(this)\n    this.composition = composition\n    this.selectionManager = selectionManager\n    this.element = element\n    this.undoManager = new UndoManager(this.composition)\n    this.filters = DEFAULT_FILTERS.slice(0)\n  }\n\n  loadDocument(document) {\n    return this.loadSnapshot({ document, selectedRange: [ 0, 0 ] })\n  }\n\n  loadHTML(html = \"\") {\n    const document = HTMLParser.parse(html, { referenceElement: this.element }).getDocument()\n    return this.loadDocument(document)\n  }\n\n  loadJSON({ document, selectedRange }) {\n    document = Document.fromJSON(document)\n    return this.loadSnapshot({ document, selectedRange })\n  }\n\n  loadSnapshot(snapshot) {\n    this.undoManager = new UndoManager(this.composition)\n    return this.composition.loadSnapshot(snapshot)\n  }\n\n  getDocument() {\n    return this.composition.document\n  }\n\n  getSelectedDocument() {\n    return this.composition.getSelectedDocument()\n  }\n\n  getSnapshot() {\n    return this.composition.getSnapshot()\n  }\n\n  toJSON() {\n    return this.getSnapshot()\n  }\n\n  // Document manipulation\n\n  deleteInDirection(direction) {\n    return this.composition.deleteInDirection(direction)\n  }\n\n  insertAttachment(attachment) {\n    return this.composition.insertAttachment(attachment)\n  }\n\n  insertAttachments(attachments) {\n    return this.composition.insertAttachments(attachments)\n  }\n\n  insertDocument(document) {\n    return this.composition.insertDocument(document)\n  }\n\n  insertFile(file) {\n    return this.composition.insertFile(file)\n  }\n\n  insertFiles(files) {\n    return this.composition.insertFiles(files)\n  }\n\n  insertHTML(html) {\n    return this.composition.insertHTML(html)\n  }\n\n  insertString(string) {\n    return this.composition.insertString(string)\n  }\n\n  insertText(text) {\n    return this.composition.insertText(text)\n  }\n\n  insertLineBreak() {\n    return this.composition.insertLineBreak()\n  }\n\n  // Selection\n\n  getSelectedRange() {\n    return this.composition.getSelectedRange()\n  }\n\n  getPosition() {\n    return this.composition.getPosition()\n  }\n\n  getClientRectAtPosition(position) {\n    const locationRange = this.getDocument().locationRangeFromRange([ position, position + 1 ])\n    return this.selectionManager.getClientRectAtLocationRange(locationRange)\n  }\n\n  expandSelectionInDirection(direction) {\n    return this.composition.expandSelectionInDirection(direction)\n  }\n\n  moveCursorInDirection(direction) {\n    return this.composition.moveCursorInDirection(direction)\n  }\n\n  setSelectedRange(selectedRange) {\n    return this.composition.setSelectedRange(selectedRange)\n  }\n\n  // Attributes\n\n  activateAttribute(name, value = true) {\n    return this.composition.setCurrentAttribute(name, value)\n  }\n\n  attributeIsActive(name) {\n    return this.composition.hasCurrentAttribute(name)\n  }\n\n  canActivateAttribute(name) {\n    return this.composition.canSetCurrentAttribute(name)\n  }\n\n  deactivateAttribute(name) {\n    return this.composition.removeCurrentAttribute(name)\n  }\n\n  // Nesting level\n\n  canDecreaseNestingLevel() {\n    return this.composition.canDecreaseNestingLevel()\n  }\n\n  canIncreaseNestingLevel() {\n    return this.composition.canIncreaseNestingLevel()\n  }\n\n  decreaseNestingLevel() {\n    if (this.canDecreaseNestingLevel()) {\n      return this.composition.decreaseNestingLevel()\n    }\n  }\n\n  increaseNestingLevel() {\n    if (this.canIncreaseNestingLevel()) {\n      return this.composition.increaseNestingLevel()\n    }\n  }\n\n  // Undo/redo\n\n  canRedo() {\n    return this.undoManager.canRedo()\n  }\n\n  canUndo() {\n    return this.undoManager.canUndo()\n  }\n\n  recordUndoEntry(description, { context, consolidatable } = {}) {\n    return this.undoManager.recordUndoEntry(description, { context, consolidatable })\n  }\n\n  redo() {\n    if (this.canRedo()) {\n      return this.undoManager.redo()\n    }\n  }\n\n  undo() {\n    if (this.canUndo()) {\n      return this.undoManager.undo()\n    }\n  }\n}\n","/* eslint-disable\n    no-var,\n    prefer-const,\n*/\nimport {\n  elementContainsNode,\n  findChildIndexOfNode,\n  nodeIsAttachmentElement,\n  nodeIsBlockContainer,\n  nodeIsBlockStart,\n  nodeIsBlockStartComment,\n  nodeIsCursorTarget,\n  nodeIsEmptyTextNode,\n  nodeIsTextNode,\n  tagName,\n  walkTree,\n} from \"trix/core/helpers\"\n\nexport default class LocationMapper {\n  constructor(element) {\n    this.element = element\n  }\n\n  findLocationFromContainerAndOffset(container, offset, { strict } = { strict: true }) {\n    let childIndex = 0\n    let foundBlock = false\n    const location = { index: 0, offset: 0 }\n    const attachmentElement = this.findAttachmentElementParentForNode(container)\n\n    if (attachmentElement) {\n      container = attachmentElement.parentNode\n      offset = findChildIndexOfNode(attachmentElement)\n    }\n\n    const walker = walkTree(this.element, { usingFilter: rejectAttachmentContents })\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n\n      if (node === container && nodeIsTextNode(container)) {\n        if (!nodeIsCursorTarget(node)) {\n          location.offset += offset\n        }\n        break\n      } else {\n        if (node.parentNode === container) {\n          if (childIndex++ === offset) {\n            break\n          }\n        } else if (!elementContainsNode(container, node)) {\n          if (childIndex > 0) {\n            break\n          }\n        }\n\n        if (nodeIsBlockStart(node, { strict })) {\n          if (foundBlock) {\n            location.index++\n          }\n          location.offset = 0\n          foundBlock = true\n        } else {\n          location.offset += nodeLength(node)\n        }\n      }\n    }\n\n    return location\n  }\n\n  findContainerAndOffsetFromLocation(location) {\n    let container, offset\n    if (location.index === 0 && location.offset === 0) {\n      container = this.element\n      offset = 0\n\n      while (container.firstChild) {\n        container = container.firstChild\n        if (nodeIsBlockContainer(container)) {\n          offset = 1\n          break\n        }\n      }\n\n      return [ container, offset ]\n    }\n\n    let [ node, nodeOffset ] = this.findNodeAndOffsetFromLocation(location)\n    if (!node) return\n\n    if (nodeIsTextNode(node)) {\n      if (nodeLength(node) === 0) {\n        container = node.parentNode.parentNode\n        offset = findChildIndexOfNode(node.parentNode)\n        if (nodeIsCursorTarget(node, { name: \"right\" })) {\n          offset++\n        }\n      } else {\n        container = node\n        offset = location.offset - nodeOffset\n      }\n    } else {\n      container = node.parentNode\n\n      if (!nodeIsBlockStart(node.previousSibling)) {\n        if (!nodeIsBlockContainer(container)) {\n          while (node === container.lastChild) {\n            node = container\n            container = container.parentNode\n            if (nodeIsBlockContainer(container)) {\n              break\n            }\n          }\n        }\n      }\n\n      offset = findChildIndexOfNode(node)\n      if (location.offset !== 0) {\n        offset++\n      }\n    }\n\n    return [ container, offset ]\n  }\n\n  findNodeAndOffsetFromLocation(location) {\n    let node, nodeOffset\n    let offset = 0\n\n    for (const currentNode of this.getSignificantNodesForIndex(location.index)) {\n      const length = nodeLength(currentNode)\n\n      if (location.offset <= offset + length) {\n        if (nodeIsTextNode(currentNode)) {\n          node = currentNode\n          nodeOffset = offset\n          if (location.offset === nodeOffset && nodeIsCursorTarget(node)) {\n            break\n          }\n        } else if (!node) {\n          node = currentNode\n          nodeOffset = offset\n        }\n      }\n\n      offset += length\n      if (offset > location.offset) {\n        break\n      }\n    }\n\n    return [ node, nodeOffset ]\n  }\n\n  // Private\n\n  findAttachmentElementParentForNode(node) {\n    while (node && node !== this.element) {\n      if (nodeIsAttachmentElement(node)) {\n        return node\n      }\n      node = node.parentNode\n    }\n  }\n\n  getSignificantNodesForIndex(index) {\n    const nodes = []\n    const walker = walkTree(this.element, { usingFilter: acceptSignificantNodes })\n    let recordingNodes = false\n\n    while (walker.nextNode()) {\n      const node = walker.currentNode\n      if (nodeIsBlockStartComment(node)) {\n        var blockIndex\n        if (blockIndex != null) {\n          blockIndex++\n        } else {\n          blockIndex = 0\n        }\n\n        if (blockIndex === index) {\n          recordingNodes = true\n        } else if (recordingNodes) {\n          break\n        }\n      } else if (recordingNodes) {\n        nodes.push(node)\n      }\n    }\n\n    return nodes\n  }\n}\n\nconst nodeLength = function(node) {\n  if (node.nodeType === Node.TEXT_NODE) {\n    if (nodeIsCursorTarget(node)) {\n      return 0\n    } else {\n      const string = node.textContent\n      return string.length\n    }\n  } else if (tagName(node) === \"br\" || nodeIsAttachmentElement(node)) {\n    return 1\n  } else {\n    return 0\n  }\n}\n\nconst acceptSignificantNodes = function(node) {\n  if (rejectEmptyTextNodes(node) === NodeFilter.FILTER_ACCEPT) {\n    return rejectAttachmentContents(node)\n  } else {\n    return NodeFilter.FILTER_REJECT\n  }\n}\n\nconst rejectEmptyTextNodes = function(node) {\n  if (nodeIsEmptyTextNode(node)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n\nconst rejectAttachmentContents = function(node) {\n  if (nodeIsAttachmentElement(node.parentNode)) {\n    return NodeFilter.FILTER_REJECT\n  } else {\n    return NodeFilter.FILTER_ACCEPT\n  }\n}\n","/* eslint-disable\n    id-length,\n    no-empty,\n*/\nimport { getDOMRange, setDOMRange } from \"trix/core/helpers\"\n\nexport default class PointMapper {\n  createDOMRangeFromPoint({ x, y }) {\n    let domRange\n    if (document.caretPositionFromPoint) {\n      const { offsetNode, offset } = document.caretPositionFromPoint(x, y)\n      domRange = document.createRange()\n      domRange.setStart(offsetNode, offset)\n      return domRange\n    } else if (document.caretRangeFromPoint) {\n      return document.caretRangeFromPoint(x, y)\n    } else if (document.body.createTextRange) {\n      const originalDOMRange = getDOMRange()\n      try {\n        // IE 11 throws \"Unspecified error\" when using moveToPoint\n        // during a drag-and-drop operation.\n        const textRange = document.body.createTextRange()\n        textRange.moveToPoint(x, y)\n        textRange.select()\n      } catch (error) {}\n      domRange = getDOMRange()\n      setDOMRange(originalDOMRange)\n      return domRange\n    }\n  }\n\n  getClientRectsForDOMRange(domRange) {\n    const array = Array.from(domRange.getClientRects())\n    const start = array[0]\n    const end = array[array.length - 1]\n\n    return [ start, end ]\n  }\n}\n","/* eslint-disable\n*/\nimport BasicObject from \"trix/core/basic_object\"\n\nimport LocationMapper from \"trix/models/location_mapper\"\nimport PointMapper from \"trix/models/point_mapper\"\n\nimport {\n  elementContainsNode,\n  getDOMRange,\n  getDOMSelection,\n  handleEvent,\n  innerElementIsActive,\n  nodeIsCursorTarget,\n  normalizeRange,\n  rangeIsCollapsed,\n  rangesAreEqual,\n  setDOMRange,\n} from \"trix/core/helpers\"\n\nexport default class SelectionManager extends BasicObject {\n  constructor(element) {\n    super(...arguments)\n    this.didMouseDown = this.didMouseDown.bind(this)\n    this.selectionDidChange = this.selectionDidChange.bind(this)\n    this.element = element\n    this.locationMapper = new LocationMapper(this.element)\n    this.pointMapper = new PointMapper()\n    this.lockCount = 0\n    handleEvent(\"mousedown\", { onElement: this.element, withCallback: this.didMouseDown })\n  }\n  getLocationRange(options = {}) {\n    if (options.strict === false) {\n      return this.createLocationRangeFromDOMRange(getDOMRange())\n    } else if (options.ignoreLock) {\n      return this.currentLocationRange\n    } else if (this.lockedLocationRange) {\n      return this.lockedLocationRange\n    } else {\n      return this.currentLocationRange\n    }\n  }\n\n  setLocationRange(locationRange) {\n    if (this.lockedLocationRange) return\n    locationRange = normalizeRange(locationRange)\n\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      setDOMRange(domRange)\n      this.updateCurrentLocationRange(locationRange)\n    }\n  }\n\n  setLocationRangeFromPointRange(pointRange) {\n    pointRange = normalizeRange(pointRange)\n    const startLocation = this.getLocationAtPoint(pointRange[0])\n    const endLocation = this.getLocationAtPoint(pointRange[1])\n    this.setLocationRange([ startLocation, endLocation ])\n  }\n\n  getClientRectAtLocationRange(locationRange) {\n    const domRange = this.createDOMRangeFromLocationRange(locationRange)\n    if (domRange) {\n      return this.getClientRectsForDOMRange(domRange)[1]\n    }\n  }\n\n  locationIsCursorTarget(location) {\n    const node = Array.from(this.findNodeAndOffsetFromLocation(location))[0]\n    return nodeIsCursorTarget(node)\n  }\n\n  lock() {\n    if (this.lockCount++ === 0) {\n      this.updateCurrentLocationRange()\n      this.lockedLocationRange = this.getLocationRange()\n    }\n  }\n\n  unlock() {\n    if (--this.lockCount === 0) {\n      const { lockedLocationRange } = this\n      this.lockedLocationRange = null\n      if (lockedLocationRange != null) {\n        return this.setLocationRange(lockedLocationRange)\n      }\n    }\n  }\n\n  clearSelection() {\n    return getDOMSelection()?.removeAllRanges()\n  }\n\n  selectionIsCollapsed() {\n    return getDOMRange()?.collapsed === true\n  }\n\n  selectionIsExpanded() {\n    return !this.selectionIsCollapsed()\n  }\n\n  createLocationRangeFromDOMRange(domRange, options) {\n    if (domRange == null || !this.domRangeWithinElement(domRange)) return\n\n    const start = this.findLocationFromContainerAndOffset(domRange.startContainer, domRange.startOffset, options)\n    if (!start) return\n\n    const end = domRange.collapsed\n      ? undefined\n      : this.findLocationFromContainerAndOffset(domRange.endContainer, domRange.endOffset, options)\n\n    return normalizeRange([ start, end ])\n  }\n\n  didMouseDown() {\n    return this.pauseTemporarily()\n  }\n\n  pauseTemporarily() {\n    let resumeHandlers\n    this.paused = true\n\n    const resume = () => {\n      this.paused = false\n      clearTimeout(resumeTimeout)\n\n      Array.from(resumeHandlers).forEach((handler) => {\n        handler.destroy()\n      })\n\n      if (elementContainsNode(document, this.element)) {\n        return this.selectionDidChange()\n      }\n    }\n\n    const resumeTimeout = setTimeout(resume, 200)\n\n    resumeHandlers = [ \"mousemove\", \"keydown\" ].map((eventName) =>\n      handleEvent(eventName, { onElement: document, withCallback: resume })\n    )\n  }\n\n  selectionDidChange() {\n    if (!this.paused && !innerElementIsActive(this.element)) {\n      return this.updateCurrentLocationRange()\n    }\n  }\n\n  updateCurrentLocationRange(locationRange) {\n    if (locationRange != null ? locationRange : locationRange = this.createLocationRangeFromDOMRange(getDOMRange())) {\n      if (!rangesAreEqual(locationRange, this.currentLocationRange)) {\n        this.currentLocationRange = locationRange\n        return this.delegate?.locationRangeDidChange?.(this.currentLocationRange.slice(0))\n      }\n    }\n  }\n\n  createDOMRangeFromLocationRange(locationRange) {\n    const rangeStart = this.findContainerAndOffsetFromLocation(locationRange[0])\n    const rangeEnd = rangeIsCollapsed(locationRange)\n      ? rangeStart\n      : this.findContainerAndOffsetFromLocation(locationRange[1]) || rangeStart\n\n    if (rangeStart != null && rangeEnd != null) {\n      const domRange = document.createRange()\n      domRange.setStart(...Array.from(rangeStart || []))\n      domRange.setEnd(...Array.from(rangeEnd || []))\n      return domRange\n    }\n  }\n\n  getLocationAtPoint(point) {\n    const domRange = this.createDOMRangeFromPoint(point)\n    if (domRange) {\n      return this.createLocationRangeFromDOMRange(domRange)?.[0]\n    }\n  }\n\n  domRangeWithinElement(domRange) {\n    if (domRange.collapsed) {\n      return elementContainsNode(this.element, domRange.startContainer)\n    } else {\n      return (\n        elementContainsNode(this.element, domRange.startContainer) &&\n        elementContainsNode(this.element, domRange.endContainer)\n      )\n    }\n  }\n}\n\nSelectionManager.proxyMethod(\"locationMapper.findLocationFromContainerAndOffset\")\nSelectionManager.proxyMethod(\"locationMapper.findContainerAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"locationMapper.findNodeAndOffsetFromLocation\")\nSelectionManager.proxyMethod(\"pointMapper.createDOMRangeFromPoint\")\nSelectionManager.proxyMethod(\"pointMapper.getClientRectsForDOMRange\")\n\n","import Attachment from \"./models/attachment\"\nimport AttachmentManager from \"./models/attachment_manager\"\nimport AttachmentPiece from \"./models/attachment_piece\"\nimport Block from \"./models/block\"\nimport Composition from \"./models/composition\"\nimport Cocument from \"./models/document\"\nimport Editor from \"./models/editor\"\nimport HTMLParser from \"./models/html_parser\"\nimport HTMLSanitizer from \"./models/html_sanitizer\"\nimport LineBreakInsertion from \"./models/line_break_insertion\"\nimport LocationMapper from \"./models/location_mapper\"\nimport ManagedAttachment from \"./models/managed_attachment\"\nimport Piece from \"./models/piece\"\nimport PointMapper from \"./models/point_mapper\"\nimport SelectionManager from \"./models/selection_manager\"\nimport SplittableList from \"./models/splittable_list\"\nimport StringPiece from \"./models/string_piece\"\nimport Text from \"./models/text\"\nimport UndoManager from \"./models/undo_manager\"\n\nexport default {\n  Attachment,\n  AttachmentManager,\n  AttachmentPiece,\n  Block,\n  Composition,\n  Cocument,\n  Editor,\n  HTMLParser,\n  HTMLSanitizer,\n  LineBreakInsertion,\n  LocationMapper,\n  ManagedAttachment,\n  Piece,\n  PointMapper,\n  SelectionManager,\n  SplittableList,\n  StringPiece,\n  Text,\n  UndoManager,\n}\n","import { version } from \"../../package.json\"\nimport config from \"trix/config\"\nimport models from \"trix/models\"\n\nconst Trix = {\n  VERSION: version,\n  config,\n}\n\nObject.assign(Trix, models)\n\nwindow.Trix = Trix\n\nexport default Trix\n","export default class ObjectGroup {\n  static groupObjects(ungroupedObjects = [], { depth, asTree } = {}) {\n    let group\n    if (asTree) {\n      if (depth == null) {\n        depth = 0\n      }\n    }\n    const objects = []\n\n    Array.from(ungroupedObjects).forEach((object) => {\n      if (group) {\n        if (object.canBeGrouped?.(depth) && group[group.length - 1].canBeGroupedWith?.(object, depth)) {\n          group.push(object)\n          return\n        } else {\n          objects.push(new this(group, { depth, asTree }))\n          group = null\n        }\n      }\n\n      if (object.canBeGrouped?.(depth)) {\n        group = [ object ]\n      } else {\n        objects.push(object)\n      }\n    })\n\n    if (group) {\n      objects.push(new this(group, { depth, asTree }))\n    }\n    return objects\n  }\n\n  constructor(objects = [], { depth, asTree }) {\n    this.objects = objects\n    if (asTree) {\n      this.depth = depth\n      this.objects = this.constructor.groupObjects(this.objects, { asTree, depth: this.depth + 1 })\n    }\n  }\n\n  getObjects() {\n    return this.objects\n  }\n\n  getDepth() {\n    return this.depth\n  }\n\n  getCacheKey() {\n    const keys = [ \"objectGroup\" ]\n    Array.from(this.getObjects()).forEach((object) => {\n      keys.push(object.getCacheKey())\n    })\n    return keys.join(\"/\")\n  }\n}\n","export default class ElementStore {\n  constructor(elements) {\n    this.reset(elements)\n  }\n\n  add(element) {\n    const key = getKey(element)\n    this.elements[key] = element\n  }\n\n  remove(element) {\n    const key = getKey(element)\n    const value = this.elements[key]\n    if (value) {\n      delete this.elements[key]\n      return value\n    }\n  }\n\n  reset(elements = []) {\n    this.elements = {}\n    Array.from(elements).forEach((element) => {\n      this.add(element)\n    })\n    return elements\n  }\n}\n\nconst getKey = (element) => element.dataset.trixStoreKey\n","import BasicObject from \"trix/core/basic_object\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\n\nexport default class ObjectView extends BasicObject {\n  constructor(object, options = {}) {\n    super(...arguments)\n    this.object = object\n    this.options = options\n    this.childViews = []\n    this.rootView = this\n  }\n\n  getNodes() {\n    if (!this.nodes) { this.nodes = this.createNodes() }\n    return this.nodes.map((node) => node.cloneNode(true))\n  }\n\n  invalidate() {\n    this.nodes = null\n    this.childViews = []\n    return this.parentView?.invalidate()\n  }\n\n  invalidateViewForObject(object) {\n    return this.findViewForObject(object)?.invalidate()\n  }\n\n  findOrCreateCachedChildView(viewClass, object, options) {\n    let view = this.getCachedViewForObject(object)\n    if (view) {\n      this.recordChildView(view)\n    } else {\n      view = this.createChildView(...arguments)\n      this.cacheViewForObject(view, object)\n    }\n    return view\n  }\n\n  createChildView(viewClass, object, options = {}) {\n    if (object instanceof ObjectGroup) {\n      options.viewClass = viewClass\n      viewClass = ObjectGroupView\n    }\n\n    const view = new viewClass(object, options)\n    return this.recordChildView(view)\n  }\n\n  recordChildView(view) {\n    view.parentView = this\n    view.rootView = this.rootView\n    this.childViews.push(view)\n    return view\n  }\n\n  getAllChildViews() {\n    let views = []\n\n    this.childViews.forEach((childView) => {\n      views.push(childView)\n      views = views.concat(childView.getAllChildViews())\n    })\n\n    return views\n  }\n\n  findElement() {\n    return this.findElementForObject(this.object)\n  }\n\n  findElementForObject(object) {\n    const id = object?.id\n    if (id) {\n      return this.rootView.element.querySelector(`[data-trix-id='${id}']`)\n    }\n  }\n\n  findViewForObject(object) {\n    for (const view of this.getAllChildViews()) {\n      if (view.object === object) {\n        return view\n      }\n    }\n  }\n\n  getViewCache() {\n    if (this.rootView === this) {\n      if (this.isViewCachingEnabled()) {\n        if (!this.viewCache) { this.viewCache = {} }\n        return this.viewCache\n      }\n    } else {\n      return this.rootView.getViewCache()\n    }\n  }\n\n  isViewCachingEnabled() {\n    return this.shouldCacheViews !== false\n  }\n\n  enableViewCaching() {\n    this.shouldCacheViews = true\n  }\n\n  disableViewCaching() {\n    this.shouldCacheViews = false\n  }\n\n  getCachedViewForObject(object) {\n    return this.getViewCache()?.[object.getCacheKey()]\n  }\n\n  cacheViewForObject(view, object) {\n    const cache = this.getViewCache()\n    if (cache) {\n      cache[object.getCacheKey()] = view\n    }\n  }\n\n  garbageCollectCachedViews() {\n    const cache = this.getViewCache()\n    if (cache) {\n      const views = this.getAllChildViews().concat(this)\n      const objectKeys = views.map((view) => view.object.getCacheKey())\n      for (const key in cache) {\n        if (!objectKeys.includes(key)) {\n          delete cache[key]\n        }\n      }\n    }\n  }\n}\n\nexport class ObjectGroupView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.objectGroup = this.object\n    this.viewClass = this.options.viewClass\n    delete this.options.viewClass\n  }\n\n  getChildViews() {\n    if (!this.childViews.length) {\n      Array.from(this.objectGroup.getObjects()).forEach((object) => {\n        this.findOrCreateCachedChildView(this.viewClass, object, this.options)\n      })\n    }\n    return this.childViews\n  }\n\n  createNodes() {\n    const element = this.createContainerElement()\n\n    this.getChildViews().forEach((view) => {\n      Array.from(view.getNodes()).forEach((node) => {\n        element.appendChild(node)\n      })\n    })\n\n    return [ element ]\n  }\n\n  createContainerElement(depth = this.objectGroup.getDepth()) {\n    return this.getChildViews()[0].createContainerElement(depth)\n  }\n}\n","import config from \"trix/config\"\nimport { ZERO_WIDTH_SPACE } from \"trix/constants\"\nimport { copyObject, makeElement } from \"trix/core/helpers\"\nimport ObjectView from \"trix/views/object_view\"\n\nconst { css } = config\n\nexport default class AttachmentView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.attachment = this.object\n    this.attachment.uploadProgressDelegate = this\n    this.attachmentPiece = this.options.piece\n  }\n\n  createContentNodes() {\n    return []\n  }\n\n  createNodes() {\n    let innerElement\n    const figure = innerElement = makeElement({\n      tagName: \"figure\",\n      className: this.getClassName(),\n      data: this.getData(),\n      editable: false,\n    })\n\n    const href = this.getHref()\n    if (href) {\n      innerElement = makeElement({ tagName: \"a\", editable: false, attributes: { href, tabindex: -1 } })\n      figure.appendChild(innerElement)\n    }\n\n    if (this.attachment.hasContent()) {\n      innerElement.innerHTML = this.attachment.getContent()\n    } else {\n      this.createContentNodes().forEach((node) => {\n        innerElement.appendChild(node)\n      })\n    }\n\n    innerElement.appendChild(this.createCaptionElement())\n\n    if (this.attachment.isPending()) {\n      this.progressElement = makeElement({\n        tagName: \"progress\",\n        attributes: {\n          class: css.attachmentProgress,\n          value: this.attachment.getUploadProgress(),\n          max: 100,\n        },\n        data: {\n          trixMutable: true,\n          trixStoreKey: [ \"progressElement\", this.attachment.id ].join(\"/\"),\n        },\n      })\n\n      figure.appendChild(this.progressElement)\n    }\n\n    return [ createCursorTarget(\"left\"), figure, createCursorTarget(\"right\") ]\n  }\n\n  createCaptionElement() {\n    const figcaption = makeElement({ tagName: \"figcaption\", className: css.attachmentCaption })\n    const caption = this.attachmentPiece.getCaption()\n    if (caption) {\n      figcaption.classList.add(`${css.attachmentCaption}--edited`)\n      figcaption.textContent = caption\n    } else {\n      let name, size\n      const captionConfig = this.getCaptionConfig()\n      if (captionConfig.name) {\n        name = this.attachment.getFilename()\n      }\n      if (captionConfig.size) {\n        size = this.attachment.getFormattedFilesize()\n      }\n\n      if (name) {\n        const nameElement = makeElement({ tagName: \"span\", className: css.attachmentName, textContent: name })\n        figcaption.appendChild(nameElement)\n      }\n\n      if (size) {\n        if (name) {\n          figcaption.appendChild(document.createTextNode(\" \"))\n        }\n        const sizeElement = makeElement({ tagName: \"span\", className: css.attachmentSize, textContent: size })\n        figcaption.appendChild(sizeElement)\n      }\n    }\n\n    return figcaption\n  }\n\n  getClassName() {\n    const names = [ css.attachment, `${css.attachment}--${this.attachment.getType()}` ]\n    const extension = this.attachment.getExtension()\n    if (extension) {\n      names.push(`${css.attachment}--${extension}`)\n    }\n    return names.join(\" \")\n  }\n\n  getData() {\n    const data = {\n      trixAttachment: JSON.stringify(this.attachment),\n      trixContentType: this.attachment.getContentType(),\n      trixId: this.attachment.id,\n    }\n\n    const { attributes } = this.attachmentPiece\n    if (!attributes.isEmpty()) {\n      data.trixAttributes = JSON.stringify(attributes)\n    }\n\n    if (this.attachment.isPending()) {\n      data.trixSerialize = false\n    }\n\n    return data\n  }\n\n  getHref() {\n    if (!htmlContainsTagName(this.attachment.getContent(), \"a\")) {\n      return this.attachment.getHref()\n    }\n  }\n\n  getCaptionConfig() {\n    const type = this.attachment.getType()\n    const captionConfig = copyObject(config.attachments[type]?.caption)\n    if (type === \"file\") {\n      captionConfig.name = true\n    }\n    return captionConfig\n  }\n\n  findProgressElement() {\n    return this.findElement()?.querySelector(\"progress\")\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeUploadProgress() {\n    const value = this.attachment.getUploadProgress()\n    const progressElement = this.findProgressElement()\n    if (progressElement) {\n      progressElement.value = value\n    }\n  }\n}\n\nconst createCursorTarget = (name) =>\n  makeElement({\n    tagName: \"span\",\n    textContent: ZERO_WIDTH_SPACE,\n    data: {\n      trixCursorTarget: name,\n      trixSerialize: false,\n    },\n  })\n\nconst htmlContainsTagName = function(html, tagName) {\n  const div = makeElement(\"div\")\n  div.innerHTML = html || \"\"\n  return div.querySelector(tagName)\n}\n","import config from \"trix/config\"\nimport { makeElement } from \"trix/core/helpers\"\n\nimport AttachmentView from \"trix/views/attachment_view\"\n\nexport default class PreviewableAttachmentView extends AttachmentView {\n  constructor() {\n    super(...arguments)\n    this.attachment.previewDelegate = this\n  }\n\n  createContentNodes() {\n    this.image = makeElement({\n      tagName: \"img\",\n      attributes: {\n        src: \"\",\n      },\n      data: {\n        trixMutable: true,\n      },\n    })\n\n    this.refresh(this.image)\n    return [ this.image ]\n  }\n\n  createCaptionElement() {\n    const figcaption = super.createCaptionElement(...arguments)\n    if (!figcaption.textContent) {\n      figcaption.setAttribute(\"data-trix-placeholder\", config.lang.captionPlaceholder)\n    }\n    return figcaption\n  }\n\n  refresh(image) {\n    if (!image) { image = this.findElement()?.querySelector(\"img\") }\n    if (image) {\n      return this.updateAttributesForImage(image)\n    }\n  }\n\n  updateAttributesForImage(image) {\n    const url = this.attachment.getURL()\n    const previewURL = this.attachment.getPreviewURL()\n    image.src = previewURL || url\n\n    if (previewURL === url) {\n      image.removeAttribute(\"data-trix-serialized-attributes\")\n    } else {\n      const serializedAttributes = JSON.stringify({ src: url })\n      image.setAttribute(\"data-trix-serialized-attributes\", serializedAttributes)\n    }\n\n    const width = this.attachment.getWidth()\n    const height = this.attachment.getHeight()\n\n    if (width != null) {\n      image.width = width\n    }\n    if (height != null) {\n      image.height = height\n    }\n\n    const storeKey = [ \"imageElement\", this.attachment.id, image.src, image.width, image.height ].join(\"/\")\n    image.dataset.trixStoreKey = storeKey\n  }\n\n  // Attachment delegate\n\n  attachmentDidChangeAttributes() {\n    this.refresh(this.image)\n    return this.refresh()\n  }\n}\n","/* eslint-disable\n    no-useless-escape,\n    no-var,\n*/\nimport { NON_BREAKING_SPACE } from \"trix/constants\"\n\nimport ObjectView from \"trix/views/object_view\"\nimport AttachmentView from \"trix/views/attachment_view\"\nimport PreviewableAttachmentView from \"trix/views/previewable_attachment_view\"\n\nimport { findInnerElement, getTextConfig, makeElement } from \"trix/core/helpers\"\n\nexport default class PieceView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.piece = this.object\n    this.attributes = this.piece.getAttributes()\n    this.textConfig = this.options.textConfig\n    this.context = this.options.context\n\n    if (this.piece.attachment) {\n      this.attachment = this.piece.attachment\n    } else {\n      this.string = this.piece.toString()\n    }\n  }\n\n  createNodes() {\n    let nodes = this.attachment ? this.createAttachmentNodes() : this.createStringNodes()\n    const element = this.createElement()\n    if (element) {\n      const innerElement = findInnerElement(element)\n      Array.from(nodes).forEach((node) => {\n        innerElement.appendChild(node)\n      })\n      nodes = [ element ]\n    }\n    return nodes\n  }\n\n  createAttachmentNodes() {\n    const constructor = this.attachment.isPreviewable() ? PreviewableAttachmentView : AttachmentView\n\n    const view = this.createChildView(constructor, this.piece.attachment, { piece: this.piece })\n    return view.getNodes()\n  }\n\n  createStringNodes() {\n    if (this.textConfig?.plaintext) {\n      return [ document.createTextNode(this.string) ]\n    } else {\n      const nodes = []\n      const iterable = this.string.split(\"\\n\")\n      for (let index = 0; index < iterable.length; index++) {\n        const substring = iterable[index]\n        if (index > 0) {\n          const element = makeElement(\"br\")\n          nodes.push(element)\n        }\n\n        if (substring.length) {\n          const node = document.createTextNode(this.preserveSpaces(substring))\n          nodes.push(node)\n        }\n      }\n      return nodes\n    }\n  }\n\n  createElement() {\n    let element, key, value\n    const styles = {}\n\n    for (key in this.attributes) {\n      value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.tagName) {\n          var innerElement\n          const pendingElement = makeElement(config.tagName)\n\n          if (innerElement) {\n            innerElement.appendChild(pendingElement)\n            innerElement = pendingElement\n          } else {\n            element = innerElement = pendingElement\n          }\n        }\n\n        if (config.styleProperty) {\n          styles[config.styleProperty] = value\n        }\n\n        if (config.style) {\n          for (key in config.style) {\n            value = config.style[key]\n            styles[key] = value\n          }\n        }\n      }\n    }\n\n    if (Object.keys(styles).length) {\n      if (!element) { element = makeElement(\"span\") }\n      for (key in styles) {\n        value = styles[key]\n        element.style[key] = value\n      }\n    }\n    return element\n  }\n\n  createContainerElement() {\n    for (const key in this.attributes) {\n      const value = this.attributes[key]\n      const config = getTextConfig(key)\n      if (config) {\n        if (config.groupTagName) {\n          const attributes = {}\n          attributes[key] = value\n          return makeElement(config.groupTagName, attributes)\n        }\n      }\n    }\n  }\n\n  preserveSpaces(string) {\n    if (this.context.isLast) {\n      string = string.replace(/\\ $/, NON_BREAKING_SPACE)\n    }\n\n    string = string\n      .replace(/(\\S)\\ {3}(\\S)/g, `$1 ${NON_BREAKING_SPACE} $2`)\n      .replace(/\\ {2}/g, `${NON_BREAKING_SPACE} `)\n      .replace(/\\ {2}/g, ` ${NON_BREAKING_SPACE}`)\n\n    if (this.context.isFirst || this.context.followsWhitespace) {\n      string = string.replace(/^\\ /, NON_BREAKING_SPACE)\n    }\n\n    return string\n  }\n}\n","/* eslint-disable\n    no-var,\n*/\nimport ObjectView from \"trix/views/object_view\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport PieceView from \"trix/views/piece_view\"\n\nexport default class TextView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.text = this.object\n    this.textConfig = this.options.textConfig\n  }\n\n  createNodes() {\n    const nodes = []\n    const pieces = ObjectGroup.groupObjects(this.getPieces())\n    const lastIndex = pieces.length - 1\n\n    for (let index = 0; index < pieces.length; index++) {\n      const piece = pieces[index]\n      const context = {}\n      if (index === 0) {\n        context.isFirst = true\n      }\n      if (index === lastIndex) {\n        context.isLast = true\n      }\n      if (endsWithWhitespace(previousPiece)) {\n        context.followsWhitespace = true\n      }\n\n      const view = this.findOrCreateCachedChildView(PieceView, piece, { textConfig: this.textConfig, context })\n      nodes.push(...Array.from(view.getNodes() || []))\n\n      var previousPiece = piece\n    }\n    return nodes\n  }\n\n  getPieces() {\n    return Array.from(this.text.getPieces()).filter((piece) => !piece.hasAttribute(\"blockBreak\"))\n  }\n}\n\nconst endsWithWhitespace = (piece) => /\\s$/.test(piece?.toString())\n","import config from \"trix/config\"\nimport ObjectView from \"trix/views/object_view\"\nimport TextView from \"trix/views/text_view\"\n\nimport { getBlockConfig, makeElement } from \"trix/core/helpers\"\nconst { css } = config\n\nexport default class BlockView extends ObjectView {\n  constructor() {\n    super(...arguments)\n    this.block = this.object\n    this.attributes = this.block.getAttributes()\n  }\n\n  createNodes() {\n    const comment = document.createComment(\"block\")\n    const nodes = [ comment ]\n    if (this.block.isEmpty()) {\n      nodes.push(makeElement(\"br\"))\n    } else {\n      const textConfig = getBlockConfig(this.block.getLastAttribute())?.text\n      const textView = this.findOrCreateCachedChildView(TextView, this.block.text, { textConfig })\n      nodes.push(...Array.from(textView.getNodes() || []))\n      if (this.shouldAddExtraNewlineElement()) {\n        nodes.push(makeElement(\"br\"))\n      }\n    }\n\n    if (this.attributes.length) {\n      return nodes\n    } else {\n      let attributes\n      const { tagName } = config.blockAttributes.default\n      if (this.block.isRTL()) {\n        attributes = { dir: \"rtl\" }\n      }\n\n      const element = makeElement({ tagName, attributes })\n      nodes.forEach((node) => element.appendChild(node))\n      return [ element ]\n    }\n  }\n\n  createContainerElement(depth) {\n    let attributes, className\n    const attributeName = this.attributes[depth]\n\n    const { tagName } = getBlockConfig(attributeName)\n    if (depth === 0 && this.block.isRTL()) {\n      attributes = { dir: \"rtl\" }\n    }\n\n    if (attributeName === \"attachmentGallery\") {\n      const size = this.block.getBlockBreakPosition()\n      className = `${css.attachmentGallery} ${css.attachmentGallery}--${size}`\n    }\n\n    return makeElement({ tagName, className, attributes })\n  }\n\n  // A single <br> at the end of a block element has no visual representation\n  // so add an extra one.\n  shouldAddExtraNewlineElement() {\n    return /\\n\\n$/.test(this.block.toString())\n  }\n}\n","import { makeElement } from \"trix/core/helpers\"\n\nimport ElementStore from \"trix/core/collections/element_store\"\nimport ObjectGroup from \"trix/core/collections/object_group\"\nimport ObjectView from \"trix/views/object_view\"\nimport BlockView from \"trix/views/block_view\"\n\nimport { defer } from \"trix/core/helpers\"\n\nexport default class DocumentView extends ObjectView {\n  static render(document) {\n    const element = makeElement(\"div\")\n    const view = new this(document, { element })\n    view.render()\n    view.sync()\n    return element\n  }\n\n  constructor() {\n    super(...arguments)\n    this.element = this.options.element\n    this.elementStore = new ElementStore()\n    this.setDocument(this.object)\n  }\n\n  setDocument(document) {\n    if (!document.isEqualTo(this.document)) {\n      this.document = this.object = document\n    }\n  }\n\n  render() {\n    this.childViews = []\n\n    this.shadowElement = makeElement(\"div\")\n\n    if (!this.document.isEmpty()) {\n      const objects = ObjectGroup.groupObjects(this.document.getBlocks(), { asTree: true })\n\n      Array.from(objects).forEach((object) => {\n        const view = this.findOrCreateCachedChildView(BlockView, object)\n        Array.from(view.getNodes()).map((node) => this.shadowElement.appendChild(node))\n      })\n    }\n  }\n\n  isSynced() {\n    return elementsHaveEqualHTML(this.shadowElement, this.element)\n  }\n\n  sync() {\n    const fragment = this.createDocumentFragmentForSync()\n    while (this.element.lastChild) {\n      this.element.removeChild(this.element.lastChild)\n    }\n    this.element.appendChild(fragment)\n    return this.didSync()\n  }\n\n  // Private\n\n  didSync() {\n    this.elementStore.reset(findStoredElements(this.element))\n    return defer(() => this.garbageCollectCachedViews())\n  }\n\n  createDocumentFragmentForSync() {\n    const fragment = document.createDocumentFragment()\n\n    Array.from(this.shadowElement.childNodes).forEach((node) => {\n      fragment.appendChild(node.cloneNode(true))\n    })\n\n    Array.from(findStoredElements(fragment)).forEach((element) => {\n      const storedElement = this.elementStore.remove(element)\n      if (storedElement) {\n        element.parentNode.replaceChild(storedElement, element)\n      }\n    })\n\n    return fragment\n  }\n}\n\nconst findStoredElements = (element) => element.querySelectorAll(\"[data-trix-store-key]\")\n\nconst elementsHaveEqualHTML = (element, otherElement) =>\n  ignoreSpaces(element.innerHTML) === ignoreSpaces(otherElement.innerHTML)\n\nconst ignoreSpaces = (html) => html.replace(/&nbsp;/g, \" \")\n","/* eslint-disable\n    no-empty,\n*/\nimport { removeNode } from \"trix/core/helpers\"\n\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\nimport HTMLParser from \"trix/models/html_parser\"\n\nconst unserializableElementSelector = \"[data-trix-serialize=false]\"\nconst unserializableAttributeNames = [\n  \"contenteditable\",\n  \"data-trix-id\",\n  \"data-trix-store-key\",\n  \"data-trix-mutable\",\n  \"data-trix-placeholder\",\n  \"tabindex\",\n]\nconst serializedAttributesAttribute = \"data-trix-serialized-attributes\"\nconst serializedAttributesSelector = `[${serializedAttributesAttribute}]`\n\nconst blockCommentPattern = new RegExp(\"<!--block-->\", \"g\")\n\nconst serializers = {\n  \"application/json\": function(serializable) {\n    let document\n    if (serializable instanceof Document) {\n      document = serializable\n    } else if (serializable instanceof HTMLElement) {\n      document = HTMLParser.parse(serializable.innerHTML).getDocument()\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    return document.toSerializableDocument().toJSONString()\n  },\n\n  \"text/html\": function(serializable) {\n    let element\n    if (serializable instanceof Document) {\n      element = DocumentView.render(serializable)\n    } else if (serializable instanceof HTMLElement) {\n      element = serializable.cloneNode(true)\n    } else {\n      throw new Error(\"unserializable object\")\n    }\n\n    // Remove unserializable elements\n    Array.from(element.querySelectorAll(unserializableElementSelector)).forEach((el) => {\n      removeNode(el)\n    })\n\n    // Remove unserializable attributes\n    unserializableAttributeNames.forEach((attribute) => {\n      Array.from(element.querySelectorAll(`[${attribute}]`)).forEach((el) => {\n        el.removeAttribute(attribute)\n      })\n    })\n\n    // Rewrite elements with serialized attribute overrides\n    Array.from(element.querySelectorAll(serializedAttributesSelector)).forEach((el) => {\n      try {\n        const attributes = JSON.parse(el.getAttribute(serializedAttributesAttribute))\n        el.removeAttribute(serializedAttributesAttribute)\n        for (const name in attributes) {\n          const value = attributes[name]\n          el.setAttribute(name, value)\n        }\n      } catch (error) {}\n    })\n\n    return element.innerHTML.replace(blockCommentPattern, \"\")\n  },\n}\n\nconst deserializers = {\n  \"application/json\": function(string) {\n    return Document.fromJSONString(string)\n  },\n\n  \"text/html\": function(string) {\n    return HTMLParser.parse(string).getDocument()\n  },\n}\n\nexport const serializeToContentType = function(serializable, contentType) {\n  const serializer = serializers[contentType]\n  if (serializer) {\n    return serializer(serializable)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n\nexport const deserializeFromContentType = function(string, contentType) {\n  const deserializer = deserializers[contentType]\n  if (deserializer) {\n    return deserializer(string)\n  } else {\n    throw new Error(`unknown content type: ${contentType}`)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport {\n  findClosestElementFromNode,\n  nodeIsBlockStartComment,\n  nodeIsEmptyTextNode,\n  normalizeSpaces,\n  summarizeStringChange,\n  tagName,\n} from \"trix/core/helpers\"\n\nconst mutableAttributeName = \"data-trix-mutable\"\nconst mutableSelector = `[${mutableAttributeName}]`\n\nconst options = {\n  attributes: true,\n  childList: true,\n  characterData: true,\n  characterDataOldValue: true,\n  subtree: true,\n}\n\nexport default class MutationObserver extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didMutate = this.didMutate.bind(this)\n    this.element = element\n    this.observer = new window.MutationObserver(this.didMutate)\n    this.start()\n  }\n\n  start() {\n    this.reset()\n    return this.observer.observe(this.element, options)\n  }\n\n  stop() {\n    return this.observer.disconnect()\n  }\n\n  didMutate(mutations) {\n    this.mutations.push(...Array.from(this.findSignificantMutations(mutations) || []))\n\n    if (this.mutations.length) {\n      this.delegate?.elementDidMutate?.(this.getMutationSummary())\n      return this.reset()\n    }\n  }\n\n  // Private\n\n  reset() {\n    this.mutations = []\n  }\n\n  findSignificantMutations(mutations) {\n    return mutations.filter((mutation) => {\n      return this.mutationIsSignificant(mutation)\n    })\n  }\n\n  mutationIsSignificant(mutation) {\n    if (this.nodeIsMutable(mutation.target)) {\n      return false\n    }\n    for (const node of Array.from(this.nodesModifiedByMutation(mutation))) {\n      if (this.nodeIsSignificant(node)) return true\n    }\n    return false\n  }\n\n  nodeIsSignificant(node) {\n    return node !== this.element && !this.nodeIsMutable(node) && !nodeIsEmptyTextNode(node)\n  }\n\n  nodeIsMutable(node) {\n    return findClosestElementFromNode(node, { matchingSelector: mutableSelector })\n  }\n\n  nodesModifiedByMutation(mutation) {\n    const nodes = []\n    switch (mutation.type) {\n      case \"attributes\":\n        if (mutation.attributeName !== mutableAttributeName) {\n          nodes.push(mutation.target)\n        }\n        break\n      case \"characterData\":\n        // Changes to text nodes should consider the parent element\n        nodes.push(mutation.target.parentNode)\n        nodes.push(mutation.target)\n        break\n      case \"childList\":\n        // Consider each added or removed node\n        nodes.push(...Array.from(mutation.addedNodes || []))\n        nodes.push(...Array.from(mutation.removedNodes || []))\n        break\n    }\n    return nodes\n  }\n\n  getMutationSummary() {\n    return this.getTextMutationSummary()\n  }\n\n  getTextMutationSummary() {\n    const { additions, deletions } = this.getTextChangesFromCharacterData()\n    const textChanges = this.getTextChangesFromChildList()\n\n    Array.from(textChanges.additions).forEach((addition) => {\n      if (!Array.from(additions).includes(addition)) {\n        additions.push(addition)\n      }\n    })\n\n    deletions.push(...Array.from(textChanges.deletions || []))\n\n    const summary = {}\n\n    const added = additions.join(\"\")\n    if (added) {\n      summary.textAdded = added\n    }\n\n    const deleted = deletions.join(\"\")\n    if (deleted) {\n      summary.textDeleted = deleted\n    }\n\n    return summary\n  }\n\n  getMutationsByType(type) {\n    return Array.from(this.mutations).filter((mutation) => mutation.type === type)\n  }\n\n  getTextChangesFromChildList() {\n    let textAdded, textRemoved\n    const addedNodes = []\n    const removedNodes = []\n\n    Array.from(this.getMutationsByType(\"childList\")).forEach((mutation) => {\n      addedNodes.push(...Array.from(mutation.addedNodes || []))\n      removedNodes.push(...Array.from(mutation.removedNodes || []))\n    })\n\n    const singleBlockCommentRemoved =\n      addedNodes.length === 0 && removedNodes.length === 1 && nodeIsBlockStartComment(removedNodes[0])\n\n    if (singleBlockCommentRemoved) {\n      textAdded = []\n      textRemoved = [ \"\\n\" ]\n    } else {\n      textAdded = getTextForNodes(addedNodes)\n      textRemoved = getTextForNodes(removedNodes)\n    }\n\n    const additions = textAdded.filter((text, index) => text !== textRemoved[index]).map(normalizeSpaces)\n    const deletions = textRemoved.filter((text, index) => text !== textAdded[index]).map(normalizeSpaces)\n\n    return { additions, deletions }\n  }\n\n  getTextChangesFromCharacterData() {\n    let added, removed\n    const characterMutations = this.getMutationsByType(\"characterData\")\n\n    if (characterMutations.length) {\n      const startMutation = characterMutations[0],\n        endMutation = characterMutations[characterMutations.length - 1]\n\n      const oldString = normalizeSpaces(startMutation.oldValue)\n      const newString = normalizeSpaces(endMutation.target.data)\n      const summarized = summarizeStringChange(oldString, newString)\n      added = summarized.added\n      removed = summarized.removed\n    }\n\n    return {\n      additions: added ? [ added ] : [],\n      deletions: removed ? [ removed ] : [],\n    }\n  }\n}\n\nconst getTextForNodes = function(nodes = []) {\n  const text = []\n  for (const node of Array.from(nodes)) {\n    switch (node.nodeType) {\n      case Node.TEXT_NODE:\n        text.push(node.data)\n        break\n      case Node.ELEMENT_NODE:\n        if (tagName(node) === \"br\") {\n          text.push(\"\\n\")\n        } else {\n          text.push(...Array.from(getTextForNodes(node.childNodes) || []))\n        }\n        break\n    }\n  }\n  return text\n}\n","import \"trix/views/object_view\"\nimport BasicObject from \"trix/core/basic_object\"\n\nexport default class Controller extends BasicObject {}\n","/* eslint-disable\n    no-empty,\n*/\nimport Operation from \"trix/core/utilities/operation\"\n\nexport default class FileVerificationOperation extends Operation {\n  constructor(file) {\n    super(...arguments)\n    this.file = file\n  }\n\n  perform(callback) {\n    const reader = new FileReader()\n\n    reader.onerror = () => callback(false)\n\n    reader.onload = () => {\n      reader.onerror = null\n      try {\n        reader.abort()\n      } catch (error) {}\n      return callback(true, this.file)\n    }\n\n    return reader.readAsArrayBuffer(this.file)\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport MutationObserver from \"trix/observers/mutation_observer\"\nimport FileVerificationOperation from \"trix/operations/file_verification_operation\"\n\nimport { handleEvent, innerElementIsActive } from \"trix/core/helpers\"\n\nexport default class InputController extends BasicObject {\n\n  static events = {}\n\n  constructor(element) {\n    super(...arguments)\n    this.element = element\n    this.mutationObserver = new MutationObserver(this.element)\n    this.mutationObserver.delegate = this\n    for (const eventName in this.constructor.events) {\n      handleEvent(eventName, { onElement: this.element, withCallback: this.handlerFor(eventName) })\n    }\n  }\n\n  elementDidMutate(mutationSummary) {}\n\n  editorWillSyncDocumentView() {\n    return this.mutationObserver.stop()\n  }\n\n  editorDidSyncDocumentView() {\n    return this.mutationObserver.start()\n  }\n\n  requestRender() {\n    return this.delegate?.inputControllerDidRequestRender?.()\n  }\n\n  requestReparse() {\n    this.delegate?.inputControllerDidRequestReparse?.()\n    return this.requestRender()\n  }\n\n  attachFiles(files) {\n    const operations = Array.from(files).map((file) => new FileVerificationOperation(file))\n    return Promise.all(operations).then((files) => {\n      this.handleInput(function() {\n        this.delegate?.inputControllerWillAttachFiles()\n        this.responder?.insertFiles(files)\n        return this.requestRender()\n      })\n    })\n  }\n\n  // Private\n\n  handlerFor(eventName) {\n    return (event) => {\n      if (!event.defaultPrevented) {\n        this.handleInput(() => {\n          if (!innerElementIsActive(this.element)) {\n            this.eventName = eventName\n            this.constructor.events[eventName].call(this, event)\n          }\n        })\n      }\n    }\n  }\n\n  handleInput(callback) {\n    try {\n      this.delegate?.inputControllerWillHandleInput()\n      callback.call(this)\n    } finally {\n      this.delegate?.inputControllerDidHandleInput()\n    }\n  }\n\n  createLinkHTML(href, text) {\n    const link = document.createElement(\"a\")\n    link.href = href\n    link.textContent = text ? text : href\n    return link.outerHTML\n  }\n}\n\n","import config from \"trix/config\"\nimport UTF16String from \"trix/core/utilities/utf16_string\"\nimport BasicObject from \"trix/core/basic_object\"\nimport InputController from \"trix/controllers/input_controller\"\nimport DocumentView from \"trix/views/document_view\"\nimport Document from \"trix/models/document\"\n\nimport {\n  dataTransferIsPlainText,\n  dataTransferIsWritable,\n  keyEventIsKeyboardCommand,\n  makeElement,\n  objectsAreEqual,\n  removeNode,\n  squishBreakableWhitespace,\n} from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst { browser, keyNames } = config\nlet pastedFileCount = 0\n\nexport default class Level0InputController extends InputController {\n\n  static events = {\n    keydown(event) {\n      if (!this.isComposing()) {\n        this.resetInputSummary()\n      }\n      this.inputSummary.didInput = true\n\n      const keyName = keyNames[event.keyCode]\n      if (keyName) {\n        let context = this.keys\n\n        ;[ \"ctrl\", \"alt\", \"shift\", \"meta\" ].forEach((modifier) => {\n          if (event[`${modifier}Key`]) {\n            if (modifier === \"ctrl\") {\n              modifier = \"control\"\n            }\n            context = context?.[modifier]\n          }\n        })\n\n        if (context?.[keyName] != null) {\n          this.setInputSummary({ keyName })\n          selectionChangeObserver.reset()\n          context[keyName].call(this, event)\n        }\n      }\n\n      if (keyEventIsKeyboardCommand(event)) {\n        const character = String.fromCharCode(event.keyCode).toLowerCase()\n        if (character) {\n          const keys = [ \"alt\", \"shift\" ].map((modifier) => {\n            if (event[`${modifier}Key`]) {\n              return modifier\n            }\n          }).filter(key => key)\n          keys.push(character)\n          if (this.delegate?.inputControllerDidReceiveKeyboardCommand(keys)) {\n            event.preventDefault()\n          }\n        }\n      }\n    },\n\n    keypress(event) {\n      if (this.inputSummary.eventName != null) return\n      if (event.metaKey) return\n      if (event.ctrlKey && !event.altKey) return\n\n      const string = stringFromKeyEvent(event)\n      if (string) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(string)\n        return this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n      }\n    },\n\n    textInput(event) {\n      // Handle autocapitalization\n      const { data } = event\n      const { textAdded } = this.inputSummary\n      if (textAdded && textAdded !== data && textAdded.toUpperCase() === data) {\n        const range = this.getSelectedRange()\n        this.setSelectedRange([ range[0], range[1] + textAdded.length ])\n        this.responder?.insertString(data)\n        this.setInputSummary({ textAdded: data })\n        return this.setSelectedRange(range)\n      }\n    },\n\n    dragenter(event) {\n      event.preventDefault()\n    },\n\n    dragstart(event) {\n      this.serializeSelectionToDataTransfer(event.dataTransfer)\n      this.draggedRange = this.getSelectedRange()\n      return this.delegate?.inputControllerDidStartDrag?.()\n    },\n\n    dragover(event) {\n      if (this.draggedRange || this.canAcceptDataTransfer(event.dataTransfer)) {\n        event.preventDefault()\n        const draggingPoint = { x: event.clientX, y: event.clientY }\n        if (!objectsAreEqual(draggingPoint, this.draggingPoint)) {\n          this.draggingPoint = draggingPoint\n          return this.delegate?.inputControllerDidReceiveDragOverPoint?.(this.draggingPoint)\n        }\n      }\n    },\n\n    dragend(event) {\n      this.delegate?.inputControllerDidCancelDrag?.()\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    drop(event) {\n      event.preventDefault()\n      const files = event.dataTransfer?.files\n      const documentJSON = event.dataTransfer.getData(\"application/x-trix-document\")\n\n      const point = { x: event.clientX, y: event.clientY }\n      this.responder?.setLocationRangeFromPointRange(point)\n\n      if (files?.length) {\n        this.attachFiles(files)\n      } else if (this.draggedRange) {\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.draggedRange)\n        this.draggedRange = null\n        this.requestRender()\n      } else if (documentJSON) {\n        const document = Document.fromJSONString(documentJSON)\n        this.responder?.insertDocument(document)\n        this.requestRender()\n      }\n\n      this.draggedRange = null\n      this.draggingPoint = null\n    },\n\n    cut(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n\n        this.delegate?.inputControllerWillCutText()\n        this.deleteInDirection(\"backward\")\n        if (event.defaultPrevented) {\n          return this.requestRender()\n        }\n      }\n    },\n\n    copy(event) {\n      if (this.responder?.selectionIsExpanded()) {\n        if (this.serializeSelectionToDataTransfer(event.clipboardData)) {\n          event.preventDefault()\n        }\n      }\n    },\n\n    paste(event) {\n      const clipboard = event.clipboardData || event.testClipboardData\n      const paste = { clipboard }\n\n      if (!clipboard || pasteEventIsCrippledSafariHTMLPaste(event)) {\n        this.getPastedHTMLUsingHiddenElement((html) => {\n          paste.type = \"text/html\"\n          paste.html = html\n          this.delegate?.inputControllerWillPaste(paste)\n          this.responder?.insertHTML(paste.html)\n          this.requestRender()\n          return this.delegate?.inputControllerDidPaste(paste)\n        })\n        return\n      }\n\n      const href = clipboard.getData(\"URL\")\n      const html = clipboard.getData(\"text/html\")\n      const name = clipboard.getData(\"public.url-name\")\n\n      if (href) {\n        let string\n        paste.type = \"text/html\"\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (dataTransferIsPlainText(clipboard)) {\n        paste.type = \"text/plain\"\n        paste.string = clipboard.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.setInputSummary({ textAdded: paste.string, didDelete: this.selectionIsExpanded() })\n        this.responder?.insertString(paste.string)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (html) {\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.requestRender()\n        this.delegate?.inputControllerDidPaste(paste)\n      } else if (Array.from(clipboard.types).includes(\"Files\")) {\n        const file = clipboard.items?.[0]?.getAsFile?.()\n        if (file) {\n          const extension = extensionForFile(file)\n          if (!file.name && extension) {\n            file.name = `pasted-file-${++pastedFileCount}.${extension}`\n          }\n          paste.type = \"File\"\n          paste.file = file\n          this.delegate?.inputControllerWillAttachFiles()\n          this.responder?.insertFile(paste.file)\n          this.requestRender()\n          this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n\n      event.preventDefault()\n    },\n\n    compositionstart(event) {\n      return this.getCompositionInput().start(event.data)\n    },\n\n    compositionupdate(event) {\n      return this.getCompositionInput().update(event.data)\n    },\n\n    compositionend(event) {\n      return this.getCompositionInput().end(event.data)\n    },\n\n    beforeinput(event) {\n      this.inputSummary.didInput = true\n    },\n\n    input(event) {\n      this.inputSummary.didInput = true\n      return event.stopPropagation()\n    },\n  }\n\n  static keys = {\n    backspace(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"backward\", event)\n    },\n\n    delete(event) {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.deleteInDirection(\"forward\", event)\n    },\n\n    return(event) {\n      this.setInputSummary({ preferDocument: true })\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.responder?.insertLineBreak()\n    },\n\n    tab(event) {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.responder?.increaseNestingLevel()\n        this.requestRender()\n        event.preventDefault()\n      }\n    },\n\n    left(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    right(event) {\n      if (this.selectionIsInCursorTarget()) {\n        event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    control: {\n      d(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"forward\", event)\n      },\n\n      h(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        return this.deleteInDirection(\"backward\", event)\n      },\n\n      o(event) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\", { updatePosition: false })\n        return this.requestRender()\n      },\n    },\n\n    shift: {\n      return(event) {\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.insertString(\"\\n\")\n        this.requestRender()\n        event.preventDefault()\n      },\n\n      tab(event) {\n        if (this.responder?.canDecreaseNestingLevel()) {\n          this.responder?.decreaseNestingLevel()\n          this.requestRender()\n          event.preventDefault()\n        }\n      },\n\n      left(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"backward\")\n        }\n      },\n\n      right(event) {\n        if (this.selectionIsInCursorTarget()) {\n          event.preventDefault()\n          return this.expandSelectionInDirection(\"forward\")\n        }\n      },\n    },\n\n    alt: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n\n    meta: {\n      backspace(event) {\n        this.setInputSummary({ preferDocument: false })\n        return this.delegate?.inputControllerWillPerformTyping()\n      },\n    },\n  }\n\n  constructor() {\n    super(...arguments)\n    this.resetInputSummary()\n  }\n\n  setInputSummary(summary = {}) {\n    this.inputSummary.eventName = this.eventName\n    for (const key in summary) {\n      const value = summary[key]\n      this.inputSummary[key] = value\n    }\n    return this.inputSummary\n  }\n\n  resetInputSummary() {\n    this.inputSummary = {}\n  }\n\n  reset() {\n    this.resetInputSummary()\n    return selectionChangeObserver.reset()\n  }\n\n  // Mutation observer delegate\n\n  elementDidMutate(mutationSummary) {\n    if (this.isComposing()) {\n      return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n    } else {\n      return this.handleInput(function() {\n        if (this.mutationIsSignificant(mutationSummary)) {\n          if (this.mutationIsExpected(mutationSummary)) {\n            this.requestRender()\n          } else {\n            this.requestReparse()\n          }\n        }\n        return this.reset()\n      })\n    }\n  }\n\n  mutationIsExpected({ textAdded, textDeleted }) {\n    if (this.inputSummary.preferDocument) {\n      return true\n    }\n\n    const mutationAdditionMatchesSummary =\n      textAdded != null ? textAdded === this.inputSummary.textAdded : !this.inputSummary.textAdded\n    const mutationDeletionMatchesSummary =\n      textDeleted != null ? this.inputSummary.didDelete : !this.inputSummary.didDelete\n\n    const unexpectedNewlineAddition = [ \"\\n\", \" \\n\" ].includes(textAdded) && !mutationAdditionMatchesSummary\n    const unexpectedNewlineDeletion = textDeleted === \"\\n\" && !mutationDeletionMatchesSummary\n    const singleUnexpectedNewline =\n      unexpectedNewlineAddition && !unexpectedNewlineDeletion ||\n      unexpectedNewlineDeletion && !unexpectedNewlineAddition\n\n    if (singleUnexpectedNewline) {\n      const range = this.getSelectedRange()\n      if (range) {\n        const offset = unexpectedNewlineAddition ? textAdded.replace(/\\n$/, \"\").length || -1 : textAdded?.length || 1\n        if (this.responder?.positionIsBlockBreak(range[1] + offset)) {\n          return true\n        }\n      }\n    }\n\n    return mutationAdditionMatchesSummary && mutationDeletionMatchesSummary\n  }\n\n  mutationIsSignificant(mutationSummary) {\n    const textChanged = Object.keys(mutationSummary).length > 0\n    const composedEmptyString = this.compositionInput?.getEndData() === \"\"\n    return textChanged || !composedEmptyString\n  }\n\n  // Private\n\n  getCompositionInput() {\n    if (this.isComposing()) {\n      return this.compositionInput\n    } else {\n      this.compositionInput = new CompositionInput(this)\n    }\n  }\n\n  isComposing() {\n    return this.compositionInput && !this.compositionInput.isEnded()\n  }\n\n  deleteInDirection(direction, event) {\n    if (this.responder?.deleteInDirection(direction) === false) {\n      if (event) {\n        event.preventDefault()\n        return this.requestRender()\n      }\n    } else {\n      return this.setInputSummary({ didDelete: true })\n    }\n  }\n\n  serializeSelectionToDataTransfer(dataTransfer) {\n    if (!dataTransferIsWritable(dataTransfer)) return\n    const document = this.responder?.getSelectedDocument().toSerializableDocument()\n\n    dataTransfer.setData(\"application/x-trix-document\", JSON.stringify(document))\n    dataTransfer.setData(\"text/html\", DocumentView.render(document).innerHTML)\n    dataTransfer.setData(\"text/plain\", document.toString().replace(/\\n$/, \"\"))\n    return true\n  }\n\n  canAcceptDataTransfer(dataTransfer) {\n    const types = {}\n    Array.from(dataTransfer?.types || []).forEach((type) => {\n      types[type] = true\n    })\n    return types.Files || types[\"application/x-trix-document\"] || types[\"text/html\"] || types[\"text/plain\"]\n  }\n\n  getPastedHTMLUsingHiddenElement(callback) {\n    const selectedRange = this.getSelectedRange()\n\n    const style = {\n      position: \"absolute\",\n      left: `${window.pageXOffset}px`,\n      top: `${window.pageYOffset}px`,\n      opacity: 0,\n    }\n\n    const element = makeElement({ style, tagName: \"div\", editable: true })\n    document.body.appendChild(element)\n    element.focus()\n\n    return requestAnimationFrame(() => {\n      const html = element.innerHTML\n      removeNode(element)\n      this.setSelectedRange(selectedRange)\n      return callback(html)\n    })\n  }\n}\n\nLevel0InputController.proxyMethod(\"responder?.getSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.setSelectedRange\")\nLevel0InputController.proxyMethod(\"responder?.expandSelectionInDirection\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsInCursorTarget\")\nLevel0InputController.proxyMethod(\"responder?.selectionIsExpanded\")\n\nconst extensionForFile = (file) => file.type?.match(/\\/(\\w+)$/)?.[1]\n\nconst hasStringCodePointAt = !!\" \".codePointAt?.(0)\n\nconst stringFromKeyEvent = function(event) {\n  if (event.key && hasStringCodePointAt && event.key.codePointAt(0) === event.keyCode) {\n    return event.key\n  } else {\n    let code\n    if (event.which === null) {\n      code = event.keyCode\n    } else if (event.which !== 0 && event.charCode !== 0) {\n      code = event.charCode\n    }\n\n    if (code != null && keyNames[code] !== \"escape\") {\n      return UTF16String.fromCodepoints([ code ]).toString()\n    }\n  }\n}\n\nconst pasteEventIsCrippledSafariHTMLPaste = function(event) {\n  const paste = event.clipboardData\n  if (paste) {\n    if (paste.types.includes(\"text/html\")) {\n      // Answer is yes if there's any possibility of Paste and Match Style in Safari,\n      // which is nearly impossible to detect confidently: https://bugs.webkit.org/show_bug.cgi?id=174165\n      for (const type of paste.types) {\n        const hasPasteboardFlavor = /^CorePasteboardFlavorType/.test(type)\n        const hasReadableDynamicData = /^dyn\\./.test(type) && paste.getData(type)\n        const mightBePasteAndMatchStyle = hasPasteboardFlavor || hasReadableDynamicData\n        if (mightBePasteAndMatchStyle) {\n          return true\n        }\n      }\n      return false\n    } else {\n      const isExternalHTMLPaste = paste.types.includes(\"com.apple.webarchive\")\n      const isExternalRichTextPaste = paste.types.includes(\"com.apple.flat-rtfd\")\n      return isExternalHTMLPaste || isExternalRichTextPaste\n    }\n  }\n}\n\nclass CompositionInput extends BasicObject {\n  constructor(inputController) {\n    super(...arguments)\n    this.inputController = inputController\n    this.responder = this.inputController.responder\n    this.delegate = this.inputController.delegate\n    this.inputSummary = this.inputController.inputSummary\n    this.data = {}\n  }\n\n  start(data) {\n    this.data.start = data\n\n    if (this.isSignificant()) {\n      if (this.inputSummary.eventName === \"keypress\" && this.inputSummary.textAdded) {\n        this.responder?.deleteInDirection(\"left\")\n      }\n\n      if (!this.selectionIsExpanded()) {\n        this.insertPlaceholder()\n        this.requestRender()\n      }\n\n      this.range = this.responder?.getSelectedRange()\n    }\n  }\n\n  update(data) {\n    this.data.update = data\n\n    if (this.isSignificant()) {\n      const range = this.selectPlaceholder()\n      if (range) {\n        this.forgetPlaceholder()\n        this.range = range\n      }\n    }\n  }\n\n  end(data) {\n    this.data.end = data\n\n    if (this.isSignificant()) {\n      this.forgetPlaceholder()\n\n      if (this.canApplyToDocument()) {\n        this.setInputSummary({ preferDocument: true, didInput: false })\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.setSelectedRange(this.range)\n        this.responder?.insertString(this.data.end)\n        return this.responder?.setSelectedRange(this.range[0] + this.data.end.length)\n      } else if (this.data.start != null || this.data.update != null) {\n        this.requestReparse()\n        return this.inputController.reset()\n      }\n    } else {\n      return this.inputController.reset()\n    }\n  }\n\n  getEndData() {\n    return this.data.end\n  }\n\n  isEnded() {\n    return this.getEndData() != null\n  }\n\n  isSignificant() {\n    if (browser.composesExistingText) {\n      return this.inputSummary.didInput\n    } else {\n      return true\n    }\n  }\n\n  // Private\n\n  canApplyToDocument() {\n    return this.data.start?.length === 0 && this.data.end?.length > 0 && this.range\n  }\n}\n\nCompositionInput.proxyMethod(\"inputController.setInputSummary\")\nCompositionInput.proxyMethod(\"inputController.requestRender\")\nCompositionInput.proxyMethod(\"inputController.requestReparse\")\nCompositionInput.proxyMethod(\"responder?.selectionIsExpanded\")\nCompositionInput.proxyMethod(\"responder?.insertPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.selectPlaceholder\")\nCompositionInput.proxyMethod(\"responder?.forgetPlaceholder\")\n","import { getAllAttributeNames, squishBreakableWhitespace } from \"trix/core/helpers\"\nimport InputController from \"trix/controllers/input_controller\"\n\nimport { dataTransferIsPlainText, keyEventIsKeyboardCommand, objectsAreEqual } from \"trix/core/helpers\"\n\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nexport default class Level2InputController extends InputController {\n  constructor(...args) {\n    super(...args)\n    this.render = this.render.bind(this)\n  }\n\n  static events = {\n    keydown(event) {\n      if (keyEventIsKeyboardCommand(event)) {\n        const command = keyboardCommandFromKeyEvent(event)\n        if (this.delegate?.inputControllerDidReceiveKeyboardCommand(command)) {\n          event.preventDefault()\n        }\n      } else {\n        let name = event.key\n        if (event.altKey) {\n          name += \"+Alt\"\n        }\n        if (event.shiftKey) {\n          name += \"+Shift\"\n        }\n        const handler = this.constructor.keys[name]\n        if (handler) {\n          return this.withEvent(event, handler)\n        }\n      }\n    },\n\n    // Handle paste event to work around beforeinput.insertFromPaste browser bugs.\n    // Safe to remove each condition once fixed upstream.\n    paste(event) {\n      // https://bugs.webkit.org/show_bug.cgi?id=194921\n      let paste\n      const href = event.clipboardData?.getData(\"URL\")\n      if (pasteEventHasFilesOnly(event)) {\n        event.preventDefault()\n        return this.attachFiles(event.clipboardData.files)\n\n        // https://bugs.chromium.org/p/chromium/issues/detail?id=934448\n      } else if (pasteEventHasPlainTextOnly(event)) {\n        event.preventDefault()\n        paste = {\n          type: \"text/plain\",\n          string: event.clipboardData.getData(\"text/plain\"),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertString(paste.string)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n\n        // https://bugs.webkit.org/show_bug.cgi?id=196702\n      } else if (href) {\n        event.preventDefault()\n        paste = {\n          type: \"text/html\",\n          html: this.createLinkHTML(href),\n        }\n        this.delegate?.inputControllerWillPaste(paste)\n        this.responder?.insertHTML(paste.html)\n        this.render()\n        return this.delegate?.inputControllerDidPaste(paste)\n      }\n    },\n\n    beforeinput(event) {\n      const handler = this.constructor.inputTypes[event.inputType]\n      if (handler) {\n        this.withEvent(event, handler)\n        return this.scheduleRender()\n      }\n    },\n\n    input(event) {\n      return selectionChangeObserver.reset()\n    },\n\n    dragstart(event) {\n      if (this.responder?.selectionContainsAttachments()) {\n        event.dataTransfer.setData(\"application/x-trix-dragging\", true)\n\n        this.dragging = {\n          range: this.responder?.getSelectedRange(),\n          point: pointFromEvent(event),\n        }\n      }\n    },\n\n    dragenter(event) {\n      if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    dragover(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        if (!objectsAreEqual(point, this.dragging.point)) {\n          this.dragging.point = point\n          return this.responder?.setLocationRangeFromPointRange(point)\n        }\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n      }\n    },\n\n    drop(event) {\n      if (this.dragging) {\n        event.preventDefault()\n        this.delegate?.inputControllerWillMoveText()\n        this.responder?.moveTextFromRange(this.dragging.range)\n        this.dragging = null\n        return this.scheduleRender()\n      } else if (dragEventHasFiles(event)) {\n        event.preventDefault()\n        const point = pointFromEvent(event)\n        this.responder?.setLocationRangeFromPointRange(point)\n        return this.attachFiles(event.dataTransfer.files)\n      }\n    },\n\n    dragend() {\n      if (this.dragging) {\n        this.responder?.setSelectedRange(this.dragging.range)\n        this.dragging = null\n      }\n    },\n\n    compositionend(event) {\n      if (this.composing) {\n        this.composing = false\n        return this.scheduleRender()\n      }\n    },\n  }\n\n  static keys = {\n    ArrowLeft() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"backward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"backward\")\n      }\n    },\n\n    ArrowRight() {\n      if (this.responder?.shouldManageMovingCursorInDirection(\"forward\")) {\n        this.event.preventDefault()\n        return this.responder?.moveCursorInDirection(\"forward\")\n      }\n    },\n\n    Backspace() {\n      if (this.responder?.shouldManageDeletingInDirection(\"backward\")) {\n        this.event.preventDefault()\n        this.delegate?.inputControllerWillPerformTyping()\n        this.responder?.deleteInDirection(\"backward\")\n        return this.render()\n      }\n    },\n\n    Tab() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.increaseNestingLevel()\n        return this.render()\n      }\n    },\n\n    \"Tab+Shift\"() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        this.event.preventDefault()\n        this.responder?.decreaseNestingLevel()\n        return this.render()\n      }\n    },\n  }\n\n  static inputTypes = {\n    deleteByComposition() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteByCut() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteByDrag() {\n      this.event.preventDefault()\n      return this.withTargetDOMRange(function() {\n        this.deleteByDragRange = this.responder?.getSelectedRange()\n      })\n    },\n\n    deleteCompositionText() {\n      return this.deleteInDirection(\"backward\", { recordUndoEntry: false })\n    },\n\n    deleteContent() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteContentForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteEntireSoftLine() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteHardLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteHardLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteSoftLineBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteSoftLineForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    deleteWordBackward() {\n      return this.deleteInDirection(\"backward\")\n    },\n\n    deleteWordForward() {\n      return this.deleteInDirection(\"forward\")\n    },\n\n    formatBackColor() {\n      return this.activateAttributeIfSupported(\"backgroundColor\", this.event.data)\n    },\n\n    formatBold() {\n      return this.toggleAttributeIfSupported(\"bold\")\n    },\n\n    formatFontColor() {\n      return this.activateAttributeIfSupported(\"color\", this.event.data)\n    },\n\n    formatFontName() {\n      return this.activateAttributeIfSupported(\"font\", this.event.data)\n    },\n\n    formatIndent() {\n      if (this.responder?.canIncreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.increaseNestingLevel()\n        })\n      }\n    },\n\n    formatItalic() {\n      return this.toggleAttributeIfSupported(\"italic\")\n    },\n\n    formatJustifyCenter() {\n      return this.toggleAttributeIfSupported(\"justifyCenter\")\n    },\n\n    formatJustifyFull() {\n      return this.toggleAttributeIfSupported(\"justifyFull\")\n    },\n\n    formatJustifyLeft() {\n      return this.toggleAttributeIfSupported(\"justifyLeft\")\n    },\n\n    formatJustifyRight() {\n      return this.toggleAttributeIfSupported(\"justifyRight\")\n    },\n\n    formatOutdent() {\n      if (this.responder?.canDecreaseNestingLevel()) {\n        return this.withTargetDOMRange(function() {\n          return this.responder?.decreaseNestingLevel()\n        })\n      }\n    },\n\n    formatRemove() {\n      this.withTargetDOMRange(function() {\n        for (const attributeName in this.responder?.getCurrentAttributes()) {\n          this.responder?.removeCurrentAttribute(attributeName)\n        }\n      })\n    },\n\n    formatSetBlockTextDirection() {\n      return this.activateAttributeIfSupported(\"blockDir\", this.event.data)\n    },\n\n    formatSetInlineTextDirection() {\n      return this.activateAttributeIfSupported(\"textDir\", this.event.data)\n    },\n\n    formatStrikeThrough() {\n      return this.toggleAttributeIfSupported(\"strike\")\n    },\n\n    formatSubscript() {\n      return this.toggleAttributeIfSupported(\"sub\")\n    },\n\n    formatSuperscript() {\n      return this.toggleAttributeIfSupported(\"sup\")\n    },\n\n    formatUnderline() {\n      return this.toggleAttributeIfSupported(\"underline\")\n    },\n\n    historyRedo() {\n      return this.delegate?.inputControllerWillPerformRedo()\n    },\n\n    historyUndo() {\n      return this.delegate?.inputControllerWillPerformUndo()\n    },\n\n    insertCompositionText() {\n      this.composing = true\n      return this.insertString(this.event.data)\n    },\n\n    insertFromComposition() {\n      this.composing = false\n      return this.insertString(this.event.data)\n    },\n\n    insertFromDrop() {\n      const range = this.deleteByDragRange\n      if (range) {\n        this.deleteByDragRange = null\n        this.delegate?.inputControllerWillMoveText()\n        return this.withTargetDOMRange(function() {\n          return this.responder?.moveTextFromRange(range)\n        })\n      }\n    },\n\n    insertFromPaste() {\n      const { dataTransfer } = this.event\n      const paste = { dataTransfer }\n      const href = dataTransfer.getData(\"URL\")\n      const html = dataTransfer.getData(\"text/html\")\n\n      if (href) {\n        let string\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        const name = dataTransfer.getData(\"public.url-name\")\n        if (name) {\n          string = squishBreakableWhitespace(name).trim()\n        } else {\n          string = href\n        }\n        paste.html = this.createLinkHTML(href, string)\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransferIsPlainText(dataTransfer)) {\n        paste.type = \"text/plain\"\n        paste.string = dataTransfer.getData(\"text/plain\")\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertString(paste.string)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (html) {\n        this.event.preventDefault()\n        paste.type = \"text/html\"\n        paste.html = html\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertHTML(paste.html)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      } else if (dataTransfer.files?.length) {\n        paste.type = \"File\"\n        paste.file = dataTransfer.files[0]\n        this.delegate?.inputControllerWillPaste(paste)\n        this.withTargetDOMRange(function() {\n          return this.responder?.insertFile(paste.file)\n        })\n\n        this.afterRender = () => {\n          return this.delegate?.inputControllerDidPaste(paste)\n        }\n      }\n    },\n\n    insertFromYank() {\n      return this.insertString(this.event.data)\n    },\n\n    insertLineBreak() {\n      return this.insertString(\"\\n\")\n    },\n\n    insertLink() {\n      return this.activateAttributeIfSupported(\"href\", this.event.data)\n    },\n\n    insertOrderedList() {\n      return this.toggleAttributeIfSupported(\"number\")\n    },\n\n    insertParagraph() {\n      this.delegate?.inputControllerWillPerformTyping()\n      return this.withTargetDOMRange(function() {\n        return this.responder?.insertLineBreak()\n      })\n    },\n\n    insertReplacementText() {\n      return this.insertString(this.event.dataTransfer.getData(\"text/plain\"), { updatePosition: false })\n    },\n\n    insertText() {\n      return this.insertString(this.event.data || this.event.dataTransfer?.getData(\"text/plain\"))\n    },\n\n    insertTranspose() {\n      return this.insertString(this.event.data)\n    },\n\n    insertUnorderedList() {\n      return this.toggleAttributeIfSupported(\"bullet\")\n    },\n  }\n\n  elementDidMutate() {\n    if (this.scheduledRender) {\n      if (this.composing) {\n        return this.delegate?.inputControllerDidAllowUnhandledInput?.()\n      }\n    } else {\n      return this.reparse()\n    }\n  }\n\n  scheduleRender() {\n    return this.scheduledRender ? this.scheduledRender : this.scheduledRender = requestAnimationFrame(this.render)\n  }\n\n  render() {\n    cancelAnimationFrame(this.scheduledRender)\n    this.scheduledRender = null\n    if (!this.composing) {\n      this.delegate?.render()\n    }\n    this.afterRender?.()\n    this.afterRender = null\n  }\n\n  reparse() {\n    return this.delegate?.reparse()\n  }\n\n  // Responder helpers\n\n  insertString(string = \"\", options) {\n    this.delegate?.inputControllerWillPerformTyping()\n    return this.withTargetDOMRange(function() {\n      return this.responder?.insertString(string, options)\n    })\n  }\n\n  toggleAttributeIfSupported(attributeName) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.toggleCurrentAttribute(attributeName)\n      })\n    }\n  }\n\n  activateAttributeIfSupported(attributeName, value) {\n    if (getAllAttributeNames().includes(attributeName)) {\n      this.delegate?.inputControllerWillPerformFormatting(attributeName)\n      return this.withTargetDOMRange(function() {\n        return this.responder?.setCurrentAttribute(attributeName, value)\n      })\n    }\n  }\n\n  deleteInDirection(direction, { recordUndoEntry } = { recordUndoEntry: true }) {\n    if (recordUndoEntry) {\n      this.delegate?.inputControllerWillPerformTyping()\n    }\n    const perform = () => this.responder?.deleteInDirection(direction)\n    const domRange = this.getTargetDOMRange({ minLength: 2 })\n    if (domRange) {\n      return this.withTargetDOMRange(domRange, perform)\n    } else {\n      return perform()\n    }\n  }\n\n  // Selection helpers\n\n  withTargetDOMRange(domRange, fn) {\n    if (typeof domRange === \"function\") {\n      fn = domRange\n      domRange = this.getTargetDOMRange()\n    }\n    if (domRange) {\n      return this.responder?.withTargetDOMRange(domRange, fn.bind(this))\n    } else {\n      selectionChangeObserver.reset()\n      return fn.call(this)\n    }\n  }\n\n  getTargetDOMRange({ minLength } = { minLength: 0 }) {\n    const targetRanges = this.event.getTargetRanges?.()\n    if (targetRanges) {\n      if (targetRanges.length) {\n        const domRange = staticRangeToRange(targetRanges[0])\n        if (minLength === 0 || domRange.toString().length >= minLength) {\n          return domRange\n        }\n      }\n    }\n  }\n\n  withEvent(event, fn) {\n    let result\n    this.event = event\n    try {\n      result = fn.call(this)\n    } finally {\n      this.event = null\n    }\n    return result\n  }\n}\n\nconst staticRangeToRange = function(staticRange) {\n  const range = document.createRange()\n  range.setStart(staticRange.startContainer, staticRange.startOffset)\n  range.setEnd(staticRange.endContainer, staticRange.endOffset)\n  return range\n}\n\n// Event helpers\n\nconst dragEventHasFiles = (event) => Array.from(event.dataTransfer?.types || []).includes(\"Files\")\n\nconst pasteEventHasFilesOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"Files\") && clipboard.types.length === 1 && clipboard.files.length >= 1\n  }\n}\n\nconst pasteEventHasPlainTextOnly = function(event) {\n  const clipboard = event.clipboardData\n  if (clipboard) {\n    return clipboard.types.includes(\"text/plain\") && clipboard.types.length === 1\n  }\n}\n\nconst keyboardCommandFromKeyEvent = function(event) {\n  const command = []\n  if (event.altKey) {\n    command.push(\"alt\")\n  }\n  if (event.shiftKey) {\n    command.push(\"shift\")\n  }\n  command.push(event.key)\n  return command\n}\n\nconst pointFromEvent = (event) => ({\n  x: event.clientX,\n  y: event.clientY,\n})\n","import { removeNode } from \"trix/core/helpers\"\n\nimport config from \"trix/config\"\nimport BasicObject from \"trix/core/basic_object\"\n\nimport { defer, handleEvent, makeElement, tagName } from \"trix/core/helpers\"\nconst { lang, css, keyNames } = config\n\nconst undoable = function(fn) {\n  return function() {\n    const commands = fn.apply(this, arguments)\n    commands.do()\n    if (!this.undos) {\n      this.undos = []\n    }\n    this.undos.push(commands.undo)\n  }\n}\n\nexport default class AttachmentEditorController extends BasicObject {\n  constructor(attachmentPiece, element, container, options = {}) {\n    super(...arguments)\n    this.didClickToolbar = this.didClickToolbar.bind(this)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didKeyDownCaption = this.didKeyDownCaption.bind(this)\n    this.didInputCaption = this.didInputCaption.bind(this)\n    this.didChangeCaption = this.didChangeCaption.bind(this)\n    this.didBlurCaption = this.didBlurCaption.bind(this)\n    this.attachmentPiece = attachmentPiece\n    this.element = element\n    this.container = container\n    this.options = options\n    this.attachment = this.attachmentPiece.attachment\n    if (tagName(this.element) === \"a\") {\n      this.element = this.element.firstChild\n    }\n    this.install()\n  }\n\n  install() {\n    this.makeElementMutable()\n    this.addToolbar()\n    if (this.attachment.isPreviewable()) {\n      this.installCaptionEditor()\n    }\n  }\n\n  uninstall() {\n    let undo = this.undos.pop()\n    this.savePendingCaption()\n    while (undo) {\n      undo()\n      undo = this.undos.pop()\n    }\n    this.delegate?.didUninstallAttachmentEditor(this)\n  }\n\n  // Private\n\n  savePendingCaption() {\n    if (this.pendingCaption) {\n      const caption = this.pendingCaption\n      this.pendingCaption = null\n      if (caption) {\n        this.delegate?.attachmentEditorDidRequestUpdatingAttributesForAttachment?.({ caption }, this.attachment)\n      } else {\n        this.delegate?.attachmentEditorDidRequestRemovingAttributeForAttachment?.(\"caption\", this.attachment)\n      }\n    }\n  }\n\n  // Installing and uninstalling\n\n  makeElementMutable = undoable(() => {\n    return {\n      do: () => {\n        this.element.dataset.trixMutable = true\n      },\n      undo: () => delete this.element.dataset.trixMutable,\n    }\n  })\n\n  addToolbar = undoable(() => {\n    // <div class=\"#{css.attachmentMetadataContainer}\" data-trix-mutable=\"true\">\n    //   <div class=\"trix-button-row\">\n    //     <span class=\"trix-button-group trix-button-group--actions\">\n    //       <button type=\"button\" class=\"trix-button trix-button--remove\" title=\"#{lang.remove}\" data-trix-action=\"remove\">#{lang.remove}</button>\n    //     </span>\n    //   </div>\n    // </div>\n    const element = makeElement({\n      tagName: \"div\",\n      className: css.attachmentToolbar,\n      data: { trixMutable: true },\n      childNodes: makeElement({\n        tagName: \"div\",\n        className: \"trix-button-row\",\n        childNodes: makeElement({\n          tagName: \"span\",\n          className: \"trix-button-group trix-button-group--actions\",\n          childNodes: makeElement({\n            tagName: \"button\",\n            className: \"trix-button trix-button--remove\",\n            textContent: lang.remove,\n            attributes: { title: lang.remove },\n            data: { trixAction: \"remove\" },\n          }),\n        }),\n      }),\n    })\n\n    if (this.attachment.isPreviewable()) {\n      // <div class=\"#{css.attachmentMetadataContainer}\">\n      //   <span class=\"#{css.attachmentMetadata}\">\n      //     <span class=\"#{css.attachmentName}\" title=\"#{name}\">#{name}</span>\n      //     <span class=\"#{css.attachmentSize}\">#{size}</span>\n      //   </span>\n      // </div>\n      element.appendChild(\n        makeElement({\n          tagName: \"div\",\n          className: css.attachmentMetadataContainer,\n          childNodes: makeElement({\n            tagName: \"span\",\n            className: css.attachmentMetadata,\n            childNodes: [\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentName,\n                textContent: this.attachment.getFilename(),\n                attributes: { title: this.attachment.getFilename() },\n              }),\n              makeElement({\n                tagName: \"span\",\n                className: css.attachmentSize,\n                textContent: this.attachment.getFormattedFilesize(),\n              }),\n            ],\n          }),\n        })\n      )\n    }\n\n    handleEvent(\"click\", { onElement: element, withCallback: this.didClickToolbar })\n    handleEvent(\"click\", {\n      onElement: element,\n      matchingSelector: \"[data-trix-action]\",\n      withCallback: this.didClickActionButton,\n    })\n\n    return {\n      do: () => this.element.appendChild(element),\n      undo: () => removeNode(element),\n    }\n  })\n\n  installCaptionEditor = undoable(() => {\n    const textarea = makeElement({\n      tagName: \"textarea\",\n      className: css.attachmentCaptionEditor,\n      attributes: { placeholder: lang.captionPlaceholder },\n      data: { trixMutable: true },\n    })\n    textarea.value = this.attachmentPiece.getCaption()\n\n    const textareaClone = textarea.cloneNode()\n    textareaClone.classList.add(\"trix-autoresize-clone\")\n    textareaClone.tabIndex = -1\n\n    const autoresize = function() {\n      textareaClone.value = textarea.value\n      textarea.style.height = textareaClone.scrollHeight + \"px\"\n    }\n\n    handleEvent(\"input\", { onElement: textarea, withCallback: autoresize })\n    handleEvent(\"input\", { onElement: textarea, withCallback: this.didInputCaption })\n    handleEvent(\"keydown\", { onElement: textarea, withCallback: this.didKeyDownCaption })\n    handleEvent(\"change\", { onElement: textarea, withCallback: this.didChangeCaption })\n    handleEvent(\"blur\", { onElement: textarea, withCallback: this.didBlurCaption })\n\n    const figcaption = this.element.querySelector(\"figcaption\")\n    const editingFigcaption = figcaption.cloneNode()\n\n    return {\n      do: () => {\n        figcaption.style.display = \"none\"\n        editingFigcaption.appendChild(textarea)\n        editingFigcaption.appendChild(textareaClone)\n        editingFigcaption.classList.add(`${css.attachmentCaption}--editing`)\n        figcaption.parentElement.insertBefore(editingFigcaption, figcaption)\n        autoresize()\n        if (this.options.editCaption) {\n          return defer(() => textarea.focus())\n        }\n      },\n      undo() {\n        removeNode(editingFigcaption)\n        figcaption.style.display = null\n      },\n    }\n  })\n\n  // Event handlers\n\n  didClickToolbar(event) {\n    event.preventDefault()\n    return event.stopPropagation()\n  }\n\n  didClickActionButton(event) {\n    const action = event.target.getAttribute(\"data-trix-action\")\n    switch (action) {\n      case \"remove\":\n        return this.delegate?.attachmentEditorDidRequestRemovalOfAttachment(this.attachment)\n    }\n  }\n\n  didKeyDownCaption(event) {\n    if (keyNames[event.keyCode] === \"return\") {\n      event.preventDefault()\n      this.savePendingCaption()\n      return this.delegate?.attachmentEditorDidRequestDeselectingAttachment?.(this.attachment)\n    }\n  }\n\n  didInputCaption(event) {\n    this.pendingCaption = event.target.value.replace(/\\s/g, \" \").trim()\n  }\n\n  didChangeCaption(event) {\n    return this.savePendingCaption()\n  }\n\n  didBlurCaption(event) {\n    return this.savePendingCaption()\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\nimport DocumentView from \"trix/views/document_view\"\nimport AttachmentEditorController from \"trix/controllers/attachment_editor_controller\"\n\nimport { defer, findClosestElementFromNode, handleEvent, innerElementIsActive } from \"trix/core/helpers\"\nimport { attachmentSelector } from \"trix/config/attachments\"\n\nexport default class CompositionController extends BasicObject {\n  constructor(element, composition) {\n    super(...arguments)\n    this.didFocus = this.didFocus.bind(this)\n    this.didBlur = this.didBlur.bind(this)\n    this.didClickAttachment = this.didClickAttachment.bind(this)\n\n    this.element = element\n    this.composition = composition\n    this.documentView = new DocumentView(this.composition.document, { element: this.element })\n\n    handleEvent(\"focus\", { onElement: this.element, withCallback: this.didFocus })\n    handleEvent(\"blur\", { onElement: this.element, withCallback: this.didBlur })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: \"a[contenteditable=false]\",\n      preventDefault: true,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attachmentSelector,\n      withCallback: this.didClickAttachment,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: `a${attachmentSelector}`, preventDefault: true })\n  }\n\n  didFocus(event) {\n    const perform = () => {\n      if (!this.focused) {\n        this.focused = true\n        return this.delegate?.compositionControllerDidFocus?.()\n      }\n    }\n\n    return this.blurPromise?.then(perform) || perform()\n  }\n\n  didBlur(event) {\n    this.blurPromise = new Promise((resolve) => {\n      return defer(() => {\n        if (!innerElementIsActive(this.element)) {\n          this.focused = null\n          this.delegate?.compositionControllerDidBlur?.()\n        }\n        this.blurPromise = null\n        return resolve()\n      })\n    })\n  }\n\n  didClickAttachment(event, target) {\n    const attachment = this.findAttachmentForElement(target)\n    const editCaption = !!findClosestElementFromNode(event.target, { matchingSelector: \"figcaption\" })\n    return this.delegate?.compositionControllerDidSelectAttachment?.(attachment, { editCaption })\n  }\n\n  getSerializableElement() {\n    if (this.isEditingAttachment()) {\n      return this.documentView.shadowElement\n    } else {\n      return this.element\n    }\n  }\n\n  render() {\n    if (this.revision !== this.composition.revision) {\n      this.documentView.setDocument(this.composition.document)\n      this.documentView.render()\n      this.revision = this.composition.revision\n    }\n\n    if (this.canSyncDocumentView() && !this.documentView.isSynced()) {\n      this.delegate?.compositionControllerWillSyncDocumentView?.()\n      this.documentView.sync()\n      this.delegate?.compositionControllerDidSyncDocumentView?.()\n    }\n\n    return this.delegate?.compositionControllerDidRender?.()\n  }\n\n  rerenderViewForObject(object) {\n    this.invalidateViewForObject(object)\n    return this.render()\n  }\n\n  invalidateViewForObject(object) {\n    return this.documentView.invalidateViewForObject(object)\n  }\n\n  isViewCachingEnabled() {\n    return this.documentView.isViewCachingEnabled()\n  }\n\n  enableViewCaching() {\n    return this.documentView.enableViewCaching()\n  }\n\n  disableViewCaching() {\n    return this.documentView.disableViewCaching()\n  }\n\n  refreshViewCache() {\n    return this.documentView.garbageCollectCachedViews()\n  }\n\n  // Attachment editor management\n\n  isEditingAttachment() {\n    return !!this.attachmentEditor\n  }\n\n  installAttachmentEditorForAttachment(attachment, options) {\n    if (this.attachmentEditor?.attachment === attachment) return\n    const element = this.documentView.findElementForObject(attachment)\n    if (!element) return\n\n    this.uninstallAttachmentEditor()\n    const attachmentPiece = this.composition.document.getAttachmentPieceForAttachment(attachment)\n    this.attachmentEditor = new AttachmentEditorController(attachmentPiece, element, this.element, options)\n    this.attachmentEditor.delegate = this\n  }\n\n  uninstallAttachmentEditor() {\n    return this.attachmentEditor?.uninstall()\n  }\n\n  // Attachment controller delegate\n\n  didUninstallAttachmentEditor() {\n    this.attachmentEditor = null\n    return this.render()\n  }\n\n  attachmentEditorDidRequestUpdatingAttributesForAttachment(attributes, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.updateAttributesForAttachment(attributes, attachment)\n  }\n\n  attachmentEditorDidRequestRemovingAttributeForAttachment(attribute, attachment) {\n    this.delegate?.compositionControllerWillUpdateAttachment?.(attachment)\n    return this.composition.removeAttributeForAttachment(attribute, attachment)\n  }\n\n  attachmentEditorDidRequestRemovalOfAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestRemovalOfAttachment?.(attachment)\n  }\n\n  attachmentEditorDidRequestDeselectingAttachment(attachment) {\n    return this.delegate?.compositionControllerDidRequestDeselectingAttachment?.(attachment)\n  }\n\n  // Private\n\n  canSyncDocumentView() {\n    return !this.isEditingAttachment()\n  }\n\n  findAttachmentForElement(element) {\n    return this.composition.document.getAttachmentById(parseInt(element.dataset.trixId, 10))\n  }\n}\n","import BasicObject from \"trix/core/basic_object\"\n\nimport { findClosestElementFromNode, handleEvent, triggerEvent } from \"trix/core/helpers\"\n\nconst attributeButtonSelector = \"[data-trix-attribute]\"\nconst actionButtonSelector = \"[data-trix-action]\"\nconst toolbarButtonSelector = `${attributeButtonSelector}, ${actionButtonSelector}`\nconst dialogSelector = \"[data-trix-dialog]\"\nconst activeDialogSelector = `${dialogSelector}[data-trix-active]`\nconst dialogButtonSelector = `${dialogSelector} [data-trix-method]`\nconst dialogInputSelector = `${dialogSelector} [data-trix-input]`\nconst getInputForDialog = (element, attributeName) => {\n  if (!attributeName) { attributeName = getAttributeName(element) }\n  return element.querySelector(`[data-trix-input][name='${attributeName}']`)\n}\nconst getActionName = (element) => element.getAttribute(\"data-trix-action\")\nconst getAttributeName = (element) => {\n  return element.getAttribute(\"data-trix-attribute\") || element.getAttribute(\"data-trix-dialog-attribute\")\n}\nconst getDialogName = (element) => element.getAttribute(\"data-trix-dialog\")\n\nexport default class ToolbarController extends BasicObject {\n  constructor(element) {\n    super(element)\n    this.didClickActionButton = this.didClickActionButton.bind(this)\n    this.didClickAttributeButton = this.didClickAttributeButton.bind(this)\n    this.didClickDialogButton = this.didClickDialogButton.bind(this)\n    this.didKeyDownDialogInput = this.didKeyDownDialogInput.bind(this)\n    this.element = element\n    this.attributes = {}\n    this.actions = {}\n    this.resetDialogInputs()\n\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: actionButtonSelector,\n      withCallback: this.didClickActionButton,\n    })\n    handleEvent(\"mousedown\", {\n      onElement: this.element,\n      matchingSelector: attributeButtonSelector,\n      withCallback: this.didClickAttributeButton,\n    })\n    handleEvent(\"click\", { onElement: this.element, matchingSelector: toolbarButtonSelector, preventDefault: true })\n    handleEvent(\"click\", {\n      onElement: this.element,\n      matchingSelector: dialogButtonSelector,\n      withCallback: this.didClickDialogButton,\n    })\n    handleEvent(\"keydown\", {\n      onElement: this.element,\n      matchingSelector: dialogInputSelector,\n      withCallback: this.didKeyDownDialogInput,\n    })\n  }\n\n  // Event handlers\n\n  didClickActionButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const actionName = getActionName(element)\n\n    if (this.getDialog(actionName)) {\n      return this.toggleDialog(actionName)\n    } else {\n      return this.delegate?.toolbarDidInvokeAction(actionName)\n    }\n  }\n\n  didClickAttributeButton(event, element) {\n    this.delegate?.toolbarDidClickButton()\n    event.preventDefault()\n    const attributeName = getAttributeName(element)\n\n    if (this.getDialog(attributeName)) {\n      this.toggleDialog(attributeName)\n    } else {\n      this.delegate?.toolbarDidToggleAttribute(attributeName)\n    }\n\n    return this.refreshAttributeButtons()\n  }\n\n  didClickDialogButton(event, element) {\n    const dialogElement = findClosestElementFromNode(element, { matchingSelector: dialogSelector })\n    const method = element.getAttribute(\"data-trix-method\")\n    return this[method].call(this, dialogElement)\n  }\n\n  didKeyDownDialogInput(event, element) {\n    if (event.keyCode === 13) {\n      // Enter key\n      event.preventDefault()\n      const attribute = element.getAttribute(\"name\")\n      const dialog = this.getDialog(attribute)\n      this.setAttribute(dialog)\n    }\n    if (event.keyCode === 27) {\n      // Escape key\n      event.preventDefault()\n      return this.hideDialog()\n    }\n  }\n\n  // Action buttons\n\n  updateActions(actions) {\n    this.actions = actions\n    return this.refreshActionButtons()\n  }\n\n  refreshActionButtons() {\n    return this.eachActionButton((element, actionName) => {\n      element.disabled = this.actions[actionName] === false\n    })\n  }\n\n  eachActionButton(callback) {\n    return Array.from(this.element.querySelectorAll(actionButtonSelector)).map((element) =>\n      callback(element, getActionName(element))\n    )\n  }\n\n  // Attribute buttons\n\n  updateAttributes(attributes) {\n    this.attributes = attributes\n    return this.refreshAttributeButtons()\n  }\n\n  refreshAttributeButtons() {\n    return this.eachAttributeButton((element, attributeName) => {\n      element.disabled = this.attributes[attributeName] === false\n      if (this.attributes[attributeName] || this.dialogIsVisible(attributeName)) {\n        element.setAttribute(\"data-trix-active\", \"\")\n        return element.classList.add(\"trix-active\")\n      } else {\n        element.removeAttribute(\"data-trix-active\")\n        return element.classList.remove(\"trix-active\")\n      }\n    })\n  }\n\n  eachAttributeButton(callback) {\n    return Array.from(this.element.querySelectorAll(attributeButtonSelector)).map((element) =>\n      callback(element, getAttributeName(element))\n    )\n  }\n\n  applyKeyboardCommand(keys) {\n    const keyString = JSON.stringify(keys.sort())\n    for (const button of Array.from(this.element.querySelectorAll(\"[data-trix-key]\"))) {\n      const buttonKeys = button.getAttribute(\"data-trix-key\").split(\"+\")\n      const buttonKeyString = JSON.stringify(buttonKeys.sort())\n      if (buttonKeyString === keyString) {\n        triggerEvent(\"mousedown\", { onElement: button })\n        return true\n      }\n    }\n    return false\n  }\n\n  // Dialogs\n\n  dialogIsVisible(dialogName) {\n    const element = this.getDialog(dialogName)\n    if (element) {\n      return element.hasAttribute(\"data-trix-active\")\n    }\n  }\n\n  toggleDialog(dialogName) {\n    if (this.dialogIsVisible(dialogName)) {\n      return this.hideDialog()\n    } else {\n      return this.showDialog(dialogName)\n    }\n  }\n\n  showDialog(dialogName) {\n    this.hideDialog()\n    this.delegate?.toolbarWillShowDialog()\n\n    const element = this.getDialog(dialogName)\n    element.setAttribute(\"data-trix-active\", \"\")\n    element.classList.add(\"trix-active\")\n\n    Array.from(element.querySelectorAll(\"input[disabled]\")).forEach((disabledInput) => {\n      disabledInput.removeAttribute(\"disabled\")\n    })\n\n    const attributeName = getAttributeName(element)\n    if (attributeName) {\n      const input = getInputForDialog(element, dialogName)\n      if (input) {\n        input.value = this.attributes[attributeName] || \"\"\n        input.select()\n      }\n    }\n\n    return this.delegate?.toolbarDidShowDialog(dialogName)\n  }\n\n  setAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    const input = getInputForDialog(dialogElement, attributeName)\n    if (input.willValidate && !input.checkValidity()) {\n      input.setAttribute(\"data-trix-validate\", \"\")\n      input.classList.add(\"trix-validate\")\n      return input.focus()\n    } else {\n      this.delegate?.toolbarDidUpdateAttribute(attributeName, input.value)\n      return this.hideDialog()\n    }\n  }\n\n  removeAttribute(dialogElement) {\n    const attributeName = getAttributeName(dialogElement)\n    this.delegate?.toolbarDidRemoveAttribute(attributeName)\n    return this.hideDialog()\n  }\n\n  hideDialog() {\n    const element = this.element.querySelector(activeDialogSelector)\n    if (element) {\n      element.removeAttribute(\"data-trix-active\")\n      element.classList.remove(\"trix-active\")\n      this.resetDialogInputs()\n      return this.delegate?.toolbarDidHideDialog(getDialogName(element))\n    }\n  }\n\n  resetDialogInputs() {\n    Array.from(this.element.querySelectorAll(dialogInputSelector)).forEach((input) => {\n      input.setAttribute(\"disabled\", \"disabled\")\n      input.removeAttribute(\"data-trix-validate\")\n      input.classList.remove(\"trix-validate\")\n    })\n  }\n\n  getDialog(dialogName) {\n    return this.element.querySelector(`[data-trix-dialog=${dialogName}]`)\n  }\n}\n","/* eslint-disable\n    id-length,\n*/\nimport config from \"trix/config\"\n\nimport { serializeToContentType } from \"trix/core/serialization\"\n\nimport Controller from \"trix/controllers/controller\"\nimport Level0InputController from \"trix/controllers/level_0_input_controller\"\nimport Level2InputController from \"trix/controllers/level_2_input_controller\"\nimport CompositionController from \"trix/controllers/composition_controller\"\nimport ToolbarController from \"trix/controllers/toolbar_controller\"\nimport Composition from \"trix/models/composition\"\nimport Editor from \"trix/models/editor\"\nimport AttachmentManager from \"trix/models/attachment_manager\"\nimport SelectionManager from \"trix/models/selection_manager\"\n\nimport { getBlockConfig, objectsAreEqual, rangeIsCollapsed, rangesAreEqual } from \"trix/core/helpers\"\nimport { selectionChangeObserver } from \"trix/observers/selection_change_observer\"\n\nconst snapshotsAreEqual = (a, b) => rangesAreEqual(a.selectedRange, b.selectedRange) && a.document.isEqualTo(b.document)\n\nexport default class EditorController extends Controller {\n  static actions = {\n    undo: {\n      test() {\n        return this.editor.canUndo()\n      },\n      perform() {\n        return this.editor.undo()\n      },\n    },\n    redo: {\n      test() {\n        return this.editor.canRedo()\n      },\n      perform() {\n        return this.editor.redo()\n      },\n    },\n    link: {\n      test() {\n        return this.editor.canActivateAttribute(\"href\")\n      },\n    },\n    increaseNestingLevel: {\n      test() {\n        return this.editor.canIncreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.increaseNestingLevel() && this.render()\n      },\n    },\n    decreaseNestingLevel: {\n      test() {\n        return this.editor.canDecreaseNestingLevel()\n      },\n      perform() {\n        return this.editor.decreaseNestingLevel() && this.render()\n      },\n    },\n    attachFiles: {\n      test() {\n        return true\n      },\n      perform() {\n        return config.input.pickFiles(this.editor.insertFiles)\n      },\n    },\n  }\n\n  constructor({ editorElement, document, html }) {\n    super(...arguments)\n    this.editorElement = editorElement\n    this.selectionManager = new SelectionManager(this.editorElement)\n    this.selectionManager.delegate = this\n\n    this.composition = new Composition()\n    this.composition.delegate = this\n\n    this.attachmentManager = new AttachmentManager(this.composition.getAttachments())\n    this.attachmentManager.delegate = this\n\n    this.inputController =\n      config.input.getLevel() === 2\n        ? new Level2InputController(this.editorElement)\n        : new Level0InputController(this.editorElement)\n\n    this.inputController.delegate = this\n    this.inputController.responder = this.composition\n\n    this.compositionController = new CompositionController(this.editorElement, this.composition)\n    this.compositionController.delegate = this\n\n    this.toolbarController = new ToolbarController(this.editorElement.toolbarElement)\n    this.toolbarController.delegate = this\n\n    this.editor = new Editor(this.composition, this.selectionManager, this.editorElement)\n    if (document) {\n      this.editor.loadDocument(document)\n    } else {\n      this.editor.loadHTML(html)\n    }\n  }\n\n  registerSelectionManager() {\n    return selectionChangeObserver.registerSelectionManager(this.selectionManager)\n  }\n\n  unregisterSelectionManager() {\n    return selectionChangeObserver.unregisterSelectionManager(this.selectionManager)\n  }\n\n  render() {\n    return this.compositionController.render()\n  }\n\n  reparse() {\n    return this.composition.replaceHTML(this.editorElement.innerHTML)\n  }\n\n  // Composition delegate\n\n  compositionDidChangeDocument(document) {\n    this.notifyEditorElement(\"document-change\")\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionDidChangeCurrentAttributes(currentAttributes) {\n    this.currentAttributes = currentAttributes\n    this.toolbarController.updateAttributes(this.currentAttributes)\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"attributes-change\", { attributes: this.currentAttributes })\n  }\n\n  compositionDidPerformInsertionAtRange(range) {\n    if (this.pasting) {\n      this.pastedRange = range\n    }\n  }\n\n  compositionShouldAcceptFile(file) {\n    return this.notifyEditorElement(\"file-accept\", { file })\n  }\n\n  compositionDidAddAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-add\", { attachment: managedAttachment })\n  }\n\n  compositionDidEditAttachment(attachment) {\n    this.compositionController.rerenderViewForObject(attachment)\n    const managedAttachment = this.attachmentManager.manageAttachment(attachment)\n    this.notifyEditorElement(\"attachment-edit\", { attachment: managedAttachment })\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidChangeAttachmentPreviewURL(attachment) {\n    this.compositionController.invalidateViewForObject(attachment)\n    return this.notifyEditorElement(\"change\")\n  }\n\n  compositionDidRemoveAttachment(attachment) {\n    const managedAttachment = this.attachmentManager.unmanageAttachment(attachment)\n    return this.notifyEditorElement(\"attachment-remove\", { attachment: managedAttachment })\n  }\n\n  compositionDidStartEditingAttachment(attachment, options) {\n    this.attachmentLocationRange = this.composition.document.getLocationRangeOfAttachment(attachment)\n    this.compositionController.installAttachmentEditorForAttachment(attachment, options)\n    return this.selectionManager.setLocationRange(this.attachmentLocationRange)\n  }\n\n  compositionDidStopEditingAttachment(attachment) {\n    this.compositionController.uninstallAttachmentEditor()\n    this.attachmentLocationRange = null\n  }\n\n  compositionDidRequestChangingSelectionToLocationRange(locationRange) {\n    if (this.loadingSnapshot && !this.isFocused()) return\n    this.requestedLocationRange = locationRange\n    this.compositionRevisionWhenLocationRangeRequested = this.composition.revision\n    if (!this.handlingInput) {\n      return this.render()\n    }\n  }\n\n  compositionWillLoadSnapshot() {\n    this.loadingSnapshot = true\n  }\n\n  compositionDidLoadSnapshot() {\n    this.compositionController.refreshViewCache()\n    this.render()\n    this.loadingSnapshot = false\n  }\n\n  getSelectionManager() {\n    return this.selectionManager\n  }\n\n  // Attachment manager delegate\n\n  attachmentManagerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Document controller delegate\n\n  compositionControllerWillSyncDocumentView() {\n    this.inputController.editorWillSyncDocumentView()\n    this.selectionManager.lock()\n    return this.selectionManager.clearSelection()\n  }\n\n  compositionControllerDidSyncDocumentView() {\n    this.inputController.editorDidSyncDocumentView()\n    this.selectionManager.unlock()\n    this.updateCurrentActions()\n    return this.notifyEditorElement(\"sync\")\n  }\n\n  compositionControllerDidRender() {\n    if (this.requestedLocationRange) {\n      if (this.compositionRevisionWhenLocationRangeRequested === this.composition.revision) {\n        this.selectionManager.setLocationRange(this.requestedLocationRange)\n      }\n      this.requestedLocationRange = null\n      this.compositionRevisionWhenLocationRangeRequested = null\n    }\n\n    if (this.renderedCompositionRevision !== this.composition.revision) {\n      this.runEditorFilters()\n      this.composition.updateCurrentAttributes()\n      this.notifyEditorElement(\"render\")\n    }\n\n    this.renderedCompositionRevision = this.composition.revision\n  }\n\n  compositionControllerDidFocus() {\n    if (this.isFocusedInvisibly()) {\n      this.setLocationRange({ index: 0, offset: 0 })\n    }\n    this.toolbarController.hideDialog()\n    return this.notifyEditorElement(\"focus\")\n  }\n\n  compositionControllerDidBlur() {\n    return this.notifyEditorElement(\"blur\")\n  }\n\n  compositionControllerDidSelectAttachment(attachment, options) {\n    this.toolbarController.hideDialog()\n    return this.composition.editAttachment(attachment, options)\n  }\n\n  compositionControllerDidRequestDeselectingAttachment(attachment) {\n    const locationRange = this.attachmentLocationRange || this.composition.document.getLocationRangeOfAttachment(attachment)\n    return this.selectionManager.setLocationRange(locationRange[1])\n  }\n\n  compositionControllerWillUpdateAttachment(attachment) {\n    return this.editor.recordUndoEntry(\"Edit Attachment\", { context: attachment.id, consolidatable: true })\n  }\n\n  compositionControllerDidRequestRemovalOfAttachment(attachment) {\n    return this.removeAttachment(attachment)\n  }\n\n  // Input controller delegate\n\n  inputControllerWillHandleInput() {\n    this.handlingInput = true\n    this.requestedRender = false\n  }\n\n  inputControllerDidRequestRender() {\n    this.requestedRender = true\n  }\n\n  inputControllerDidHandleInput() {\n    this.handlingInput = false\n    if (this.requestedRender) {\n      this.requestedRender = false\n      return this.render()\n    }\n  }\n\n  inputControllerDidAllowUnhandledInput() {\n    return this.notifyEditorElement(\"change\")\n  }\n\n  inputControllerDidRequestReparse() {\n    return this.reparse()\n  }\n\n  inputControllerWillPerformTyping() {\n    return this.recordTypingUndoEntry()\n  }\n\n  inputControllerWillPerformFormatting(attributeName) {\n    return this.recordFormattingUndoEntry(attributeName)\n  }\n\n  inputControllerWillCutText() {\n    return this.editor.recordUndoEntry(\"Cut\")\n  }\n\n  inputControllerWillPaste(paste) {\n    this.editor.recordUndoEntry(\"Paste\")\n    this.pasting = true\n    return this.notifyEditorElement(\"before-paste\", { paste })\n  }\n\n  inputControllerDidPaste(paste) {\n    paste.range = this.pastedRange\n    this.pastedRange = null\n    this.pasting = null\n    return this.notifyEditorElement(\"paste\", { paste })\n  }\n\n  inputControllerWillMoveText() {\n    return this.editor.recordUndoEntry(\"Move\")\n  }\n\n  inputControllerWillAttachFiles() {\n    return this.editor.recordUndoEntry(\"Drop Files\")\n  }\n\n  inputControllerWillPerformUndo() {\n    return this.editor.undo()\n  }\n\n  inputControllerWillPerformRedo() {\n    return this.editor.redo()\n  }\n\n  inputControllerDidReceiveKeyboardCommand(keys) {\n    return this.toolbarController.applyKeyboardCommand(keys)\n  }\n\n  inputControllerDidStartDrag() {\n    this.locationRangeBeforeDrag = this.selectionManager.getLocationRange()\n  }\n\n  inputControllerDidReceiveDragOverPoint(point) {\n    return this.selectionManager.setLocationRangeFromPointRange(point)\n  }\n\n  inputControllerDidCancelDrag() {\n    this.selectionManager.setLocationRange(this.locationRangeBeforeDrag)\n    this.locationRangeBeforeDrag = null\n  }\n\n  // Selection manager delegate\n\n  locationRangeDidChange(locationRange) {\n    this.composition.updateCurrentAttributes()\n    this.updateCurrentActions()\n    if (this.attachmentLocationRange && !rangesAreEqual(this.attachmentLocationRange, locationRange)) {\n      this.composition.stopEditingAttachment()\n    }\n    return this.notifyEditorElement(\"selection-change\")\n  }\n\n  // Toolbar controller delegate\n\n  toolbarDidClickButton() {\n    if (!this.getLocationRange()) {\n      return this.setLocationRange({ index: 0, offset: 0 })\n    }\n  }\n\n  toolbarDidInvokeAction(actionName) {\n    return this.invokeAction(actionName)\n  }\n\n  toolbarDidToggleAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.toggleCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidUpdateAttribute(attributeName, value) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.setCurrentAttribute(attributeName, value)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarDidRemoveAttribute(attributeName) {\n    this.recordFormattingUndoEntry(attributeName)\n    this.composition.removeCurrentAttribute(attributeName)\n    this.render()\n    if (!this.selectionFrozen) {\n      return this.editorElement.focus()\n    }\n  }\n\n  toolbarWillShowDialog(dialogElement) {\n    this.composition.expandSelectionForEditing()\n    return this.freezeSelection()\n  }\n\n  toolbarDidShowDialog(dialogName) {\n    return this.notifyEditorElement(\"toolbar-dialog-show\", { dialogName })\n  }\n\n  toolbarDidHideDialog(dialogName) {\n    this.thawSelection()\n    this.editorElement.focus()\n    return this.notifyEditorElement(\"toolbar-dialog-hide\", { dialogName })\n  }\n\n  // Selection\n\n  freezeSelection() {\n    if (!this.selectionFrozen) {\n      this.selectionManager.lock()\n      this.composition.freezeSelection()\n      this.selectionFrozen = true\n      return this.render()\n    }\n  }\n\n  thawSelection() {\n    if (this.selectionFrozen) {\n      this.composition.thawSelection()\n      this.selectionManager.unlock()\n      this.selectionFrozen = false\n      return this.render()\n    }\n  }\n\n  canInvokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return true\n    } else {\n      return !!this.actions[actionName]?.test?.call(this)\n    }\n  }\n\n  invokeAction(actionName) {\n    if (this.actionIsExternal(actionName)) {\n      return this.notifyEditorElement(\"action-invoke\", { actionName })\n    } else {\n      return this.actions[actionName]?.perform?.call(this)\n    }\n  }\n\n  actionIsExternal(actionName) {\n    return /^x-./.test(actionName)\n  }\n\n  getCurrentActions() {\n    const result = {}\n    for (const actionName in this.actions) {\n      result[actionName] = this.canInvokeAction(actionName)\n    }\n    return result\n  }\n\n  updateCurrentActions() {\n    const currentActions = this.getCurrentActions()\n    if (!objectsAreEqual(currentActions, this.currentActions)) {\n      this.currentActions = currentActions\n      this.toolbarController.updateActions(this.currentActions)\n      return this.notifyEditorElement(\"actions-change\", { actions: this.currentActions })\n    }\n  }\n\n  // Editor filters\n\n  runEditorFilters() {\n    let snapshot = this.composition.getSnapshot()\n\n    Array.from(this.editor.filters).forEach((filter) => {\n      const { document, selectedRange } = snapshot\n      snapshot = filter.call(this.editor, snapshot) || {}\n      if (!snapshot.document) {\n        snapshot.document = document\n      }\n      if (!snapshot.selectedRange) {\n        snapshot.selectedRange = selectedRange\n      }\n    })\n\n    if (!snapshotsAreEqual(snapshot, this.composition.getSnapshot())) {\n      return this.composition.loadSnapshot(snapshot)\n    }\n  }\n\n  // Private\n\n  updateInputElement() {\n    const element = this.compositionController.getSerializableElement()\n    const value = serializeToContentType(element, \"text/html\")\n    return this.editorElement.setInputElementValue(value)\n  }\n\n  notifyEditorElement(message, data) {\n    switch (message) {\n      case \"document-change\":\n        this.documentChangedSinceLastRender = true\n        break\n      case \"render\":\n        if (this.documentChangedSinceLastRender) {\n          this.documentChangedSinceLastRender = false\n          this.notifyEditorElement(\"change\")\n        }\n        break\n      case \"change\":\n      case \"attachment-add\":\n      case \"attachment-edit\":\n      case \"attachment-remove\":\n        this.updateInputElement()\n        break\n    }\n\n    return this.editorElement.notify(message, data)\n  }\n\n  removeAttachment(attachment) {\n    this.editor.recordUndoEntry(\"Delete Attachment\")\n    this.composition.removeAttachment(attachment)\n    return this.render()\n  }\n\n  recordFormattingUndoEntry(attributeName) {\n    const blockConfig = getBlockConfig(attributeName)\n    const locationRange = this.selectionManager.getLocationRange()\n    if (blockConfig || !rangeIsCollapsed(locationRange)) {\n      return this.editor.recordUndoEntry(\"Formatting\", { context: this.getUndoContext(), consolidatable: true })\n    }\n  }\n\n  recordTypingUndoEntry() {\n    return this.editor.recordUndoEntry(\"Typing\", {\n      context: this.getUndoContext(this.currentAttributes),\n      consolidatable: true,\n    })\n  }\n\n  getUndoContext(...context) {\n    return [ this.getLocationContext(), this.getTimeContext(), ...Array.from(context) ]\n  }\n\n  getLocationContext() {\n    const locationRange = this.selectionManager.getLocationRange()\n    if (rangeIsCollapsed(locationRange)) {\n      return locationRange[0].index\n    } else {\n      return locationRange\n    }\n  }\n\n  getTimeContext() {\n    if (config.undoInterval > 0) {\n      return Math.floor(new Date().getTime() / config.undoInterval)\n    } else {\n      return 0\n    }\n  }\n\n  isFocused() {\n    return this.editorElement === this.editorElement.ownerDocument?.activeElement\n  }\n\n  // Detect \"Cursor disappears sporadically\" Firefox bug.\n  // - https://bugzilla.mozilla.org/show_bug.cgi?id=226301\n  isFocusedInvisibly() {\n    return this.isFocused() && !this.getLocationRange()\n  }\n\n  get actions() {\n    return this.constructor.actions\n  }\n}\n\nEditorController.proxyMethod(\"getSelectionManager().setLocationRange\")\nEditorController.proxyMethod(\"getSelectionManager().getLocationRange\")\n","import config from \"trix/config\"\n\nimport { installDefaultCSSForTagName } from \"trix/core/helpers\"\n\ninstallDefaultCSSForTagName(\"trix-toolbar\", `\\\n%t {\n  display: block;\n}\n\n%t {\n  white-space: nowrap;\n}\n\n%t [data-trix-dialog] {\n  display: none;\n}\n\n%t [data-trix-dialog][data-trix-active] {\n  display: block;\n}\n\n%t [data-trix-dialog] [data-trix-validate]:invalid {\n  background-color: #ffdddd;\n}`)\n\nexport default class TrixToolbarElement extends HTMLElement {\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (this.innerHTML === \"\") {\n      this.innerHTML = config.toolbar.getDefaultHTML()\n    }\n  }\n}\n\nwindow.customElements.define(\"trix-toolbar\", TrixToolbarElement)\n","import config from \"trix/config\"\n\nimport {\n  findClosestElementFromNode,\n  handleEvent,\n  handleEventOnce,\n  installDefaultCSSForTagName,\n  makeElement,\n  triggerEvent,\n} from \"trix/core/helpers\"\n\nimport { attachmentSelector } from \"trix/config/attachments\"\nimport EditorController from \"trix/controllers/editor_controller\"\nimport \"trix/elements/trix_toolbar_element\"\n\nlet id = 0\n\n// Contenteditable support helpers\n\nconst autofocus = function(element) {\n  if (!document.querySelector(\":focus\")) {\n    if (element.hasAttribute(\"autofocus\") && document.querySelector(\"[autofocus]\") === element) {\n      return element.focus()\n    }\n  }\n}\n\nconst makeEditable = function(element) {\n  if (element.hasAttribute(\"contenteditable\")) {\n    return\n  }\n  element.setAttribute(\"contenteditable\", \"\")\n  return handleEventOnce(\"focus\", {\n    onElement: element,\n    withCallback() {\n      return configureContentEditable(element)\n    },\n  })\n}\n\nconst configureContentEditable = function(element) {\n  disableObjectResizing(element)\n  return setDefaultParagraphSeparator(element)\n}\n\nconst disableObjectResizing = function(element) {\n  if (document.queryCommandSupported?.(\"enableObjectResizing\")) {\n    document.execCommand(\"enableObjectResizing\", false, false)\n    return handleEvent(\"mscontrolselect\", { onElement: element, preventDefault: true })\n  }\n}\n\nconst setDefaultParagraphSeparator = function(element) {\n  if (document.queryCommandSupported?.(\"DefaultParagraphSeparator\")) {\n    const { tagName } = config.blockAttributes.default\n    if ([ \"div\", \"p\" ].includes(tagName)) {\n      return document.execCommand(\"DefaultParagraphSeparator\", false, tagName)\n    }\n  }\n}\n\n// Accessibility helpers\n\nconst addAccessibilityRole = function(element) {\n  if (element.hasAttribute(\"role\")) {\n    return\n  }\n  return element.setAttribute(\"role\", \"textbox\")\n}\n\nconst ensureAriaLabel = function(element) {\n  if (element.hasAttribute(\"aria-label\") || element.hasAttribute(\"aria-labelledby\")) {\n    return\n  }\n\n  const update = function() {\n    const texts = Array.from(element.labels).map((label) => {\n      if (!label.contains(element)) return label.textContent\n    }).filter(text => text)\n\n    const text = texts.join(\" \")\n    if (text) {\n      return element.setAttribute(\"aria-label\", text)\n    } else {\n      return element.removeAttribute(\"aria-label\")\n    }\n  }\n  update()\n  return handleEvent(\"focus\", { onElement: element, withCallback: update })\n}\n\n// Style\n\nconst cursorTargetStyles = (function() {\n  if (config.browser.forcesObjectResizing) {\n    return {\n      display: \"inline\",\n      width: \"auto\",\n    }\n  } else {\n    return {\n      display: \"inline-block\",\n      width: \"1px\",\n    }\n  }\n})()\n\ninstallDefaultCSSForTagName(\"trix-editor\", `\\\n%t {\n    display: block;\n}\n\n%t:empty:not(:focus)::before {\n    content: attr(placeholder);\n    color: graytext;\n    cursor: text;\n    pointer-events: none;\n    white-space: pre-line;\n}\n\n%t a[contenteditable=false] {\n    cursor: text;\n}\n\n%t img {\n    max-width: 100%;\n    height: auto;\n}\n\n%t ${attachmentSelector} figcaption textarea {\n    resize: none;\n}\n\n%t ${attachmentSelector} figcaption textarea.trix-autoresize-clone {\n    position: absolute;\n    left: -9999px;\n    max-height: 0px;\n}\n\n%t ${attachmentSelector} figcaption[data-trix-placeholder]:empty::before {\n    content: attr(data-trix-placeholder);\n    color: graytext;\n}\n\n%t [data-trix-cursor-target] {\n    display: ${cursorTargetStyles.display} !important;\n    width: ${cursorTargetStyles.width} !important;\n    padding: 0 !important;\n    margin: 0 !important;\n    border: none !important;\n}\n\n%t [data-trix-cursor-target=left] {\n    vertical-align: top !important;\n    margin-left: -1px !important;\n}\n\n%t [data-trix-cursor-target=right] {\n    vertical-align: bottom !important;\n    margin-right: -1px !important;\n}`)\n\nexport default class TrixEditorElement extends HTMLElement {\n\n  // Properties\n\n  get trixId() {\n    if (this.hasAttribute(\"trix-id\")) {\n      return this.getAttribute(\"trix-id\")\n    } else {\n      this.setAttribute(\"trix-id\", ++id)\n      return this.trixId\n    }\n  }\n\n  get labels() {\n    const labels = []\n    if (this.id && this.ownerDocument) {\n      labels.push(...Array.from(this.ownerDocument.querySelectorAll(`label[for='${this.id}']`) || []))\n    }\n\n    const label = findClosestElementFromNode(this, { matchingSelector: \"label\" })\n    if (label) {\n      if ([ this, null ].includes(label.control)) {\n        labels.push(label)\n      }\n    }\n\n    return labels\n  }\n\n  get toolbarElement() {\n    if (this.hasAttribute(\"toolbar\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"toolbar\"))\n    } else if (this.parentNode) {\n      const toolbarId = `trix-toolbar-${this.trixId}`\n      this.setAttribute(\"toolbar\", toolbarId)\n      const element = makeElement(\"trix-toolbar\", { id: toolbarId })\n      this.parentNode.insertBefore(element, this)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get form() {\n    return this.inputElement?.form\n  }\n\n  get inputElement() {\n    if (this.hasAttribute(\"input\")) {\n      return this.ownerDocument?.getElementById(this.getAttribute(\"input\"))\n    } else if (this.parentNode) {\n      const inputId = `trix-input-${this.trixId}`\n      this.setAttribute(\"input\", inputId)\n      const element = makeElement(\"input\", { type: \"hidden\", id: inputId })\n      this.parentNode.insertBefore(element, this.nextElementSibling)\n      return element\n    } else {\n      return undefined\n    }\n  }\n\n  get editor() {\n    return this.editorController?.editor\n  }\n\n  get name() {\n    return this.inputElement?.name\n  }\n\n  get value() {\n    return this.inputElement?.value\n  }\n\n  set value(defaultValue) {\n    this.defaultValue = defaultValue\n    this.editor?.loadHTML(this.defaultValue)\n  }\n\n  // Controller delegate methods\n\n  notify(message, data) {\n    if (this.editorController) {\n      return triggerEvent(`trix-${message}`, { onElement: this, attributes: data })\n    }\n  }\n\n  setInputElementValue(value) {\n    if (this.inputElement) {\n      this.inputElement.value = value\n    }\n  }\n\n  // Element lifecycle\n\n  connectedCallback() {\n    if (!this.hasAttribute(\"data-trix-internal\")) {\n      makeEditable(this)\n      addAccessibilityRole(this)\n      ensureAriaLabel(this)\n\n      if (!this.editorController) {\n        triggerEvent(\"trix-before-initialize\", { onElement: this })\n        this.editorController = new EditorController({\n          editorElement: this,\n          html: this.defaultValue = this.value,\n        })\n        requestAnimationFrame(() => triggerEvent(\"trix-initialize\", { onElement: this }))\n      }\n      this.editorController.registerSelectionManager()\n      this.registerResetListener()\n      this.registerClickListener()\n      autofocus(this)\n    }\n  }\n\n  disconnectedCallback() {\n    this.editorController?.unregisterSelectionManager()\n    this.unregisterResetListener()\n    return this.unregisterClickListener()\n  }\n\n  // Form support\n\n  registerResetListener() {\n    this.resetListener = this.resetBubbled.bind(this)\n    return window.addEventListener(\"reset\", this.resetListener, false)\n  }\n\n  unregisterResetListener() {\n    return window.removeEventListener(\"reset\", this.resetListener, false)\n  }\n\n  registerClickListener() {\n    this.clickListener = this.clickBubbled.bind(this)\n    return window.addEventListener(\"click\", this.clickListener, false)\n  }\n\n  unregisterClickListener() {\n    return window.removeEventListener(\"click\", this.clickListener, false)\n  }\n\n  resetBubbled(event) {\n    if (event.defaultPrevented) return\n    if (event.target !== this.form) return\n    return this.reset()\n  }\n\n  clickBubbled(event) {\n    if (event.defaultPrevented) return\n    if (this.contains(event.target)) return\n\n    const label = findClosestElementFromNode(event.target, { matchingSelector: \"label\" })\n    if (!label) return\n\n    if (!Array.from(this.labels).includes(label)) return\n\n    return this.focus()\n  }\n\n  reset() {\n    this.value = this.defaultValue\n  }\n}\n\nwindow.customElements.define(\"trix-editor\", TrixEditorElement)\n"],"names":["attachmentSelector","attributes","default","tagName","parse","quote","nestable","heading1","terminal","breakOnReturn","group","code","text","plaintext","bulletList","bullet","listAttribute","test","element","parentNode","this","numberList","number","attachmentGallery","exclusive","alignLeft","alignCenter","alignRight","_element$tagName","toLowerCase","browser$1","composesExistingText","navigator","userAgent","forcesObjectResizing","supportsInputEvents","InputEvent","property","prototype","lang$1","attachFiles","bold","bullets","byte","bytes","captionPlaceholder","indent","italic","link","numbers","outdent","redo","remove","strike","undo","unlink","url","urlPlaceholder","GB","KB","MB","PB","TB","sizes","lang","fileSize","prefix","precision","formatter","base","exp","Math","floor","log","withoutInsignificantZeros","pow","toFixed","replace","concat","ZERO_WIDTH_SPACE","NON_BREAKING_SPACE","extend","properties","key","value","html","document","documentElement","match","matches","handleEvent","eventName","onElement","matchingSelector","withCallback","inPhase","preventDefault","times","selector","useCapture","handler","event","destroy","target","findClosestElementFromNode","call","removeEventListener","addEventListener","triggerEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","elementMatchesSelector","nodeType","node","untilNode","Node","ELEMENT_NODE","closest","innerElementIsActive","activeElement","elementContainsNode","findChildIndexOfNode","_node","childIndex","previousSibling","removeNode","_node$parentNode","removeChild","walkTree","tree","onlyNodesOfType","usingFilter","expandEntityReferences","whatToShow","NodeFilter","SHOW_ELEMENT","SHOW_TEXT","SHOW_COMMENT","SHOW_ALL","createTreeWalker","makeElement","tag","options","createElement","editable","contenteditable","setAttribute","style","data","dataset","className","split","forEach","classList","add","textContent","childNodes","childNode","appendChild","blockTagNames","getBlockTagNames","blockAttributes","push","nodeIsBlockContainer","nodeIsBlockStartComment","firstChild","nodeProbablyIsBlockContainer","includes","nodeIsBlockStart","strict","arguments","length","undefined","nodeIsCommentNode","COMMENT_NODE","nodeIsCursorTarget","name","nodeIsTextNode","trixCursorTarget","nodeIsAttachmentElement","nodeIsEmptyTextNode","TEXT_NODE","textAttributes","inheritable","parser","window","getComputedStyle","fontWeight","fontStyle","href","groupTagName","getAttribute","frozen","backgroundColor","config","attachments","preview","presentation","caption","size","file","browser","css","attachment","attachmentCaption","attachmentCaptionEditor","attachmentMetadata","attachmentMetadataContainer","attachmentName","attachmentProgress","attachmentSize","attachmentToolbar","input","level2Enabled","getLevel","pickFiles","callback","type","multiple","hidden","id","fileInputId","files","getElementById","body","click","keyNames","toolbar","getDefaultHTML","undoInterval","BasicObject","proxyMethod","expression","toMethod","toProperty","optional","parseProxyMethodExpression","subject","object","_this$toMethod","_object","apply","proxyMethodExpressionPattern","Error","args","Function","RegExp","UTF16String","static","fromUCS2String","toString","ucs2String","ucs2decode","fromCodepoints","codepoints","ucs2encode","constructor","super","ucs2Length","offsetToUCS2Offset","offset","slice","max","offsetFromUCS2Offset","ucs2Offset","charAt","isEqualTo","box","toJSON","getCacheKey","hasArrayFrom","Array","from","_Array$from","hasStringCodePointAt","_$codePointAt","codePointAt","hasStringFromCodePoint","String","_String$fromCodePoint","fromCodePoint","string","map","char","output","counter","charCodeAt","extra","array","result","fromCharCode","join","TrixObject","fromJSONString","jsonString","fromJSON","JSON","hasSameConstructorAs","inspect","parts","contents","contentsForInspection","toJSONString","stringify","toUTF16String","arraysAreEqual","a","b","index","spliceArray","_len","_key","splice","RTL_PATTERN","getDirection","dir","dirName","form","supportsDirName","FormData","has","error","supportsDirSelector","get","trim","allAttributeNames","blockAttributeNames","textAttributeNames","listAttributeNames","getAllAttributeNames","getTextAttributeNames","getBlockAttributeNames","getBlockConfig","attributeName","Object","keys","getTextConfig","installDefaultCSSForTagName","defaultCSS","insertStyleElementForTagName","nonce","getCSPNonce","head","insertBefore","getMetaElement","querySelector","testTransferData","dataTransferIsPlainText","dataTransfer","getData","DOMParser","parseFromString","keyEventIsKeyboardCommand","platform","metaKey","ctrlKey","defer","fn","setTimeout","copyObject","objectsAreEqual","normalizeRange","range","isArray","copyValue","rangeIsCollapsed","start","end","rangeValuesAreEqual","rangesAreEqual","leftRange","rightRange","leftStart","leftEnd","rightStart","rightEnd","left","right","domRangesAreEqual","startContainer","startOffset","endContainer","endOffset","selectionChangeObserver","update","bind","run","selectionManagers","started","stop","registerSelectionManager","selectionManager","unregisterSelectionManager","filter","s","notifySelectionManagersOfSelectionChange","selectionDidChange","domRange","getDOMRange","reset","requestAnimationFrame","getDOMSelection","selection","getSelection","rangeCount","_getDOMSelection","getRangeAt","domRangeIsPrivate","setDOMRange","removeAllRanges","addRange","nodeIsPrivate","getPrototypeOf","normalizeSpaces","breakableWhitespacePattern","squishBreakableWhitespace","source","utf16StringDifferences","diffA","utf16StringDifference","utf16String","diffB","leftIndex","rightIndexA","rightIndexB","Hash","objects","hash","getKeys","getKeysCommonToHash","values","copy","merge","unbox","toArray","isEmpty","toObject","keyToRemove","sort","Operation","isPerforming","performing","hasPerformed","performed","hasSucceeded","succeeded","hasFailed","getPromise","promise","Promise","resolve","reject","perform","release","_this$promise","_this$promise$cancel","cancel","ImagePreloadOperation","image","Image","onload","width","naturalWidth","height","naturalHeight","onerror","src","Attachment","attachmentForFile","attributesForFile","setFile","filename","filesize","contentType","attachmentJSON","releaseFile","didChangeAttributes","attribute","hasAttribute","getAttributes","setAttributes","newAttributes","_this$previewDelegate","_this$previewDelegate2","_this$delegate","_this$delegate$attach","previewDelegate","attachmentDidChangeAttributes","delegate","isPreviewable","preloadURL","isPending","getURL","getHref","previewablePattern","getContentType","getType","hasContent","getFilename","getFilesize","getFormattedFilesize","getExtension","_this$getFilename$mat","getContent","getWidth","getHeight","getFile","preloadFile","releasePreloadedFile","getUploadProgress","uploadProgress","setUploadProgress","_this$uploadProgressD","_this$uploadProgressD2","uploadProgressDelegate","attachmentDidChangeUploadProgress","getPreviewURL","previewURL","preloadingURL","setPreviewURL","_this$previewDelegate3","_this$previewDelegate4","_this$delegate2","_this$delegate2$attac","attachmentDidChangePreviewURL","preload","fileObjectURL","URL","createObjectURL","revokeObjectURL","then","_ref","catch","ManagedAttachment","attachmentManager","requestRemovalOfAttachment","AttachmentManager","managedAttachments","manageAttachment","getAttachments","attachmentIsManaged","attachmentManagerDidRequestRemovalOfAttachment","unmanageAttachment","managedAttachment","Piece","types","pieceJSON","copyWithAttributes","getValue","copyWithAdditionalAttributes","copyWithoutAttribute","getAttributesHash","hasSameStringValueAsPiece","piece","hasSameAttributesAsPiece","isBlockBreak","isSerializable","canBeGrouped","canBeGroupedWith","getLength","canBeConsolidatedWith","AttachmentPiece","ensureAttachmentExclusivelyHasAttribute","removeProhibitedAttributes","permittedAttributes","getCaption","_piece$attachment","json","toConsole","registerType","StringPiece","normalizeNewlines","consolidateWith","splitAtOffset","SplittableList","indexOf","eachObject","insertObjectAtIndex","insertSplittableListAtIndex","splittableList","insertSplittableListAtPosition","position","splitObjectAtPosition","editObjectAtIndex","replaceObjectAtIndex","removeObjectAtIndex","getObjectAtIndex","getSplittableListInRange","rightIndex","splitObjectsAtRange","selectSplittableList","removeObjectsInRange","transformObjectsInRange","transform","transformedObjects","rightOuterIndex","leftInnerIndex","startOfRange","endOfRange","getObjectAtPosition","findIndexAndOffsetAtPosition","splitIndex","splitOffset","leftObject","rightObject","consolidate","pendingObject","_pendingObject$canBeC","_pendingObject","consolidateFromIndexToIndex","startIndex","endIndex","objectsInRange","consolidatedInRange","currentPosition","nextPosition","findPositionAtIndexAndOffset","currentIndex","getEndPosition","endPosition","objectArraysAreEqual","Text","textJSON","pieces","notEmpty","pieceList","copyWithPieceList","copyUsingObjectMap","objectMap","getPieces","find","appendText","insertTextAtPosition","removeTextAtRange","replaceTextAtRange","moveTextFromRangeToPosition","getTextAtRange","addAttributeAtRange","addAttributesAtRange","removeAttributeAtRange","setAttributesAtRange","getAttributesAtPosition","_this$pieceList$getOb","getCommonAttributes","fromCommonAttributesOfObjects","getCommonAttributesAtRange","getExpandedRangeForAttributeAtOffset","getStringAtRange","getStringAtPosition","startsWithString","endsWithString","getAttachmentPieces","getAttachmentAndPositionById","attachmentId","getAttachmentById","getRangeOfAttachment","attachmentAndPosition","updateAttributesForAttachment","_text$pieceList","eachPiece","getPieceAtPosition","toSerializableText","isRTL","Block","blockJSON","applyBlockBreakToText","block","copyWithText","copyWithoutText","copyWithoutAttributes","mappedText","addAttribute","expandAttribute","removeAttribute","removeLastValue","removeLastAttribute","getLastAttribute","getLastElement","getAttributeLevel","getAttributeAtLevel","level","hasAttributes","getLastNestableAttribute","getNestableAttributes","getNestingLevel","decreaseNestingLevel","increaseNestingLevel","lastIndexOf","getListItemAttributes","isListItem","_getBlockConfig","isTerminalBlock","_getBlockConfig2","breaksOnReturn","_getBlockConfig3","findLineBreakInDirectionFromPosition","direction","newlineText","textForStringWithAttributes","getTextWithoutBlockBreak","getBlockBreakPosition","textEndsInBlockBreak","depth","otherBlock","otherAttributes","otherAttribute","getListAttributeNames","unmarkExistingInnerBlockBreaksInText","addBlockBreakToText","modified","innerPieces","lastPiece","unmarkBlockBreakPiece","blockBreakText","blockBreak","endText","ObjectMap","Document","documentJSON","blocks","blockList","getBlockAtIndex","consolidateBlocks","copyUsingObjectsFromDocument","sourceDocument","getObjects","getBlocks","copyWithBaseBlockAttributes","replaceBlock","oldBlock","newBlock","insertDocumentAtRange","locationFromPosition","getBlockAtPosition","mergeDocumentAtRange","formattedDocument","startPosition","startLocation","baseBlockAttributes","getBaseBlockAttributes","trailingBlockAttributes","leadingBlockAttributes","blockCount","getBlockCount","firstBlock","firstText","insertTextAtRange","leftPosition","rightPosition","leftLocation","rightLocation","locationRangeFromRange","leftOffset","leftBlock","rightOffset","rightBlock","leftText","rightText","affectedBlockCount","getDocumentAtRange","movingRightward","eachBlockAtRange","textRange","eachBlock","getTextAtIndex","removeAttributeForAttachment","insertBlockBreakAtRange","applyBlockAttributeAtRange","expanded","expandRangeToLineBreaksAndSplitBlocks","blockConfig","removeLastListAttributeAtRange","exceptAttributeName","converted","convertLineBreaksToBlockBreaksInRange","removeBlockAttributesAtRange","removeLastTerminalAttributeAtRange","consolidateBlocksAtRange","lastAttributeName","endLocation","startBlock","positionFromLocation","endBlock","_this$getBlockAtIndex","getTextAtPosition","getCharacterAtPosition","getEditCount","editCount","getCommonAttributesAtPosition","attributesForBlock","commonAttributes","attributesLeft","inheritableAttributes","getRangeOfCommonAttributeAtPosition","blockIndex","lastAttributeIndex","min","attachmentPieces","iterable","getLocationRangeOfAttachment","getAttachmentPieceForAttachment","findRangesForBlockAttribute","ranges","findRangesForTextAttribute","withValue","location","locationRangeFromPosition","rangeFromLocationRange","locationRange","getTexts","toSerializableDocument","DEFAULT_ALLOWED_ATTRIBUTES","DEFAULT_FORBIDDEN_PROTOCOLS","DEFAULT_FORBIDDEN_ELEMENTS","HTMLSanitizer","sanitizer","sanitize","allowedAttributes","forbiddenProtocols","forbiddenElements","createBodyElementForHTML","sanitizeElements","normalizeListElementNesting","getHTML","innerHTML","getBody","walker","nodesToRemove","nextNode","currentNode","elementIsRemovable","sanitizeElement","protocol","querySelectorAll","listElement","previousElement","previousElementSibling","elementIsForbidden","elementIsntSerializable","doc","implementation","createHTMLDocument","pieceForString","parseTrixDataAttribute","HTMLParser","referenceElement","blockElements","processedElements","getDocument","createHiddenContainer","containerElement","nodeFilter","processNode","translateBlockElementMarginsToNewlines","removeHiddenContainer","cloneNode","display","nextSibling","isInsignificantTextNode","appendBlockForTextNode","processTextNode","appendBlockForElement","processElement","currentBlockElement","isBlockElement","appendStringWithAttributes","_this$currentBlock","getBlockAttributes","currentBlock","appendBlockForAttributesWithElement","elementIsBlockElement","currentBlockContainsElement","firstElementChild","parentBlockElement","findParentBlockElement","appendEmptyBlock","parentElement","_node$previousSibling","elementCanDisplayPreformattedText","stringEndsWithWhitespace","leftTrimBreakableWhitespace","getTextAttributes","appendAttachmentWithAttributes","isExtraBR","dimensions","parseInt","getImageDimensions","blockForAttributes","appendPiece","pieceForAttachment","appendStringToTextAtIndex","prependStringToTextAtIndex","unshift","configAttr","attributeInheritedFromBlock","blockElement","findBlockElementAncestors","styleProperty","attrConfig","_attrConfig$test","reverse","ancestors","stringIsAllBreakableWhitespace","nodeEndsWithNonWhitespace","lastChild","defaultMargin","getMarginOfDefaultBlockElement","margin","getMarginOfBlockElementAtIndex","top","bottom","getBlockElementMargin","whiteSpace","marginTop","marginBottom","FILTER_REJECT","FILTER_ACCEPT","LineBreakInsertion","composition","selectedRange","getSelectedRange","previousCharacter","nextCharacter","shouldInsertBlockBreak","shouldBreakFormattedBlock","shouldDecreaseListLevel","shouldPrependListItem","shouldRemoveLastBlockAttribute","Composition","currentAttributes","revision","setDocument","_this$delegate$compos","refreshAttachments","compositionDidChangeDocument","getSnapshot","loadSnapshot","_this$delegate2$compo","_this$delegate3","_this$delegate3$compo","compositionWillLoadSnapshot","setSelection","compositionDidLoadSnapshot","insertText","updatePosition","notifyDelegateOfInsertionAtRange","insertBlock","insertDocument","insertString","getCurrentTextAttributes","insertBlockBreak","insertLineBreak","insertion","decreaseListLevel","removeLastBlockAttribute","breakFormattedBlock","insertHTML","replaceHTML","getLocationRange","insertFile","insertFiles","_this$delegate4","compositionShouldAcceptFile","insertAttachments","insertAttachment","_config$attachments$t","attachmentText","textForAttachmentWithAttributes","shouldManageDeletingInDirection","shouldManageMovingCursorInDirection","deleteInDirection","deletingIntoPreviousBlock","selectionSpansBlocks","selectionIsCollapsed","canDecreaseBlockAttributeLevel","getBlock","decreaseBlockAttributeLevel","getExpandedRangeInDirection","getAttachmentAtRange","editAttachment","moveTextFromRange","removeAttachment","stopEditingAttachment","removeCurrentAttribute","insertPlaceholder","placeholderPosition","getPosition","selectPlaceholder","setSelectedRange","forgetPlaceholder","hasCurrentAttribute","toggleCurrentAttribute","setCurrentAttribute","canSetCurrentAttribute","canSetCurrentBlockAttribute","canSetCurrentTextAttribute","getSelectedDocument","setBlockAttribute","setTextAttribute","notifyDelegateOfCurrentAttributesChange","removeBlockAttribute","updateCurrentAttributes","removeTextAttribute","canDecreaseNestingLevel","_this$getBlock","canIncreaseNestingLevel","previousBlock","getPreviousBlock","arrayStartsWith","_this$getBlock2","_this$getBlock3","attributeLevel","ignoreLock","getCurrentAttributes","freezeSelection","thawSelection","hasFrozenSelection","_this$delegate5","compositionDidRequestChangingSelectionToLocationRange","getSelectionManager","setLocationRange","targetLocationRange","withTargetLocationRange","withTargetRange","withTargetDOMRange","createLocationRangeFromDOMRange","translateUTF16PositionFromOffset","editingAttachment","moveCursorInDirection","canEditAttachment","expandSelectionInDirection","expandSelectionForEditing","expandSelectionAroundCommonAttribute","selectionContainsAttachments","_this$getSelectedAtta","getSelectedAttachments","selectionIsInCursorTarget","positionIsCursorTarget","locationIsCursorTarget","positionIsBlockBreak","_this$document$getPie","_this$getSelectedDocu","added","removed","oldArray","newArray","existingValues","Set","currentValues","summarizeArrayChange","_this$delegate6","_this$delegate6$compo","compositionDidRemoveAttachment","_this$delegate7","_this$delegate7$compo","compositionDidAddAttachment","_this$delegate8","_this$delegate8$compo","compositionDidEditAttachment","_this$delegate9","_this$delegate9$compo","compositionDidChangeAttachmentPreviewURL","_this$delegate10","_this$delegate10$comp","compositionDidStartEditingAttachment","_this$delegate11","_this$delegate11$comp","compositionDidStopEditingAttachment","newDocument","OBJECT_REPLACEMENT_CHARACTER","_this$delegate12","_this$delegate12$comp","compositionDidChangeCurrentAttributes","_this$delegate13","_this$delegate13$comp","compositionDidPerformInsertionAtRange","utf16string","utf16position","UndoManager","undoEntries","redoEntries","recordUndoEntry","description","context","consolidatable","previousEntry","entryHasDescriptionAndContext","undoEntry","createEntry","pop","redoEntry","snapshot","canUndo","canRedo","entry","BLOCK_ATTRIBUTE_NAME","Filter","applyBlockAttribute","findRangesOfBlocks","findRangesOfPieces","moveSelectedRangeForward","DEFAULT_FILTERS","Editor","undoManager","filters","loadDocument","loadHTML","loadJSON","getClientRectAtPosition","getClientRectAtLocationRange","activateAttribute","attributeIsActive","canActivateAttribute","deactivateAttribute","LocationMapper","findLocationFromContainerAndOffset","container","foundBlock","attachmentElement","findAttachmentElementParentForNode","rejectAttachmentContents","nodeLength","findContainerAndOffsetFromLocation","nodeOffset","findNodeAndOffsetFromLocation","getSignificantNodesForIndex","nodes","acceptSignificantNodes","recordingNodes","rejectEmptyTextNodes","PointMapper","createDOMRangeFromPoint","x","y","caretPositionFromPoint","offsetNode","createRange","setStart","caretRangeFromPoint","createTextRange","originalDOMRange","moveToPoint","select","getClientRectsForDOMRange","getClientRects","SelectionManager","didMouseDown","locationMapper","pointMapper","lockCount","currentLocationRange","lockedLocationRange","createDOMRangeFromLocationRange","updateCurrentLocationRange","setLocationRangeFromPointRange","pointRange","getLocationAtPoint","lock","unlock","clearSelection","_getDOMRange","collapsed","selectionIsExpanded","domRangeWithinElement","pauseTemporarily","resumeHandlers","paused","resume","clearTimeout","resumeTimeout","_this$delegate$locati","locationRangeDidChange","rangeStart","rangeEnd","setEnd","point","_this$createLocationR","models","Cocument","Trix","VERSION","version","assign","ObjectGroup","ungroupedObjects","asTree","_object$canBeGrouped2","_object$canBeGrouped","_group$canBeGroupedWi","_group","groupObjects","getDepth","ElementStore","elements","getKey","trixStoreKey","ObjectView","childViews","rootView","getNodes","createNodes","invalidate","_this$parentView","parentView","invalidateViewForObject","_this$findViewForObje","findViewForObject","findOrCreateCachedChildView","viewClass","view","getCachedViewForObject","recordChildView","createChildView","cacheViewForObject","ObjectGroupView","getAllChildViews","views","childView","findElement","findElementForObject","getViewCache","isViewCachingEnabled","viewCache","shouldCacheViews","enableViewCaching","disableViewCaching","_this$getViewCache","cache","garbageCollectCachedViews","objectKeys","objectGroup","getChildViews","createContainerElement","AttachmentView","attachmentPiece","createContentNodes","innerElement","figure","getClassName","tabindex","createCaptionElement","progressElement","class","trixMutable","createCursorTarget","figcaption","captionConfig","getCaptionConfig","nameElement","createTextNode","sizeElement","names","extension","trixAttachment","trixContentType","trixId","trixAttributes","trixSerialize","htmlContainsTagName","findProgressElement","_this$findElement","div","PreviewableAttachmentView","refresh","updateAttributesForImage","serializedAttributes","storeKey","PieceView","textConfig","createAttachmentNodes","createStringNodes","_element","findInnerElement","_this$textConfig","substring","preserveSpaces","styles","pendingElement","isLast","isFirst","followsWhitespace","TextView","lastIndex","endsWithWhitespace","previousPiece","BlockView","createComment","textView","shouldAddExtraNewlineElement","DocumentView","render","sync","elementStore","shadowElement","isSynced","elementsHaveEqualHTML","fragment","createDocumentFragmentForSync","didSync","findStoredElements","createDocumentFragment","storedElement","replaceChild","otherElement","ignoreSpaces","unserializableAttributeNames","serializedAttributesAttribute","serializedAttributesSelector","blockCommentPattern","serializers","serializable","HTMLElement","el","mutableAttributeName","mutableSelector","childList","characterData","characterDataOldValue","subtree","MutationObserver","didMutate","observer","observe","disconnect","mutations","_this$delegate$elemen","findSignificantMutations","elementDidMutate","getMutationSummary","mutation","mutationIsSignificant","nodeIsMutable","nodesModifiedByMutation","nodeIsSignificant","addedNodes","removedNodes","getTextMutationSummary","additions","deletions","getTextChangesFromCharacterData","textChanges","getTextChangesFromChildList","addition","summary","textAdded","deleted","textDeleted","getMutationsByType","textRemoved","getTextForNodes","characterMutations","startMutation","endMutation","summarized","oldString","newString","summarizeStringChange","oldValue","Controller","FileVerificationOperation","reader","FileReader","abort","readAsArrayBuffer","InputController","mutationObserver","events","handlerFor","mutationSummary","editorWillSyncDocumentView","editorDidSyncDocumentView","requestRender","_this$delegate$inputC","inputControllerDidRequestRender","requestReparse","_this$delegate2$input","inputControllerDidRequestReparse","operations","all","handleInput","_this$responder","inputControllerWillAttachFiles","responder","defaultPrevented","inputControllerWillHandleInput","inputControllerDidHandleInput","createLinkHTML","outerHTML","pastedFileCount","Level0InputController","resetInputSummary","setInputSummary","inputSummary","isComposing","inputControllerDidAllowUnhandledInput","mutationIsExpected","preferDocument","mutationAdditionMatchesSummary","mutationDeletionMatchesSummary","didDelete","unexpectedNewlineAddition","unexpectedNewlineDeletion","_this$compositionInpu","textChanged","composedEmptyString","getEndData","compositionInput","getCompositionInput","CompositionInput","isEnded","_this$responder2","serializeSelectionToDataTransfer","_this$responder3","setData","dataTransferIsWritable","canAcceptDataTransfer","Files","getPastedHTMLUsingHiddenElement","pageXOffset","pageYOffset","opacity","focus","keydown","didInput","keyName","keyCode","_context2","modifier","_context","character","inputControllerDidReceiveKeyboardCommand","keypress","altKey","stringFromKeyEvent","_this$responder9","inputControllerWillPerformTyping","textInput","toUpperCase","_this$responder10","dragenter","dragstart","_this$delegate5$input","draggedRange","inputControllerDidStartDrag","dragover","draggingPoint","clientX","clientY","_this$delegate6$input","inputControllerDidReceiveDragOverPoint","dragend","_this$delegate7$input","inputControllerDidCancelDrag","drop","_event$dataTransfer","_this$responder11","_this$responder12","inputControllerWillMoveText","_this$responder13","cut","_this$responder14","clipboardData","inputControllerWillCutText","_this$responder15","paste","clipboard","testClipboardData","pasteEventIsCrippledSafariHTMLPaste","_this$responder16","inputControllerWillPaste","inputControllerDidPaste","_this$responder17","_this$delegate14","_this$responder18","_this$delegate15","_this$delegate16","_this$responder19","_this$delegate17","_clipboard$items","_clipboard$items$","_clipboard$items$$get","items","getAsFile","_this$delegate18","_this$responder20","_this$delegate19","extensionForFile","compositionstart","compositionupdate","compositionend","beforeinput","stopPropagation","backspace","_this$delegate20","delete","_this$delegate21","return","_this$delegate22","_this$responder21","tab","_this$responder22","_this$responder23","_this$responder24","_this$responder25","control","d","_this$delegate23","h","_this$delegate24","o","_this$delegate25","_this$responder26","shift","_this$delegate26","_this$responder27","_this$responder28","_this$responder29","alt","_this$delegate27","meta","_this$delegate28","_file$type","_file$type$match","which","charCode","hasPasteboardFlavor","hasReadableDynamicData","isExternalHTMLPaste","isExternalRichTextPaste","inputController","isSignificant","_this$responder5","_this$responder4","canApplyToDocument","_this$responder6","_this$responder7","_this$responder8","_this$data$start","_this$data$end","Level2InputController","scheduledRender","composing","reparse","scheduleRender","_this$afterRender","cancelAnimationFrame","afterRender","toggleAttributeIfSupported","inputControllerWillPerformFormatting","activateAttributeIfSupported","getTargetDOMRange","minLength","_this$event$getTarget","_this$event","targetRanges","getTargetRanges","staticRangeToRange","withEvent","command","keyboardCommandFromKeyEvent","shiftKey","_event$clipboardData","pasteEventHasFilesOnly","pasteEventHasPlainTextOnly","inputTypes","inputType","dragging","pointFromEvent","dragEventHasFiles","ArrowLeft","ArrowRight","Backspace","Tab","deleteByComposition","deleteByCut","deleteByDrag","deleteByDragRange","deleteCompositionText","deleteContent","deleteContentBackward","deleteContentForward","deleteEntireSoftLine","deleteHardLineBackward","deleteHardLineForward","deleteSoftLineBackward","deleteSoftLineForward","deleteWordBackward","deleteWordForward","formatBackColor","formatBold","formatFontColor","formatFontName","formatIndent","formatItalic","formatJustifyCenter","formatJustifyFull","formatJustifyLeft","formatJustifyRight","formatOutdent","formatRemove","_this$responder30","formatSetBlockTextDirection","formatSetInlineTextDirection","formatStrikeThrough","formatSubscript","formatSuperscript","formatUnderline","historyRedo","inputControllerWillPerformRedo","historyUndo","inputControllerWillPerformUndo","insertCompositionText","insertFromComposition","insertFromDrop","_this$responder31","insertFromPaste","_dataTransfer$files","_this$responder32","_this$responder33","_this$responder34","_this$responder35","insertFromYank","insertLink","insertOrderedList","insertParagraph","_this$responder36","insertReplacementText","_this$event$dataTrans","insertTranspose","insertUnorderedList","staticRange","undoable","commands","do","undos","AttachmentEditorController","title","trixAction","didClickToolbar","didClickActionButton","textarea","placeholder","textareaClone","tabIndex","autoresize","scrollHeight","didInputCaption","didKeyDownCaption","didChangeCaption","didBlurCaption","editingFigcaption","editCaption","install","makeElementMutable","addToolbar","installCaptionEditor","uninstall","savePendingCaption","didUninstallAttachmentEditor","pendingCaption","_this$delegate3$attac","attachmentEditorDidRequestUpdatingAttributesForAttachment","attachmentEditorDidRequestRemovingAttributeForAttachment","attachmentEditorDidRequestRemovalOfAttachment","_this$delegate5$attac","attachmentEditorDidRequestDeselectingAttachment","CompositionController","didFocus","didBlur","didClickAttachment","documentView","_this$blurPromise","focused","compositionControllerDidFocus","blurPromise","compositionControllerDidBlur","findAttachmentForElement","compositionControllerDidSelectAttachment","getSerializableElement","isEditingAttachment","_this$delegate4$compo","_this$delegate5$compo","canSyncDocumentView","compositionControllerWillSyncDocumentView","compositionControllerDidSyncDocumentView","compositionControllerDidRender","rerenderViewForObject","refreshViewCache","attachmentEditor","installAttachmentEditorForAttachment","_this$attachmentEdito","uninstallAttachmentEditor","_this$attachmentEdito2","compositionControllerWillUpdateAttachment","compositionControllerDidRequestRemovalOfAttachment","compositionControllerDidRequestDeselectingAttachment","attributeButtonSelector","actionButtonSelector","toolbarButtonSelector","dialogSelector","activeDialogSelector","dialogButtonSelector","dialogInputSelector","getInputForDialog","getAttributeName","getActionName","ToolbarController","didClickAttributeButton","didClickDialogButton","didKeyDownDialogInput","actions","resetDialogInputs","toolbarDidClickButton","actionName","getDialog","toggleDialog","toolbarDidInvokeAction","toolbarDidToggleAttribute","refreshAttributeButtons","dialogElement","dialog","hideDialog","updateActions","refreshActionButtons","eachActionButton","disabled","updateAttributes","eachAttributeButton","dialogIsVisible","applyKeyboardCommand","keyString","button","buttonKeys","buttonKeyString","dialogName","showDialog","toolbarWillShowDialog","disabledInput","toolbarDidShowDialog","willValidate","checkValidity","toolbarDidUpdateAttribute","toolbarDidRemoveAttribute","toolbarDidHideDialog","getDialogName","EditorController","editorElement","compositionController","toolbarController","toolbarElement","editor","notifyEditorElement","handlingInput","updateCurrentActions","pasting","pastedRange","attachmentLocationRange","loadingSnapshot","isFocused","requestedLocationRange","compositionRevisionWhenLocationRangeRequested","renderedCompositionRevision","runEditorFilters","isFocusedInvisibly","requestedRender","recordTypingUndoEntry","recordFormattingUndoEntry","locationRangeBeforeDrag","invokeAction","selectionFrozen","canInvokeAction","actionIsExternal","_this$actions$actionN","_this$actions$actionN2","_this$actions$actionN3","_this$actions$actionN4","getCurrentActions","currentActions","updateInputElement","serializer","serializeToContentType","setInputElementValue","message","documentChangedSinceLastRender","notify","getUndoContext","getLocationContext","getTimeContext","Date","getTime","_this$editorElement$o","ownerDocument","TrixToolbarElement","connectedCallback","customElements","define","makeEditable","handleEventOnce","configureContentEditable","setDefaultParagraphSeparator","disableObjectResizing","_document$queryComman","_document","queryCommandSupported","execCommand","_document$queryComman2","_document2","cursorTargetStyles","TrixEditorElement","labels","label","_this$ownerDocument","toolbarId","_this$inputElement","inputElement","_this$ownerDocument2","inputId","nextElementSibling","_this$editorControlle","editorController","_this$inputElement2","_this$inputElement3","defaultValue","_this$editor","addAccessibilityRole","texts","contains","ensureAriaLabel","registerResetListener","registerClickListener","autofocus","disconnectedCallback","_this$editorControlle2","unregisterResetListener","unregisterClickListener","resetListener","resetBubbled","clickListener","clickBubbled"],"mappings":"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"}